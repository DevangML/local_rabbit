[{"filePath":"/Users/devang/Documents/local_rabbit/server/.eslintrc.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/coverage/lcov-report/block-navigation.js","messages":[],"suppressedMessages":[{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":86,"endColumn":6,"fix":{"range":[21,24],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"wrap-iife","severity":2,"message":"Move the invocation into the parens that contain the function.","line":2,"column":18,"nodeType":"CallExpression","messageId":"moveInvocation","endLine":86,"endColumn":5,"fix":{"range":[2602,2605],"text":"())"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":3,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":3,"endColumn":5,"fix":{"range":[57,61],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":4,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":4,"endColumn":5,"fix":{"range":[124,128],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":4,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":4,"endColumn":76,"fix":{"range":[128,131],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":6,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":6,"endColumn":5,"fix":{"range":[201,205],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":7,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":7,"endColumn":5,"fix":{"range":[255,259],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":7,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":7,"endColumn":46,"fix":{"range":[259,262],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":9,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":9,"endColumn":5,"fix":{"range":[302,306],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":10,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":10,"endColumn":5,"fix":{"range":[387,391],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":10,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":10,"endColumn":80,"fix":{"range":[391,394],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":10,"column":23,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":10,"endColumn":79,"fix":{"range":[409,465],"text":"`:not(${  missingCoverageClasses.join('):not(')  }) > `"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":12,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":12,"endColumn":5,"fix":{"range":[499,503],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":13,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":13,"endColumn":5,"fix":{"range":[568,572],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":13,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":17,"endColumn":57,"fix":{"range":[572,575],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-linebreak","severity":2,"message":"There should be no line break before or after '='.","line":13,"column":18,"nodeType":"VariableDeclarator","messageId":"noLinebreak","endLine":13,"endColumn":19,"fix":{"range":[584,595],"text":" =        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":14,"column":9,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":17,"endColumn":56,"fix":{"range":[595,720],"text":"`${fileListingElements.join(', ') \n        }, ${ \n        notSelector \n        }${missingCoverageClasses.join(', ' + notSelector)}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-linebreak","severity":2,"message":"'+' should be placed at the beginning of the line.","line":14,"column":40,"nodeType":"BinaryExpression","messageId":"operatorAtBeginning","endLine":14,"endColumn":41,"fix":{"range":[625,636],"text":"\n        + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-linebreak","severity":2,"message":"'+' should be placed at the beginning of the line.","line":15,"column":14,"nodeType":"BinaryExpression","messageId":"operatorAtBeginning","endLine":15,"endColumn":15,"fix":{"range":[640,651],"text":"\n        + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-linebreak","severity":2,"message":"'+' should be placed at the beginning of the line.","line":16,"column":21,"nodeType":"BinaryExpression","messageId":"operatorAtBeginning","endLine":16,"endColumn":22,"fix":{"range":[662,673],"text":"\n        + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":17,"column":37,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":17,"endColumn":55,"fix":{"range":[701,719],"text":"`, ${  notSelector}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":19,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":19,"endColumn":5,"fix":{"range":[775,779],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":20,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":20,"endColumn":5,"fix":{"range":[816,820],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":20,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":20,"endColumn":71,"fix":{"range":[820,823],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":20,"column":35,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":43,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":22,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":22,"endColumn":5,"fix":{"range":[888,892],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":22,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":22,"endColumn":22,"fix":{"range":[892,895],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":24,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":24,"endColumn":5,"fix":{"range":[911,915],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":25,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":25,"endColumn":9,"fix":{"range":[945,953],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":26,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":26,"endColumn":13,"fix":{"range":[977,989],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":27,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":27,"endColumn":13,"fix":{"range":[1009,1021],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":28,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":28,"endColumn":9,"fix":{"range":[1055,1063],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":29,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":29,"endColumn":5,"fix":{"range":[1129,1133],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":31,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":31,"endColumn":5,"fix":{"range":[1136,1140],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":32,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":32,"endColumn":9,"fix":{"range":[1170,1178],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":33,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":33,"endColumn":9,"fix":{"range":[1198,1206],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":34,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":34,"endColumn":9,"fix":{"range":[1228,1236],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":35,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":35,"endColumn":13,"fix":{"range":[1289,1301],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":36,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":36,"endColumn":13,"fix":{"range":[1321,1333],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":37,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":37,"endColumn":13,"fix":{"range":[1350,1362],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":37,"column":29,"nodeType":"Property","messageId":"missing","endLine":38,"endColumn":1,"fix":{"range":[1370,1388],"text":"'center',\n        }"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":38,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":38,"endColumn":9,"fix":{"range":[1379,1387],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":39,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":39,"endColumn":5,"fix":{"range":[1391,1395],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":41,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":41,"endColumn":5,"fix":{"range":[1398,1402],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":42,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":42,"endColumn":9,"fix":{"range":[1428,1436],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":42,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":42,"endColumn":27,"fix":{"range":[1436,1439],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":43,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":43,"endColumn":9,"fix":{"range":[1455,1463],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":44,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":44,"endColumn":13,"fix":{"range":[1525,1537],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":45,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":45,"endColumn":9,"fix":{"range":[1585,1593],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":46,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":46,"endColumn":13,"fix":{"range":[1642,1654],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":47,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":47,"endColumn":9,"fix":{"range":[1684,1692],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":49,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":49,"endColumn":9,"fix":{"range":[1695,1703],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":50,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":50,"endColumn":5,"fix":{"range":[1727,1731],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":52,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":52,"endColumn":5,"fix":{"range":[1734,1738],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":53,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":53,"endColumn":9,"fix":{"range":[1760,1768],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":53,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":53,"endColumn":27,"fix":{"range":[1768,1771],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":55,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":55,"endColumn":9,"fix":{"range":[1788,1796],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":56,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":56,"endColumn":13,"fix":{"range":[1801,1813],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-linebreak","severity":2,"message":"'&&' should be placed at the beginning of the line.","line":56,"column":46,"nodeType":"LogicalExpression","messageId":"operatorAtBeginning","endLine":56,"endColumn":48,"fix":{"range":[1845,1861],"text":"\n            && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":58,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":58,"endColumn":9,"fix":{"range":[1911,1919],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":59,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":59,"endColumn":13,"fix":{"range":[1923,1935],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":60,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":60,"endColumn":9,"fix":{"range":[1965,1973],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":62,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":62,"endColumn":9,"fix":{"range":[1976,1984],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":63,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":63,"endColumn":5,"fix":{"range":[2008,2012],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":65,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":65,"endColumn":5,"fix":{"range":[2015,2019],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":66,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":66,"endColumn":9,"fix":{"range":[2049,2057],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":67,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":67,"endColumn":13,"fix":{"range":[2062,2074],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":67,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":67,"endColumn":21,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":67,"column":55,"nodeType":"Identifier","messageId":"undef","endLine":67,"endColumn":63,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-linebreak","severity":2,"message":"'&&' should be placed at the beginning of the line.","line":67,"column":78,"nodeType":"LogicalExpression","messageId":"operatorAtBeginning","endLine":67,"endColumn":80,"fix":{"range":[2138,2154],"text":"\n            && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":68,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":68,"endColumn":21,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":69,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":69,"endColumn":9,"fix":{"range":[2185,2193],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":70,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":70,"endColumn":13,"fix":{"range":[2197,2209],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":71,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":71,"endColumn":13,"fix":{"range":[2286,2298],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":72,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":72,"endColumn":9,"fix":{"range":[2306,2314],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":74,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":74,"endColumn":9,"fix":{"range":[2317,2325],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"default-case","severity":2,"message":"Expected a default case.","line":74,"column":9,"nodeType":"SwitchStatement","messageId":"missingDefaultCase","endLine":84,"endColumn":10,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":75,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":75,"endColumn":13,"fix":{"range":[2348,2360],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":76,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":76,"endColumn":13,"fix":{"range":[2374,2386],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":77,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":77,"endColumn":17,"fix":{"range":[2400,2416],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":78,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":78,"endColumn":17,"fix":{"range":[2428,2444],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":79,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":79,"endColumn":13,"fix":{"range":[2451,2463],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":80,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":80,"endColumn":13,"fix":{"range":[2477,2489],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":81,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":81,"endColumn":13,"fix":{"range":[2503,2515],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":82,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":82,"endColumn":17,"fix":{"range":[2529,2545],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":83,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":83,"endColumn":17,"fix":{"range":[2561,2577],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":84,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":84,"endColumn":9,"fix":{"range":[2584,2592],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":85,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":85,"endColumn":5,"fix":{"range":[2594,2598],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":87,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":87,"endColumn":7,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/coverage/lcov-report/prettify.js","messages":[],"suppressedMessages":[{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":7,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":34,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":35,"fix":{"range":[54,55],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":39,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":40,"fix":{"range":[60,60],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"wrap-iife","severity":2,"message":"Move the invocation into the parens that contain the function.","line":2,"column":40,"nodeType":"CallExpression","messageId":"moveInvocation","endLine":2,"endColumn":15785,"fix":{"range":[15802,15805],"text":"())"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":2,"column":41,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":2,"endColumn":49,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":2,"column":49,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":2,"endColumn":50,"fix":{"range":[69,69],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":51,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":52,"fix":{"range":[72,72],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":51,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15782,"fix":{"range":[71,71],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":52,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":105,"fix":{"range":[72,75],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":57,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":58,"fix":{"range":[77,78],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":59,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":103,"fix":{"range":[79,123],"text":"'break,continue,do,else,for,if,return,while'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":104,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":105,"fix":{"range":[125,125],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":105,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":272,"fix":{"range":[125,128],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":110,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":111,"fix":{"range":[130,131],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":113,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":114,"fix":{"range":[134,134],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":114,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":270,"fix":{"range":[134,290],"text":"'auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":271,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":272,"fix":{"range":[292,292],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":272,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":381,"fix":{"range":[292,295],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":277,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":278,"fix":{"range":[297,298],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":280,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":281,"fix":{"range":[301,301],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":281,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":379,"fix":{"range":[301,399],"text":"'catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":380,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":381,"fix":{"range":[401,401],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":381,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":646,"fix":{"range":[401,404],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":386,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":387,"fix":{"range":[406,407],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":389,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":390,"fix":{"range":[410,410],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":390,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":644,"fix":{"range":[410,664],"text":"'alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":645,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":646,"fix":{"range":[666,666],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":646,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":796,"fix":{"range":[666,669],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":651,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":652,"fix":{"range":[671,672],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":654,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":655,"fix":{"range":[675,675],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":655,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":794,"fix":{"range":[675,814],"text":"'abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":795,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":796,"fix":{"range":[816,816],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":796,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1071,"fix":{"range":[816,819],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":801,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":802,"fix":{"range":[821,822],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":804,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":805,"fix":{"range":[825,825],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":805,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":1069,"fix":{"range":[825,1089],"text":"'as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1070,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1071,"fix":{"range":[1091,1091],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1071,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1236,"fix":{"range":[1091,1094],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1076,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1077,"fix":{"range":[1096,1097],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":1077,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":1235,"fix":{"range":[1097,1255],"text":"'all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1235,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1236,"fix":{"range":[1256,1256],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1236,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1323,"fix":{"range":[1256,1259],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1241,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1242,"fix":{"range":[1261,1262],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1244,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1245,"fix":{"range":[1265,1265],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":1245,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":1321,"fix":{"range":[1265,1341],"text":"'debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1322,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1323,"fix":{"range":[1343,1343],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1323,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1506,"fix":{"range":[1343,1346],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1328,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1329,"fix":{"range":[1348,1349],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":1329,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":1505,"fix":{"range":[1349,1525],"text":"'caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1505,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1506,"fix":{"range":[1526,1526],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1506,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1667,"fix":{"range":[1526,1529],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1511,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1512,"fix":{"range":[1531,1532],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1514,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1515,"fix":{"range":[1535,1535],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":1515,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":1665,"fix":{"range":[1535,1685],"text":"'and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1666,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1667,"fix":{"range":[1687,1687],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1667,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1846,"fix":{"range":[1687,1690],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1672,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1673,"fix":{"range":[1692,1693],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1675,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1676,"fix":{"range":[1696,1696],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":1676,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":1844,"fix":{"range":[1696,1864],"text":"'alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1845,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1846,"fix":{"range":[1866,1866],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1846,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1919,"fix":{"range":[1866,1869],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1851,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1852,"fix":{"range":[1871,1872],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1854,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1855,"fix":{"range":[1875,1875],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":1855,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":1917,"fix":{"range":[1875,1937],"text":"'case,done,elif,esac,eval,fi,function,in,local,set,then,until'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1918,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1919,"fix":{"range":[1939,1939],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1919,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":1941,"fix":{"range":[1939,1942],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1924,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1925,"fix":{"range":[1944,1945],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1927,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1928,"fix":{"range":[1948,1948],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1929,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1930,"fix":{"range":[1950,1950],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1931,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1932,"fix":{"range":[1952,1952],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":1933,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":1934,"fix":{"range":[1953,1954],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1935,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1936,"fix":{"range":[1956,1956],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":1937,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":1938,"fix":{"range":[1958,1958],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":1940,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":1941,"fix":{"range":[1961,1961],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1941,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2060,"fix":{"range":[1961,1964],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":1946,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":1947,"fix":{"range":[1966,1967],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2059,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2060,"fix":{"range":[2080,2080],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2060,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2072,"fix":{"range":[2080,2083],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2065,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2066,"fix":{"range":[2085,2086],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2066,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2071,"fix":{"range":[2086,2091],"text":"'str'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2071,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2072,"fix":{"range":[2092,2092],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2072,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2084,"fix":{"range":[2092,2095],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2077,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2078,"fix":{"range":[2097,2098],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2078,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2083,"fix":{"range":[2098,2103],"text":"'kwd'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2083,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2084,"fix":{"range":[2104,2104],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2084,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2096,"fix":{"range":[2104,2107],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2089,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2090,"fix":{"range":[2109,2110],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2090,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2095,"fix":{"range":[2110,2115],"text":"'com'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2095,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2096,"fix":{"range":[2116,2116],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2096,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2108,"fix":{"range":[2116,2119],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2101,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2102,"fix":{"range":[2121,2122],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2102,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2107,"fix":{"range":[2122,2127],"text":"'typ'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2107,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2108,"fix":{"range":[2128,2128],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2108,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2120,"fix":{"range":[2128,2131],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2113,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2114,"fix":{"range":[2133,2134],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2114,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2119,"fix":{"range":[2134,2139],"text":"'lit'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2119,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2120,"fix":{"range":[2140,2140],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2120,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2132,"fix":{"range":[2140,2143],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2125,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2126,"fix":{"range":[2145,2146],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2126,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2131,"fix":{"range":[2146,2151],"text":"'pun'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2131,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2132,"fix":{"range":[2152,2152],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2132,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2144,"fix":{"range":[2152,2155],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2137,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2138,"fix":{"range":[2157,2158],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2138,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2143,"fix":{"range":[2158,2163],"text":"'pln'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2143,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2144,"fix":{"range":[2164,2164],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2144,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2156,"fix":{"range":[2164,2167],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2149,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2150,"fix":{"range":[2169,2170],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2150,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2155,"fix":{"range":[2170,2175],"text":"'tag'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2155,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2156,"fix":{"range":[2176,2176],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2156,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2168,"fix":{"range":[2176,2179],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2161,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2162,"fix":{"range":[2181,2182],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2162,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2167,"fix":{"range":[2182,2187],"text":"'dec'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2167,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2168,"fix":{"range":[2188,2188],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2168,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2180,"fix":{"range":[2188,2191],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2173,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2174,"fix":{"range":[2193,2194],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2174,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2179,"fix":{"range":[2194,2199],"text":"'src'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2179,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2180,"fix":{"range":[2200,2200],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2180,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2192,"fix":{"range":[2200,2203],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2185,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2186,"fix":{"range":[2205,2206],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2186,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2191,"fix":{"range":[2206,2211],"text":"'atn'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2191,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2192,"fix":{"range":[2212,2212],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2192,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2204,"fix":{"range":[2212,2215],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2197,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2198,"fix":{"range":[2217,2218],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2198,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2203,"fix":{"range":[2218,2223],"text":"'atv'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2203,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2204,"fix":{"range":[2224,2224],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2204,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2219,"fix":{"range":[2224,2227],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2209,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2210,"fix":{"range":[2229,2230],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2210,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2218,"fix":{"range":[2230,2238],"text":"'nocode'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2218,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2219,"fix":{"range":[2239,2239],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2219,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2525,"fix":{"range":[2239,2242],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2224,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2225,"fix":{"range":[2244,2245],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2225,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2524,"fix":{"range":[2245,2544],"text":"'(?:^^\\\\.?|[+-]|\\\\!|\\\\!=|\\\\!==|\\\\#|\\\\%|\\\\%=|&|&&|&&=|&=|\\\\(|\\\\*|\\\\*=|\\\\+=|\\\\,|\\\\-=|\\\\->|\\\\/|\\\\/=|:|::|\\\\;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\\\?|\\\\@|\\\\[|\\\\^|\\\\^=|\\\\^\\\\^|\\\\^\\\\^=|\\\\{|\\\\||\\\\|=|\\\\|\\\\||\\\\|\\\\|=|\\\\~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2524,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2525,"fix":{"range":[2545,2545],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2538,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2539,"fix":{"range":[2559,2559],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2538,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5372,"fix":{"range":[2558,2558],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2539,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2548,"fix":{"range":[2559,2562],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2545,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2546,"fix":{"range":[2565,2566],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2547,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2548,"fix":{"range":[2568,2568],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2548,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2560,"fix":{"range":[2568,2571],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2553,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2554,"fix":{"range":[2573,2574],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2559,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2560,"fix":{"range":[2580,2580],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2560,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2573,"fix":{"range":[2580,2583],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2566,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2567,"fix":{"range":[2586,2587],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2572,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2573,"fix":{"range":[2593,2593],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":2573,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2576,"fix":{"range":[2596,2596],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":2577,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":2595,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2577,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2595,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 5216 is used outside of binding context.","line":2,"column":2581,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2582,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2582,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2583,"fix":{"range":[2602,2603],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2584,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2585,"fix":{"range":[2605,2605],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'U' declared on line 2 column 5220 is used outside of binding context.","line":2,"column":2585,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2586,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2586,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2587,"fix":{"range":[2606,2607],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2595,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2596,"fix":{"range":[2616,2616],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 5216 is used outside of binding context.","line":2,"column":2596,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2597,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":2597,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":2598,"fix":{"range":[2617,2618],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'U' declared on line 2 column 5220 is used outside of binding context.","line":2,"column":2598,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2599,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2599,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2600,"fix":{"range":[2620,2620],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":2600,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":2603,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 5216 is used outside of binding context.","line":2,"column":2602,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2603,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2604,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2605,"fix":{"range":[2625,2625],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2604,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":2755,"fix":{"range":[2624,2624],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":2605,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":2617,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2605,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2617,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 5244 is used outside of binding context.","line":2,"column":2609,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2611,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2611,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2612,"fix":{"range":[2631,2632],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 5216 is used outside of binding context.","line":2,"column":2614,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2615,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2616,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2617,"fix":{"range":[2637,2637],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":2617,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2619,"fix":{"range":[2639,2639],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 5244 is used outside of binding context.","line":2,"column":2620,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2622,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2634,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2635,"fix":{"range":[2655,2655],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2634,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":2643,"fix":{"range":[2654,2654],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2637,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":2638,"fix":{"range":[2657,2658],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":2642,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2643,"fix":{"range":[2662,2662],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":2642,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":2643,"fix":{"range":[2662,2662],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":2643,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":2647,"fix":{"range":[2663,2663],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":2643,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2647,"fix":{"range":[2667,2667],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2647,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2648,"fix":{"range":[2668,2668],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":2648,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2650,"fix":{"range":[2670,2670],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":2648,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":2753,"fix":{"range":[2667,2774],"text":" if(/[a-z]/i.test(ae.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\"\"))){S=true;ac=false;break}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 5244 is used outside of binding context.","line":2,"column":2665,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":2667,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2724,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2725,"fix":{"range":[2745,2745],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2725,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2727,"fix":{"range":[2745,2747],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2730,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2731,"fix":{"range":[2751,2751],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2730,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":2753,"fix":{"range":[2750,2750],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2732,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":2733,"fix":{"range":[2752,2753],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2737,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2738,"fix":{"range":[2758,2758],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2740,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":2741,"fix":{"range":[2760,2761],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2746,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2747,"fix":{"range":[2767,2767],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":2752,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2753,"fix":{"range":[2772,2772],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":2752,"nodeType":"BreakStatement","messageId":"missingSemi","endLine":2,"endColumn":2753,"fix":{"range":[2772,2772],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":2753,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2754,"fix":{"range":[2773,2773],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":2754,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2755,"fix":{"range":[2774,2774],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":2755,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":2758,"fix":{"range":[2775,2775],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":2755,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":2791,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2755,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2791,"fix":{"range":[2775,2778],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2760,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2761,"fix":{"range":[2780,2781],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":2761,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":2762,"fix":{"range":[2782,2782],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":2761,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":2762,"fix":{"range":[2782,2782],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'b'.","line":2,"column":2764,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":2765,"fix":{"range":[2784,2784],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2765,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2766,"fix":{"range":[2786,2786],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 't'.","line":2,"column":2768,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":2769,"fix":{"range":[2788,2788],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2769,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2770,"fix":{"range":[2790,2790],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'n'.","line":2,"column":2772,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":2774,"fix":{"range":[2792,2792],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2774,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2775,"fix":{"range":[2795,2795],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'v'.","line":2,"column":2777,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":2779,"fix":{"range":[2797,2797],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2779,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2780,"fix":{"range":[2800,2800],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'f'.","line":2,"column":2782,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":2784,"fix":{"range":[2802,2802],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2784,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2785,"fix":{"range":[2805,2805],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'r'.","line":2,"column":2787,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":2789,"fix":{"range":[2807,2807],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":2789,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":2790,"fix":{"range":[2809,2809],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":2789,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":2790,"fix":{"range":[2809,2809],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2790,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2791,"fix":{"range":[2811,2811],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2806,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2807,"fix":{"range":[2827,2827],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2806,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3056,"fix":{"range":[2826,2826],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2807,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2831,"fix":{"range":[2827,2830],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2813,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2814,"fix":{"range":[2833,2834],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2830,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2831,"fix":{"range":[2851,2851],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":2831,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2833,"fix":{"range":[2853,2853],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '!==' must be spaced.","line":2,"column":2836,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":2839,"fix":{"range":[2856,2859],"text":" !== "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2842,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2843,"fix":{"range":[2863,2863],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2842,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":2853,"fix":{"range":[2862,2862],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":2852,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2853,"fix":{"range":[2872,2872],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":2852,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":2853,"fix":{"range":[2872,2872],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":2853,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":2856,"fix":{"range":[2873,2873],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":2853,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":2873,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":2853,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":2873,"fix":{"range":[2873,2876],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2859,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":2860,"fix":{"range":[2879,2880],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2872,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2873,"fix":{"range":[2893,2893],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":2875,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":2876,"fix":{"range":[2895,2896],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":2881,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":2882,"fix":{"range":[2902,2902],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":2882,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2884,"fix":{"range":[2904,2904],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2888,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2889,"fix":{"range":[2909,2909],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2888,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":2899,"fix":{"range":[2908,2908],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":2898,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2899,"fix":{"range":[2918,2918],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":2898,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":2899,"fix":{"range":[2918,2918],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":2899,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":2903,"fix":{"range":[2919,2919],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":2899,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2903,"fix":{"range":[2923,2923],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2903,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2904,"fix":{"range":[2924,2924],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-else-return","severity":2,"message":"Unnecessary 'else' after 'return'.","line":2,"column":2903,"nodeType":"BlockStatement","messageId":"unexpected","endLine":2,"endColumn":3055,"fix":{"range":[2811,3076],"text":"function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}if(\"0\"<=af&&af<=\"7\"){return parseInt(ah.substring(1),8)}else{if(af===\"u\"||af===\"x\"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":2904,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2906,"fix":{"range":[2926,2926],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":2904,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":3054,"fix":{"range":[2923,3075],"text":" if(\"0\"<=af&&af<=\"7\"){return parseInt(ah.substring(1),8)}else{if(af===\"u\"||af===\"x\"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of <=.","line":2,"column":2907,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":2914,"fix":{"range":[2927,2934],"text":"af>=\"0\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2907,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2910,"fix":{"range":[2927,2930],"text":"'0'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<=' must be spaced.","line":2,"column":2910,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":2912,"fix":{"range":[2930,2932],"text":" <= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":2914,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":2916,"fix":{"range":[2934,2936],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<=' must be spaced.","line":2,"column":2918,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":2920,"fix":{"range":[2938,2940],"text":" <= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2920,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2923,"fix":{"range":[2940,2943],"text":"'7'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2924,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2925,"fix":{"range":[2945,2945],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2924,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":2960,"fix":{"range":[2944,2944],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":2956,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":2957,"fix":{"range":[2977,2977],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":2959,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2960,"fix":{"range":[2979,2979],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":2959,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":2960,"fix":{"range":[2979,2979],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":2960,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":2964,"fix":{"range":[2980,2980],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":2960,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2964,"fix":{"range":[2984,2984],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2964,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2965,"fix":{"range":[2985,2985],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-else-return","severity":2,"message":"Unnecessary 'else' after 'return'.","line":2,"column":2964,"nodeType":"BlockStatement","messageId":"unexpected","endLine":2,"endColumn":3054,"fix":{"range":[2811,3076],"text":"function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}else{if(\"0\"<=af&&af<=\"7\"){return parseInt(ah.substring(1),8)}if(af===\"u\"||af===\"x\"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":2965,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":2967,"fix":{"range":[2987,2987],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":2965,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":3053,"fix":{"range":[2984,3074],"text":" if(af===\"u\"||af===\"x\"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":2970,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":2973,"fix":{"range":[2990,2993],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2973,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2976,"fix":{"range":[2993,2996],"text":"'u'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":2976,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":2978,"fix":{"range":[2996,2998],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":2980,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":2983,"fix":{"range":[3000,3003],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":2983,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":2986,"fix":{"range":[3003,3006],"text":"'x'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":2987,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":2988,"fix":{"range":[3008,3008],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":2987,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3024,"fix":{"range":[3007,3007],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3019,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3020,"fix":{"range":[3040,3040],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3023,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3024,"fix":{"range":[3043,3043],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3023,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":3024,"fix":{"range":[3043,3043],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":3024,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3028,"fix":{"range":[3044,3044],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":3024,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3028,"fix":{"range":[3048,3048],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3028,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3029,"fix":{"range":[3049,3049],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-else-return","severity":2,"message":"Unnecessary 'else' after 'return'.","line":2,"column":3028,"nodeType":"BlockStatement","messageId":"unexpected","endLine":2,"endColumn":3053,"fix":{"range":[2811,3076],"text":"function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}else{if(\"0\"<=af&&af<=\"7\"){return parseInt(ah.substring(1),8)}else{if(af===\"u\"||af===\"x\"){return parseInt(ah.substring(2),16)}return ah.charCodeAt(1)}}}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3052,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3053,"fix":{"range":[3072,3072],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3052,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":3053,"fix":{"range":[3072,3072],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3053,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3054,"fix":{"range":[3073,3073],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3054,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3055,"fix":{"range":[3074,3074],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3055,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3056,"fix":{"range":[3075,3075],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":3056,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3064,"fix":{"range":[3076,3076],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3070,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3071,"fix":{"range":[3091,3091],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3070,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3220,"fix":{"range":[3090,3090],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3071,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3073,"fix":{"range":[3093,3093],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3076,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3077,"fix":{"range":[3096,3097],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3080,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3081,"fix":{"range":[3101,3101],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3080,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3124,"fix":{"range":[3100,3100],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"return\".","line":2,"column":3081,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3087,"fix":{"range":[3107,3107],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3090,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3091,"fix":{"range":[3110,3111],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":3093,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":3094,"fix":{"range":[3113,3114],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3094,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3100,"fix":{"range":[3114,3120],"text":"'\\\\x0'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":3100,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":3101,"fix":{"range":[3120,3121],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3101,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3106,"fix":{"range":[3121,3126],"text":"'\\\\x'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":3107,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3108,"fix":{"range":[3127,3128],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3123,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3124,"fix":{"range":[3143,3143],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3123,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":3124,"fix":{"range":[3143,3143],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":3124,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3127,"fix":{"range":[3144,3144],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3124,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3155,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3124,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3155,"fix":{"range":[3144,3147],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3130,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3131,"fix":{"range":[3150,3151],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3154,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3155,"fix":{"range":[3175,3175],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3155,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3157,"fix":{"range":[3177,3177],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":3160,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3163,"fix":{"range":[3180,3183],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3163,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3167,"fix":{"range":[3183,3187],"text":"'\\\\'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":3167,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3169,"fix":{"range":[3187,3189],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":3171,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3174,"fix":{"range":[3191,3194],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3174,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3177,"fix":{"range":[3194,3197],"text":"'-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":3177,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3179,"fix":{"range":[3197,3199],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":3181,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3184,"fix":{"range":[3201,3204],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3184,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3187,"fix":{"range":[3204,3207],"text":"'['"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":3187,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3189,"fix":{"range":[3207,3209],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":3191,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3194,"fix":{"range":[3211,3214],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3194,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3197,"fix":{"range":[3214,3217],"text":"']'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3198,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3199,"fix":{"range":[3219,3219],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3198,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3210,"fix":{"range":[3218,3218],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3201,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":3202,"fix":{"range":[3221,3222],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":3202,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":3209,"fix":{"range":[3222,3229],"text":"`\\\\${ag}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3202,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3206,"fix":{"range":[3222,3226],"text":"'\\\\'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":3206,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3207,"fix":{"range":[3226,3227],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3209,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3210,"fix":{"range":[3229,3229],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3209,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3210,"fix":{"range":[3229,3229],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"return\".","line":2,"column":3210,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3216,"fix":{"range":[3230,3230],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3219,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3220,"fix":{"range":[3239,3239],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3219,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":3220,"fix":{"range":[3239,3239],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":3220,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3228,"fix":{"range":[3240,3240],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3234,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3235,"fix":{"range":[3255,3255],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3234,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4215,"fix":{"range":[3254,3254],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3235,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3394,"fix":{"range":[3255,3258],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3241,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3242,"fix":{"range":[3261,3262],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3256,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3257,"fix":{"range":[3277,3277],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '-' must be spaced.","line":2,"column":3266,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3267,"fix":{"range":[3286,3287],"text":" - "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-regex-literals","severity":2,"message":"Use a regular expression literal instead of the 'RegExp' constructor.","line":2,"column":3276,"nodeType":"NewExpression","messageId":"unexpectedRegExp","endLine":2,"endColumn":3392,"suggestions":[{"messageId":"replaceWithLiteral","fix":{"range":[3296,3412],"text":"/\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]/g"},"desc":"Replace with an equivalent regular expression literal."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3287,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3387,"fix":{"range":[3307,3407],"text":"'\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3387,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3388,"fix":{"range":[3408,3408],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3388,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3391,"fix":{"range":[3408,3411],"text":"'g'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3393,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3394,"fix":{"range":[3414,3414],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3394,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3404,"fix":{"range":[3414,3417],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3400,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3401,"fix":{"range":[3420,3421],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3403,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3404,"fix":{"range":[3424,3424],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3404,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3414,"fix":{"range":[3424,3427],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3410,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3411,"fix":{"range":[3430,3431],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3413,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3414,"fix":{"range":[3434,3434],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3414,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3433,"fix":{"range":[3434,3437],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3420,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3421,"fix":{"range":[3440,3441],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":3426,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3429,"fix":{"range":[3446,3449],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3429,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3432,"fix":{"range":[3449,3452],"text":"'^'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3432,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3433,"fix":{"range":[3453,3453],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":3433,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3436,"fix":{"range":[3456,3456],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3437,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3463,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3437,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3463,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3441,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3443,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3441,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3443,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3443,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3444,"fix":{"range":[3463,3464],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":3446,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":3447,"fix":{"range":[3466,3467],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":3448,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":3449,"fix":{"range":[3468,3469],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3450,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3451,"fix":{"range":[3471,3471],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3453,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3454,"fix":{"range":[3473,3474],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3463,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3464,"fix":{"range":[3484,3484],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3464,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3466,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3464,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3466,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3466,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3467,"fix":{"range":[3486,3487],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3469,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3470,"fix":{"range":[3490,3490],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":3470,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":3474,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3472,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3474,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3472,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3474,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3475,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3476,"fix":{"range":[3496,3496],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3475,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3797,"fix":{"range":[3495,3495],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3476,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3490,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3476,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3490,"fix":{"range":[3496,3499],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3482,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3483,"fix":{"range":[3502,3503],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3486,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3488,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3486,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3488,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3489,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3490,"fix":{"range":[3510,3510],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3490,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3492,"fix":{"range":[3512,3512],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3514,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3515,"fix":{"range":[3535,3535],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3514,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3527,"fix":{"range":[3534,3534],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3526,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3527,"fix":{"range":[3546,3546],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3526,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3527,"fix":{"range":[3546,3546],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":3527,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3531,"fix":{"range":[3547,3547],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":3527,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3531,"fix":{"range":[3551,3551],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3531,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3532,"fix":{"range":[3552,3552],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3532,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3546,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3532,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3546,"fix":{"range":[3552,3555],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3538,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3539,"fix":{"range":[3558,3559],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3545,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3546,"fix":{"range":[3566,3566],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3546,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3553,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3546,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3553,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3552,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3553,"fix":{"range":[3573,3573],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3553,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3555,"fix":{"range":[3575,3575],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3556,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3558,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3556,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3558,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":3558,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3559,"fix":{"range":[3578,3579],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3560,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3561,"fix":{"range":[3580,3581],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":3563,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3565,"fix":{"range":[3583,3585],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":3565,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":3579,"fix":{"range":[3585,3599],"text":"aq[ar+1]===\"-\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":3565,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":3568,"fix":{"range":[3585,3588],"text":"'-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":3568,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3571,"fix":{"range":[3588,3591],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3574,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3576,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3574,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3576,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":3576,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3577,"fix":{"range":[3596,3597],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3580,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3581,"fix":{"range":[3601,3601],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3580,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3603,"fix":{"range":[3600,3600],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3583,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":3584,"fix":{"range":[3603,3604],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3590,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3592,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3590,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3592,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":3592,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3593,"fix":{"range":[3612,3613],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3596,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3597,"fix":{"range":[3617,3617],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":3597,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3599,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3597,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3599,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+=' must be spaced.","line":2,"column":3599,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":3601,"fix":{"range":[3619,3621],"text":" += "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3602,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3603,"fix":{"range":[3622,3622],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3602,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3603,"fix":{"range":[3622,3622],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":3603,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3607,"fix":{"range":[3623,3623],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":3603,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3607,"fix":{"range":[3627,3627],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3607,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3608,"fix":{"range":[3628,3628],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3610,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":3611,"fix":{"range":[3630,3631],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3613,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3614,"fix":{"range":[3633,3633],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3613,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3614,"fix":{"range":[3633,3633],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3625,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3626,"fix":{"range":[3646,3646],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3630,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3631,"fix":{"range":[3651,3651],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3631,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3633,"fix":{"range":[3653,3653],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3638,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3639,"fix":{"range":[3658,3659],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":3641,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3643,"fix":{"range":[3661,3663],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>' must be spaced.","line":2,"column":3645,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3646,"fix":{"range":[3665,3666],"text":" > "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3651,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3652,"fix":{"range":[3672,3672],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3651,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3795,"fix":{"range":[3671,3671],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3652,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3654,"fix":{"range":[3674,3674],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3659,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3660,"fix":{"range":[3679,3680],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":3662,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3664,"fix":{"range":[3682,3684],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>' must be spaced.","line":2,"column":3666,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3667,"fix":{"range":[3686,3687],"text":" > "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3671,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3672,"fix":{"range":[3692,3692],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3671,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3721,"fix":{"range":[3691,3691],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":2,"column":3681,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":3699,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3692,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3693,"fix":{"range":[3713,3713],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '|' must be spaced.","line":2,"column":3696,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3697,"fix":{"range":[3716,3717],"text":" | "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3699,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3700,"fix":{"range":[3720,3720],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":2,"column":3700,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":3718,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3711,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3712,"fix":{"range":[3732,3732],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '|' must be spaced.","line":2,"column":3715,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3716,"fix":{"range":[3735,3736],"text":" | "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3720,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3721,"fix":{"range":[3740,3740],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3720,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3721,"fix":{"range":[3740,3740],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":3721,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3723,"fix":{"range":[3741,3741],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3721,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3723,"fix":{"range":[3743,3743],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3728,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3729,"fix":{"range":[3748,3749],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":3731,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3733,"fix":{"range":[3751,3753],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>' must be spaced.","line":2,"column":3735,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3736,"fix":{"range":[3755,3756],"text":" > "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3741,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3742,"fix":{"range":[3762,3762],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3741,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3794,"fix":{"range":[3761,3761],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '&'.","line":2,"column":3751,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":3770,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3762,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3763,"fix":{"range":[3783,3783],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&' must be spaced.","line":2,"column":3766,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3767,"fix":{"range":[3786,3787],"text":" & "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '~'.","line":2,"column":3767,"nodeType":"UnaryExpression","messageId":"unexpected","endLine":2,"endColumn":3770,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3770,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3771,"fix":{"range":[3791,3791],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '&'.","line":2,"column":3771,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":3791,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3782,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3783,"fix":{"range":[3803,3803],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&' must be spaced.","line":2,"column":3787,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3788,"fix":{"range":[3807,3808],"text":" & "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '~'.","line":2,"column":3788,"nodeType":"UnaryExpression","messageId":"unexpected","endLine":2,"endColumn":3791,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3793,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3794,"fix":{"range":[3813,3813],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3793,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3794,"fix":{"range":[3813,3813],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3794,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3795,"fix":{"range":[3814,3814],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3795,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3796,"fix":{"range":[3815,3815],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3796,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3797,"fix":{"range":[3816,3816],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":2,"column":3805,"nodeType":"FunctionExpression","messageId":"preferArrowCallback","endLine":2,"endColumn":3856,"fix":{"range":[3825,3840],"text":"(av,au) =>"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":2,"column":3805,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":2,"endColumn":3813,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":2,"column":3813,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":2,"endColumn":3814,"fix":{"range":[3833,3833],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3816,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3817,"fix":{"range":[3837,3837],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3820,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3821,"fix":{"range":[3841,3841],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3820,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3856,"fix":{"range":[3840,3840],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"return\".","line":2,"column":3821,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3827,"fix":{"range":[3847,3847],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '-' must be spaced.","line":2,"column":3833,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3834,"fix":{"range":[3853,3854],"text":" - "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":3840,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":3842,"fix":{"range":[3860,3862],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '-' must be spaced.","line":2,"column":3848,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3849,"fix":{"range":[3868,3869],"text":" - "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3855,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3856,"fix":{"range":[3875,3875],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3855,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":3856,"fix":{"range":[3875,3875],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3857,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3858,"fix":{"range":[3878,3878],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3858,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3868,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3858,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3868,"fix":{"range":[3878,3881],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3864,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3865,"fix":{"range":[3884,3885],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3867,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3868,"fix":{"range":[3888,3888],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3868,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3885,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3868,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3885,"fix":{"range":[3888,3891],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3874,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3875,"fix":{"range":[3894,3895],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3879,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3880,"fix":{"range":[3900,3900],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3884,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3885,"fix":{"range":[3905,3905],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":3885,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3888,"fix":{"range":[3908,3908],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3889,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3897,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3889,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3897,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ar' is already defined.","line":2,"column":3893,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":3895,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":3893,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3895,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3893,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3895,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3895,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3896,"fix":{"range":[3915,3916],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3897,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3898,"fix":{"range":[3918,3918],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":3898,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3900,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3898,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3900,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":3900,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3901,"fix":{"range":[3920,3921],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3910,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3911,"fix":{"range":[3931,3931],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":3911,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":3915,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":3913,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3915,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3913,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3915,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3916,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3917,"fix":{"range":[3937,3937],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3916,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3999,"fix":{"range":[3936,3936],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3917,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":3931,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3917,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":3931,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 4089 is used outside of binding context.","line":2,"column":3921,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3923,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3923,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":3924,"fix":{"range":[3943,3944],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":3927,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3929,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 4061 is used outside of binding context.","line":2,"column":3927,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3929,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":3930,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":3931,"fix":{"range":[3951,3951],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":3931,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3933,"fix":{"range":[3953,3953],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 4089 is used outside of binding context.","line":2,"column":3934,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3936,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<=' must be spaced.","line":2,"column":3939,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3941,"fix":{"range":[3959,3961],"text":" <= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":3946,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":3947,"fix":{"range":[3966,3967],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3949,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3950,"fix":{"range":[3970,3970],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":3949,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":3978,"fix":{"range":[3969,3969],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3955,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":3956,"fix":{"range":[3975,3976],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":3970,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":3971,"fix":{"range":[3991,3991],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 4089 is used outside of binding context.","line":2,"column":3971,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3973,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3977,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3978,"fix":{"range":[3997,3997],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3977,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3978,"fix":{"range":[3997,3997],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":3978,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":3982,"fix":{"range":[3998,3998],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":3978,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":3982,"fix":{"range":[4002,4002],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":3982,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3983,"fix":{"range":[4003,4003],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":3993,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":3994,"fix":{"range":[4013,4014],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 4089 is used outside of binding context.","line":2,"column":3994,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":3996,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3997,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3998,"fix":{"range":[4017,4017],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":3997,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":3998,"fix":{"range":[4017,4017],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":3998,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":3999,"fix":{"range":[4018,4018],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":3999,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4002,"fix":{"range":[4019,4019],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":3999,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4012,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":3999,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4012,"fix":{"range":[4019,4022],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4005,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4006,"fix":{"range":[4025,4026],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4007,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4010,"fix":{"range":[4027,4030],"text":"'['"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4011,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4012,"fix":{"range":[4032,4032],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4012,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4014,"fix":{"range":[4034,4034],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4018,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4019,"fix":{"range":[4039,4039],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4018,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4032,"fix":{"range":[4038,4038],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4027,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4030,"fix":{"range":[4047,4050],"text":"'^'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4031,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4032,"fix":{"range":[4051,4051],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4031,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4032,"fix":{"range":[4051,4051],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-spread","severity":2,"message":"Use the spread operator instead of '.apply()'.","line":2,"column":4032,"nodeType":"CallExpression","messageId":"preferSpread","endLine":2,"endColumn":4052,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":4048,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":4049,"fix":{"range":[4069,4069],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4052,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4053,"fix":{"range":[4073,4073],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":4053,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4056,"fix":{"range":[4076,4076],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4057,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4065,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4057,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4065,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ar' is already defined.","line":2,"column":4061,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4063,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":4061,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4063,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":4061,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4063,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4063,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4064,"fix":{"range":[4083,4084],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4065,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4066,"fix":{"range":[4086,4086],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":4066,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4068,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":4066,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4068,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":4068,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4069,"fix":{"range":[4088,4089],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4078,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4079,"fix":{"range":[4099,4099],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4079,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4083,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":4081,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4083,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":4081,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4083,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4084,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4085,"fix":{"range":[4105,4105],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4084,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4183,"fix":{"range":[4104,4104],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4085,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4099,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4085,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4099,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'at' is already defined.","line":2,"column":4089,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4091,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 3921 is used outside of binding context.","line":2,"column":4089,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4091,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4091,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4092,"fix":{"range":[4111,4112],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3441 is used outside of binding context.","line":2,"column":4095,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4097,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ar' declared on line 2 column 3893 is used outside of binding context.","line":2,"column":4095,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4097,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4098,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4099,"fix":{"range":[4119,4119],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 3921 is used outside of binding context.","line":2,"column":4109,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4111,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4116,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4117,"fix":{"range":[4137,4137],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4117,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4119,"fix":{"range":[4139,4139],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 3921 is used outside of binding context.","line":2,"column":4120,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4122,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>' must be spaced.","line":2,"column":4125,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4126,"fix":{"range":[4145,4146],"text":" > "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 3921 is used outside of binding context.","line":2,"column":4126,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4128,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4132,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4133,"fix":{"range":[4153,4153],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4132,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4182,"fix":{"range":[4152,4152],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4133,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4135,"fix":{"range":[4155,4155],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 3921 is used outside of binding context.","line":2,"column":4136,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4138,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":4141,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4142,"fix":{"range":[4161,4162],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>' must be spaced.","line":2,"column":4143,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4144,"fix":{"range":[4163,4164],"text":" > "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 3921 is used outside of binding context.","line":2,"column":4144,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4146,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4150,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4151,"fix":{"range":[4171,4171],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4150,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4164,"fix":{"range":[4170,4170],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4159,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4162,"fix":{"range":[4179,4182],"text":"'-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4163,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4164,"fix":{"range":[4183,4183],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4163,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4164,"fix":{"range":[4183,4183],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'at' declared on line 2 column 3921 is used outside of binding context.","line":2,"column":4174,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4176,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4181,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4182,"fix":{"range":[4201,4201],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4181,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4182,"fix":{"range":[4201,4201],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4182,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4183,"fix":{"range":[4202,4202],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4191,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4194,"fix":{"range":[4211,4214],"text":"']'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4195,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4196,"fix":{"range":[4216,4216],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4211,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4213,"fix":{"range":[4231,4233],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4214,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4215,"fix":{"range":[4234,4234],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4214,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":4215,"fix":{"range":[4234,4234],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":4215,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4223,"fix":{"range":[4235,4235],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4229,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4230,"fix":{"range":[4250,4250],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4229,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5198,"fix":{"range":[4249,4249],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4230,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4426,"fix":{"range":[4250,4253],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4236,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4237,"fix":{"range":[4256,4257],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-regex-literals","severity":2,"message":"Use a regular expression literal instead of the 'RegExp' constructor.","line":2,"column":4253,"nodeType":"NewExpression","messageId":"unexpectedRegExp","endLine":2,"endColumn":4424,"suggestions":[{"messageId":"replaceWithLiteral","fix":{"range":[4273,4444],"text":"/(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)/g"},"desc":"Replace with an equivalent regular expression literal."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4264,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4419,"fix":{"range":[4284,4439],"text":"'(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":4419,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":4420,"fix":{"range":[4440,4440],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4420,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4423,"fix":{"range":[4440,4443],"text":"'g'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4425,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4426,"fix":{"range":[4446,4446],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4426,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4443,"fix":{"range":[4446,4449],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4432,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4433,"fix":{"range":[4452,4453],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4442,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4443,"fix":{"range":[4463,4463],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4443,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4453,"fix":{"range":[4463,4466],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4449,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4450,"fix":{"range":[4469,4470],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4452,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4453,"fix":{"range":[4473,4473],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":4453,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4456,"fix":{"range":[4476,4476],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4457,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4470,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4457,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4470,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4461,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4463,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4461,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4463,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4461,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4463,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4461,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4463,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4463,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4464,"fix":{"range":[4483,4484],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":4465,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":4466,"fix":{"range":[4486,4486],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4670 is used outside of binding context.","line":2,"column":4466,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4468,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4466,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4468,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4468,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4469,"fix":{"range":[4488,4489],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4470,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4471,"fix":{"range":[4491,4491],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4471,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4473,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4471,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4473,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4471,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4473,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4471,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4473,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":4473,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4474,"fix":{"range":[4493,4494],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4476,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4477,"fix":{"range":[4497,4497],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4477,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4481,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4479,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4481,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4479,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4481,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4479,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4481,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4479,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4481,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4482,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4483,"fix":{"range":[4503,4503],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4482,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4596,"fix":{"range":[4502,4502],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4483,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4497,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4483,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4497,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":4487,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4489,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4487,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4489,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4489,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4490,"fix":{"range":[4509,4510],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4493,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4495,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4493,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4495,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4493,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4495,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4493,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4495,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4496,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4497,"fix":{"range":[4517,4517],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4497,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4499,"fix":{"range":[4519,4519],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":4500,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4502,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4500,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4502,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":4502,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4505,"fix":{"range":[4522,4525],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4505,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4508,"fix":{"range":[4525,4528],"text":"'('"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4509,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4510,"fix":{"range":[4530,4530],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4509,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4515,"fix":{"range":[4529,4529],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4510,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4514,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4670 is used outside of binding context.","line":2,"column":4512,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4514,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4512,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4514,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4514,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4515,"fix":{"range":[4534,4534],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4514,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4515,"fix":{"range":[4534,4534],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":4515,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4519,"fix":{"range":[4535,4535],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":4515,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4519,"fix":{"range":[4539,4539],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4519,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4520,"fix":{"range":[4540,4540],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4520,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4522,"fix":{"range":[4542,4542],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":4520,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":4594,"fix":{"range":[4539,4615],"text":" if(\"\\\\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){an[af]=-1}}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":4523,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":4542,"fix":{"range":[4543,4562],"text":"ag.charAt(0)===\"\\\\\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4523,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4527,"fix":{"range":[4543,4547],"text":"'\\\\'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":4527,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4530,"fix":{"range":[4547,4550],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":4530,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4532,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4530,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4532,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4543,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4544,"fix":{"range":[4564,4564],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4543,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4594,"fix":{"range":[4563,4563],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4544,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4568,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4544,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4568,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'af' declared on line 2 column 4789 is used outside of binding context.","line":2,"column":4548,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4550,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4550,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4551,"fix":{"range":[4570,4571],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":4552,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4554,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4552,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4554,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4567,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4568,"fix":{"range":[4588,4588],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4568,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4570,"fix":{"range":[4590,4590],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'af' declared on line 2 column 4789 is used outside of binding context.","line":2,"column":4571,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4573,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":4573,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":4575,"fix":{"range":[4593,4595],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'af' declared on line 2 column 4789 is used outside of binding context.","line":2,"column":4575,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4577,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<=' must be spaced.","line":2,"column":4577,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4579,"fix":{"range":[4597,4599],"text":" <= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4670 is used outside of binding context.","line":2,"column":4579,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4581,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4579,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4581,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4582,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4583,"fix":{"range":[4603,4603],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4582,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4593,"fix":{"range":[4602,4602],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'af' declared on line 2 column 4789 is used outside of binding context.","line":2,"column":4586,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4588,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4589,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":4590,"fix":{"range":[4609,4610],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4592,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4593,"fix":{"range":[4612,4612],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4592,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4593,"fix":{"range":[4612,4612],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4593,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4594,"fix":{"range":[4613,4613],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4594,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4595,"fix":{"range":[4614,4614],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4595,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4596,"fix":{"range":[4615,4615],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"for\".","line":2,"column":4596,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4599,"fix":{"range":[4616,4616],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":4596,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4599,"fix":{"range":[4619,4619],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4600,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4608,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4600,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4608,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ak' is already defined.","line":2,"column":4604,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4606,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4604,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4606,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4604,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4606,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4604,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4606,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4604,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4606,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4606,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4607,"fix":{"range":[4626,4627],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4608,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4609,"fix":{"range":[4629,4629],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4609,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4611,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4609,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4611,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4609,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4611,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4609,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4611,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":4611,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4612,"fix":{"range":[4631,4632],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4621,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4622,"fix":{"range":[4642,4642],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4622,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4626,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4624,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4626,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4624,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4626,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4624,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4626,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4624,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4626,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4627,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4628,"fix":{"range":[4648,4648],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4627,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4657,"fix":{"range":[4647,4647],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4628,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4630,"fix":{"range":[4650,4650],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":4631,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":4642,"fix":{"range":[4651,4662],"text":"an[ak]===-1"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":4633,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4636,"fix":{"range":[4653,4656],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4639,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4641,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4639,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4641,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4639,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4641,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4639,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4641,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4643,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4644,"fix":{"range":[4664,4664],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4643,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4656,"fix":{"range":[4663,4663],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4647,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4649,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4647,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4649,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4647,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4649,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4647,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4649,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4650,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":4651,"fix":{"range":[4670,4671],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4651,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4655,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4655,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4656,"fix":{"range":[4675,4675],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4655,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4656,"fix":{"range":[4675,4675],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4656,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4657,"fix":{"range":[4676,4676],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"for\".","line":2,"column":4657,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4660,"fix":{"range":[4677,4677],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":4657,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4660,"fix":{"range":[4680,4680],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4661,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4674,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4661,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4674,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ak' is already defined.","line":2,"column":4665,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4667,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4665,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4667,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4665,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4667,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4665,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4667,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4665,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4667,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4667,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4668,"fix":{"range":[4687,4688],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":4669,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":4670,"fix":{"range":[4690,4690],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'am' is already defined.","line":2,"column":4670,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4672,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4466 is used outside of binding context.","line":2,"column":4670,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4672,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4670,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4672,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4672,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4673,"fix":{"range":[4692,4693],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4674,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4675,"fix":{"range":[4695,4695],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4675,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4677,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4675,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4677,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4675,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4677,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4675,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4677,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":4677,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4678,"fix":{"range":[4697,4698],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4680,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4681,"fix":{"range":[4701,4701],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4681,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4685,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4683,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4685,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4683,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4685,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4683,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4685,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4683,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4685,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4686,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4687,"fix":{"range":[4707,4707],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4686,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4846,"fix":{"range":[4706,4706],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4687,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4701,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4687,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4701,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ag' is already defined.","line":2,"column":4691,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4693,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":4691,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4693,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4691,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4693,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4693,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4694,"fix":{"range":[4713,4714],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4697,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4699,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4697,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4699,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4697,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4699,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4697,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4699,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4700,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4701,"fix":{"range":[4721,4721],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4701,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4703,"fix":{"range":[4723,4723],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":4704,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4706,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4704,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4706,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":4706,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4709,"fix":{"range":[4726,4729],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4709,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4712,"fix":{"range":[4729,4732],"text":"'('"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4713,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4714,"fix":{"range":[4734,4734],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4713,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4756,"fix":{"range":[4733,4733],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4714,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4718,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4466 is used outside of binding context.","line":2,"column":4716,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4718,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4716,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4718,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4718,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4719,"fix":{"range":[4739,4739],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4719,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4721,"fix":{"range":[4741,4741],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4466 is used outside of binding context.","line":2,"column":4725,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4727,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4725,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4727,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":4728,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4731,"fix":{"range":[4748,4751],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4741,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4742,"fix":{"range":[4762,4762],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4741,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4755,"fix":{"range":[4761,4761],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4745,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4747,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4745,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4747,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4745,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4747,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4745,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4747,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4748,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":4749,"fix":{"range":[4768,4769],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4749,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4754,"fix":{"range":[4769,4774],"text":"'(?:'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4754,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4755,"fix":{"range":[4774,4774],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4754,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4755,"fix":{"range":[4774,4774],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4755,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4756,"fix":{"range":[4775,4775],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":4756,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4760,"fix":{"range":[4776,4776],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":4756,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4760,"fix":{"range":[4780,4780],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4760,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4761,"fix":{"range":[4781,4781],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4761,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4763,"fix":{"range":[4783,4783],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":4761,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":4844,"fix":{"range":[4780,4865],"text":" if(\"\\\\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){aj[ak]=\"\\\\\"+an[am]}}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":4764,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":4783,"fix":{"range":[4784,4803],"text":"ag.charAt(0)===\"\\\\\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4764,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4768,"fix":{"range":[4784,4788],"text":"'\\\\'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":4768,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4771,"fix":{"range":[4788,4791],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":4771,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4773,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4771,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4773,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4784,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4785,"fix":{"range":[4805,4805],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4784,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4844,"fix":{"range":[4804,4804],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4785,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4809,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4785,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4809,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'af' is already defined.","line":2,"column":4789,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4791,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'af' declared on line 2 column 4548 is used outside of binding context.","line":2,"column":4789,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4791,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4791,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4792,"fix":{"range":[4811,4812],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":4793,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4795,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4970 is used outside of binding context.","line":2,"column":4793,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4795,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4808,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4809,"fix":{"range":[4829,4829],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4809,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4811,"fix":{"range":[4831,4831],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'af' declared on line 2 column 4548 is used outside of binding context.","line":2,"column":4812,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4814,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":4814,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":4816,"fix":{"range":[4834,4836],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'af' declared on line 2 column 4548 is used outside of binding context.","line":2,"column":4816,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4818,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<=' must be spaced.","line":2,"column":4818,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4820,"fix":{"range":[4838,4840],"text":" <= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4466 is used outside of binding context.","line":2,"column":4820,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4822,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4820,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4822,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4823,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4824,"fix":{"range":[4844,4844],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4823,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4843,"fix":{"range":[4843,4843],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4827,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4829,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4827,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4829,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4827,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4829,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4827,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4829,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4830,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":4831,"fix":{"range":[4850,4851],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":4831,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":4842,"fix":{"range":[4851,4862],"text":"`\\\\${an[am]}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4831,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4835,"fix":{"range":[4851,4855],"text":"'\\\\'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":4835,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4836,"fix":{"range":[4855,4856],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4466 is used outside of binding context.","line":2,"column":4839,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4841,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4859 is used outside of binding context.","line":2,"column":4839,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4841,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4842,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4843,"fix":{"range":[4862,4862],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4842,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4843,"fix":{"range":[4862,4862],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4843,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4844,"fix":{"range":[4863,4863],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4844,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4845,"fix":{"range":[4864,4864],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4845,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4846,"fix":{"range":[4865,4865],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"for\".","line":2,"column":4846,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4849,"fix":{"range":[4866,4866],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":4846,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4849,"fix":{"range":[4869,4869],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4850,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4863,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4850,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4863,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ak' is already defined.","line":2,"column":4854,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4856,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4854,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4856,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4854,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4856,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4854,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4856,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4854,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4856,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4856,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4857,"fix":{"range":[4876,4877],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":4858,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":4859,"fix":{"range":[4879,4879],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'am' is already defined.","line":2,"column":4859,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4861,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4466 is used outside of binding context.","line":2,"column":4859,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4861,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'am' declared on line 2 column 4670 is used outside of binding context.","line":2,"column":4859,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4861,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4861,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4862,"fix":{"range":[4881,4882],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4863,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4864,"fix":{"range":[4884,4884],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4864,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4866,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4864,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4866,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4864,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4866,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4864,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4866,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":4866,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4867,"fix":{"range":[4886,4887],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4869,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4870,"fix":{"range":[4890,4890],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4870,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4874,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4872,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4874,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4872,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4874,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4872,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4874,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4872,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4874,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4875,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4876,"fix":{"range":[4896,4896],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4875,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4920,"fix":{"range":[4895,4895],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4876,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4878,"fix":{"range":[4898,4898],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":4879,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":4891,"fix":{"range":[4899,4911],"text":"aj[ak]===\"^\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4879,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4882,"fix":{"range":[4899,4902],"text":"'^'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":4882,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4885,"fix":{"range":[4902,4905],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4888,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4890,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4888,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4890,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4888,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4890,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4888,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4890,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":4891,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":4893,"fix":{"range":[4911,4913],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of !==.","line":2,"column":4893,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":4907,"fix":{"range":[4913,4927],"text":"aj[ak+1]!==\"^\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4893,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4896,"fix":{"range":[4913,4916],"text":"'^'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '!==' must be spaced.","line":2,"column":4896,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4899,"fix":{"range":[4916,4919],"text":" !== "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4902,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4904,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4902,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4904,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4902,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4904,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4902,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4904,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":4904,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4905,"fix":{"range":[4924,4925],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4908,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4909,"fix":{"range":[4929,4929],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4908,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":4919,"fix":{"range":[4928,4928],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4912,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4914,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4912,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4914,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4912,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4914,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4949 is used outside of binding context.","line":2,"column":4912,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4914,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4915,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":4916,"fix":{"range":[4935,4936],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":4916,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":4918,"fix":{"range":[4936,4938],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4918,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4919,"fix":{"range":[4938,4938],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":4918,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":4919,"fix":{"range":[4938,4938],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":4919,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4920,"fix":{"range":[4939,4939],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":4920,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":4922,"fix":{"range":[4940,4940],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":4920,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4922,"fix":{"range":[4942,4942],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":4936,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":4938,"fix":{"range":[4956,4958],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4940,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4941,"fix":{"range":[4961,4961],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4940,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5179,"fix":{"range":[4960,4960],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":4941,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":4944,"fix":{"range":[4964,4964],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4945,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4953,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4945,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4953,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ak' is already defined.","line":2,"column":4949,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4951,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4949,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4951,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4949,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4951,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4949,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4951,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4949,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4951,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4951,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4952,"fix":{"range":[4971,4972],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4953,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4954,"fix":{"range":[4974,4974],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4954,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4956,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4954,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4956,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4954,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4956,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4954,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4956,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":4956,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":4957,"fix":{"range":[4976,4977],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4959,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4960,"fix":{"range":[4980,4980],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":4960,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":4964,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4962,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4964,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4962,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4964,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4962,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4964,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4962,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4964,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":4965,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":4966,"fix":{"range":[4986,4986],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":4965,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5178,"fix":{"range":[4985,4985],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4966,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":4980,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4966,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":4980,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ag' is already defined.","line":2,"column":4970,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":4972,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":4970,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4972,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":4970,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4972,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4972,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4973,"fix":{"range":[4992,4993],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":4976,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4978,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":4976,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4978,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":4976,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4978,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":4976,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4978,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4979,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":4980,"fix":{"range":[5000,5000],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":4980,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5000,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":4980,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5000,"fix":{"range":[5000,5003],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":4986,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":4987,"fix":{"range":[5006,5007],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":4987,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4989,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":4987,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":4989,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":4999,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5000,"fix":{"range":[5020,5020],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5000,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5002,"fix":{"range":[5022,5022],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":5003,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5005,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":5003,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5005,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":5012,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5014,"fix":{"range":[5032,5034],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":5015,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":5017,"fix":{"range":[5035,5037],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":5019,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5022,"fix":{"range":[5039,5042],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5022,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5025,"fix":{"range":[5042,5045],"text":"'['"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5026,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5027,"fix":{"range":[5047,5047],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5026,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5040,"fix":{"range":[5046,5046],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":5030,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5032,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":5030,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5032,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":5030,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5032,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":5030,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5032,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5033,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5034,"fix":{"range":[5053,5054],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":5036,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5038,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":5036,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5038,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5039,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5040,"fix":{"range":[5059,5059],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5039,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5040,"fix":{"range":[5059,5059],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":5040,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5044,"fix":{"range":[5060,5060],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":5040,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5044,"fix":{"range":[5064,5064],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5044,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5045,"fix":{"range":[5065,5065],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5045,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5047,"fix":{"range":[5067,5067],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":5045,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":5176,"fix":{"range":[5064,5197],"text":" if(ai!==\"\\\\\"){aj[ak]=ag.replace(/[a-zA-Z]/g,function(ao){var ap=ao.charCodeAt(0);return\"[\"+String.fromCharCode(ap&~32,ap|32)+\"]\"})}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '!==' must be spaced.","line":2,"column":5050,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5053,"fix":{"range":[5070,5073],"text":" !== "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5053,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5057,"fix":{"range":[5073,5077],"text":"'\\\\'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5058,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5059,"fix":{"range":[5079,5079],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5058,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5176,"fix":{"range":[5078,5078],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4461 is used outside of binding context.","line":2,"column":5062,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5064,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4604 is used outside of binding context.","line":2,"column":5062,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5064,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4665 is used outside of binding context.","line":2,"column":5062,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5064,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ak' declared on line 2 column 4854 is used outside of binding context.","line":2,"column":5062,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5064,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5065,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5066,"fix":{"range":[5085,5086],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4487 is used outside of binding context.","line":2,"column":5066,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5068,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ag' declared on line 2 column 4691 is used outside of binding context.","line":2,"column":5066,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5068,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5088,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5089,"fix":{"range":[5109,5109],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":2,"column":5089,"nodeType":"FunctionExpression","messageId":"preferArrowCallback","endLine":2,"endColumn":5174,"fix":{"range":[5109,5121],"text":"(ao) =>"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":2,"column":5089,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":2,"endColumn":5097,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":2,"column":5097,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":2,"endColumn":5098,"fix":{"range":[5117,5117],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5101,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5102,"fix":{"range":[5122,5122],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5101,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5174,"fix":{"range":[5121,5121],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5102,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5126,"fix":{"range":[5122,5125],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5108,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5109,"fix":{"range":[5128,5129],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5125,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5126,"fix":{"range":[5146,5146],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"return\".","line":2,"column":5126,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5132,"fix":{"range":[5152,5152],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":5132,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":5173,"fix":{"range":[5152,5193],"text":"`[${String.fromCharCode(ap&~32,ap|32)}]`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5132,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5135,"fix":{"range":[5152,5155],"text":"'['"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":5135,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5136,"fix":{"range":[5155,5156],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '&'.","line":2,"column":5156,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":5162,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&' must be spaced.","line":2,"column":5158,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5159,"fix":{"range":[5178,5179],"text":" & "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '~'.","line":2,"column":5159,"nodeType":"UnaryExpression","messageId":"unexpected","endLine":2,"endColumn":5162,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5162,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5163,"fix":{"range":[5183,5183],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":2,"column":5163,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":5168,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '|' must be spaced.","line":2,"column":5165,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5166,"fix":{"range":[5185,5186],"text":" | "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":5169,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5170,"fix":{"range":[5189,5190],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5170,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5173,"fix":{"range":[5190,5193],"text":"']'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5173,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5174,"fix":{"range":[5193,5193],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5173,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":5174,"fix":{"range":[5193,5193],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5175,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5176,"fix":{"range":[5195,5195],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5175,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5176,"fix":{"range":[5195,5195],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5176,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5177,"fix":{"range":[5196,5196],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5177,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5178,"fix":{"range":[5197,5197],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5178,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5179,"fix":{"range":[5198,5198],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"return\".","line":2,"column":5179,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5185,"fix":{"range":[5199,5199],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5194,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5196,"fix":{"range":[5214,5216],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5197,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5198,"fix":{"range":[5217,5217],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5197,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":5198,"fix":{"range":[5217,5217],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":5198,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5201,"fix":{"range":[5218,5218],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":5198,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5208,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5198,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5208,"fix":{"range":[5218,5221],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5204,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5205,"fix":{"range":[5224,5225],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5207,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5208,"fix":{"range":[5228,5228],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":5208,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5211,"fix":{"range":[5231,5231],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":5212,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5230,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5212,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5230,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'V' is already defined.","line":2,"column":5216,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":5217,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 2581 is used outside of binding context.","line":2,"column":5216,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5217,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5217,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5218,"fix":{"range":[5237,5238],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5219,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5220,"fix":{"range":[5240,5240],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'U' is already defined.","line":2,"column":5220,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":5221,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'U' declared on line 2 column 2585 is used outside of binding context.","line":2,"column":5220,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5221,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5221,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5222,"fix":{"range":[5241,5242],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5230,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5231,"fix":{"range":[5251,5251],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 2581 is used outside of binding context.","line":2,"column":5231,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5232,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":5232,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5233,"fix":{"range":[5252,5253],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'U' declared on line 2 column 2585 is used outside of binding context.","line":2,"column":5233,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5234,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5234,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5235,"fix":{"range":[5255,5255],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":5235,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":5238,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 2581 is used outside of binding context.","line":2,"column":5237,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5238,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5239,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5240,"fix":{"range":[5260,5260],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5239,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5328,"fix":{"range":[5259,5259],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":5240,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5252,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5240,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5252,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'ae' is already defined.","line":2,"column":5244,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":5246,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 2609 is used outside of binding context.","line":2,"column":5244,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5246,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5246,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5247,"fix":{"range":[5266,5267],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'V' declared on line 2 column 2581 is used outside of binding context.","line":2,"column":5249,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5250,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5251,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5252,"fix":{"range":[5272,5272],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5252,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5254,"fix":{"range":[5274,5274],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 2609 is used outside of binding context.","line":2,"column":5255,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5257,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":5264,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":5266,"fix":{"range":[5284,5286],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 2609 is used outside of binding context.","line":2,"column":5266,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5268,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5279,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5280,"fix":{"range":[5300,5300],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5279,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5303,"fix":{"range":[5299,5299],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":5296,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":5301,"fix":{"range":[5316,5321],"text":"`${ae}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5296,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5298,"fix":{"range":[5316,5318],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":5298,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5299,"fix":{"range":[5318,5319],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 2609 is used outside of binding context.","line":2,"column":5299,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5301,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5302,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5303,"fix":{"range":[5322,5322],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5302,"nodeType":"ThrowStatement","messageId":"missingSemi","endLine":2,"endColumn":5303,"fix":{"range":[5322,5322],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":5311,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":5326,"fix":{"range":[5331,5346],"text":"`(?:${W(ae)})`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5311,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5316,"fix":{"range":[5331,5336],"text":"'(?:'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":5316,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5317,"fix":{"range":[5336,5337],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'ae' declared on line 2 column 2609 is used outside of binding context.","line":2,"column":5319,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":5321,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":5322,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5323,"fix":{"range":[5342,5343],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5323,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5326,"fix":{"range":[5343,5346],"text":"')'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5327,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5328,"fix":{"range":[5347,5347],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5327,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5328,"fix":{"range":[5347,5347],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"return\".","line":2,"column":5328,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5334,"fix":{"range":[5348,5348],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5354,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5357,"fix":{"range":[5374,5377],"text":"'|'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5358,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5359,"fix":{"range":[5379,5379],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":5361,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":5362,"fix":{"range":[5381,5382],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5362,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5366,"fix":{"range":[5382,5386],"text":"'gi'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":5366,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":5367,"fix":{"range":[5386,5387],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5367,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5370,"fix":{"range":[5387,5390],"text":"'g'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5371,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5372,"fix":{"range":[5391,5391],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5371,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":5372,"fix":{"range":[5391,5391],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":5372,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5380,"fix":{"range":[5392,5392],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5385,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5386,"fix":{"range":[5406,5406],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5385,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6109,"fix":{"range":[5405,5405],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5386,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5417,"fix":{"range":[5406,5409],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5391,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5392,"fix":{"range":[5411,5412],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5416,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5417,"fix":{"range":[5437,5437],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5417,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5426,"fix":{"range":[5437,5440],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5422,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5423,"fix":{"range":[5442,5443],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5425,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5426,"fix":{"range":[5446,5446],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5426,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5434,"fix":{"range":[5446,5449],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5431,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5432,"fix":{"range":[5451,5452],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5433,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5434,"fix":{"range":[5454,5454],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5434,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5443,"fix":{"range":[5454,5457],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5439,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5440,"fix":{"range":[5459,5460],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5442,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5443,"fix":{"range":[5463,5463],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5443,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5451,"fix":{"range":[5463,5466],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5448,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5449,"fix":{"range":[5468,5469],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5450,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5451,"fix":{"range":[5471,5471],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5451,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5457,"fix":{"range":[5471,5474],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5456,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5457,"fix":{"range":[5477,5477],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5457,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5459,"fix":{"range":[5479,5479],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5475,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5476,"fix":{"range":[5496,5496],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5475,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5504,"fix":{"range":[5495,5495],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5477,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5478,"fix":{"range":[5497,5498],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5503,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5504,"fix":{"range":[5523,5523],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5503,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5504,"fix":{"range":[5523,5523],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":5504,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5508,"fix":{"range":[5524,5524],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":5504,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5508,"fix":{"range":[5528,5528],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5508,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5509,"fix":{"range":[5529,5529],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5509,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5511,"fix":{"range":[5531,5531],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":5509,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":5617,"fix":{"range":[5528,5638],"text":" if(window.getComputedStyle){S=document.defaultView.getComputedStyle(V,null).getPropertyValue(\"white-space\")}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":5512,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":5518,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5536,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5537,"fix":{"range":[5557,5557],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5536,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5617,"fix":{"range":[5556,5556],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5538,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5539,"fix":{"range":[5558,5559],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":2,"column":5539,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":5547,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5578,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5579,"fix":{"range":[5599,5599],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5602,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5615,"fix":{"range":[5622,5635],"text":"'white-space'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5616,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5617,"fix":{"range":[5636,5636],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5616,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5617,"fix":{"range":[5636,5636],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5617,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5618,"fix":{"range":[5637,5637],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":5618,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5621,"fix":{"range":[5638,5638],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":5618,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5652,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5618,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5652,"fix":{"range":[5638,5641],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5623,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5624,"fix":{"range":[5643,5644],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":5625,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":5627,"fix":{"range":[5645,5647],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":5627,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":5651,"fix":{"range":[5647,5671],"text":"S.substring(0,3)===\"pre\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5627,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5632,"fix":{"range":[5647,5652],"text":"'pre'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":5632,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5635,"fix":{"range":[5652,5655],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5648,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5649,"fix":{"range":[5669,5669],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5651,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5652,"fix":{"range":[5672,5672],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5667,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5668,"fix":{"range":[5688,5688],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5667,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6047,"fix":{"range":[5687,5687],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"switch\".","line":2,"column":5668,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5674,"fix":{"range":[5694,5694],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"default-case","severity":2,"message":"Expected a default case.","line":2,"column":5668,"nodeType":"SwitchStatement","messageId":"missingDefaultCase","endLine":2,"endColumn":6046,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5687,"nodeType":"SwitchStatement","messageId":"missing","endLine":2,"endColumn":5688,"fix":{"range":[5708,5708],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5687,"nodeType":"Punctuator","messageId":"missingSpace","endLine":2,"endColumn":5688,"fix":{"range":[5707,5707],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"switch-colon-spacing","severity":2,"message":"Expected space(s) after this colon.","line":2,"column":5694,"nodeType":"SwitchCase","messageId":"expectedAfter","endLine":2,"endColumn":5695,"fix":{"range":[5715,5715],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5695,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5697,"fix":{"range":[5717,5717],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5719,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5720,"fix":{"range":[5740,5740],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5719,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5727,"fix":{"range":[5739,5739],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5726,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5727,"fix":{"range":[5746,5746],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5726,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":5727,"fix":{"range":[5746,5746],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"for\".","line":2,"column":5727,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5730,"fix":{"range":[5747,5747],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":5727,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5730,"fix":{"range":[5750,5750],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":5731,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5751,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5731,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5751,"fix":{"range":[5751,5754],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5737,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5738,"fix":{"range":[5757,5758],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5751,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5752,"fix":{"range":[5772,5772],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5754,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5755,"fix":{"range":[5775,5775],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5757,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5758,"fix":{"range":[5777,5778],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5773,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5774,"fix":{"range":[5794,5794],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5773,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5781,"fix":{"range":[5793,5793],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5780,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5781,"fix":{"range":[5800,5800],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5780,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5781,"fix":{"range":[5800,5800],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":5781,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5784,"fix":{"range":[5801,5801],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":5781,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5800,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5781,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5800,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5787,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5788,"fix":{"range":[5807,5808],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5799,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5800,"fix":{"range":[5820,5820],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5800,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5802,"fix":{"range":[5822,5822],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":5803,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":5812,"fix":{"range":[5823,5832],"text":"ad===\"BR\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5803,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5807,"fix":{"range":[5823,5827],"text":"'BR'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":5807,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5810,"fix":{"range":[5827,5830],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":5812,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":5814,"fix":{"range":[5832,5834],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":5814,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":5823,"fix":{"range":[5834,5843],"text":"ad===\"LI\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5814,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5818,"fix":{"range":[5834,5838],"text":"'LI'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":5818,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5821,"fix":{"range":[5838,5841],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5824,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5825,"fix":{"range":[5845,5845],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5824,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5864,"fix":{"range":[5844,5844],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5829,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5830,"fix":{"range":[5849,5850],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5830,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5834,"fix":{"range":[5850,5854],"text":"'\\n'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5834,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5835,"fix":{"range":[5855,5855],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":2,"column":5837,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":5841,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<<' must be spaced.","line":2,"column":5838,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5840,"fix":{"range":[5858,5860],"text":" << "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5842,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5843,"fix":{"range":[5862,5863],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":5843,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":5846,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5846,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5847,"fix":{"range":[5867,5867],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":2,"column":5849,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":5859,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":2,"column":5850,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":5856,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":5850,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":5853,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<<' must be spaced.","line":2,"column":5853,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5855,"fix":{"range":[5873,5875],"text":" << "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '|' must be spaced.","line":2,"column":5857,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":5858,"fix":{"range":[5877,5878],"text":" | "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5860,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5861,"fix":{"range":[5880,5881],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5863,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5864,"fix":{"range":[5883,5883],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5863,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5864,"fix":{"range":[5883,5883],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"break\".","line":2,"column":5864,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5869,"fix":{"range":[5884,5884],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5869,"nodeType":"BreakStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5870,"fix":{"range":[5890,5890],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"switch-colon-spacing","severity":2,"message":"Expected space(s) after this colon.","line":2,"column":5876,"nodeType":"SwitchCase","messageId":"expectedAfter","endLine":2,"endColumn":5877,"fix":{"range":[5897,5897],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"switch-colon-spacing","severity":2,"message":"Expected space(s) after this colon.","line":2,"column":5883,"nodeType":"SwitchCase","messageId":"expectedAfter","endLine":2,"endColumn":5884,"fix":{"range":[5904,5904],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":5884,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":5904,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":5884,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":5904,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5890,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":5891,"fix":{"range":[5910,5911],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5903,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":5904,"fix":{"range":[5924,5924],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5904,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5906,"fix":{"range":[5926,5926],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5917,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5918,"fix":{"range":[5938,5938],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5917,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6040,"fix":{"range":[5937,5937],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":5918,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5920,"fix":{"range":[5940,5940],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5924,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5925,"fix":{"range":[5945,5945],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":5924,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":5958,"fix":{"range":[5944,5944],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5927,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5928,"fix":{"range":[5947,5948],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5952,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5953,"fix":{"range":[5973,5973],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5953,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5956,"fix":{"range":[5973,5976],"text":"' '"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5957,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5958,"fix":{"range":[5977,5977],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5957,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5958,"fix":{"range":[5977,5977],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":5958,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":5962,"fix":{"range":[5978,5978],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":5958,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":5962,"fix":{"range":[5982,5982],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":5962,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5963,"fix":{"range":[5983,5983],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5965,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5966,"fix":{"range":[5985,5986],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":5985,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":5986,"fix":{"range":[6006,6006],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":5986,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":5990,"fix":{"range":[6006,6010],"text":"'\\n'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":5991,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":5992,"fix":{"range":[6011,6011],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":5991,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":5992,"fix":{"range":[6011,6011],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":5996,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":5997,"fix":{"range":[6016,6017],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":5999,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6000,"fix":{"range":[6020,6020],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":2,"column":6002,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":6006,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<<' must be spaced.","line":2,"column":6003,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6005,"fix":{"range":[6023,6025],"text":" << "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6007,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6008,"fix":{"range":[6027,6028],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6009,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6010,"fix":{"range":[6030,6030],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+=' must be spaced.","line":2,"column":6011,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6013,"fix":{"range":[6031,6033],"text":" += "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6022,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6023,"fix":{"range":[6043,6043],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":2,"column":6025,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":6035,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":2,"column":6026,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":6032,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":6026,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":6029,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<<' must be spaced.","line":2,"column":6029,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6031,"fix":{"range":[6049,6051],"text":" << "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '|' must be spaced.","line":2,"column":6033,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6034,"fix":{"range":[6053,6054],"text":" | "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6036,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6037,"fix":{"range":[6056,6057],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6039,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6040,"fix":{"range":[6059,6059],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6039,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":6040,"fix":{"range":[6059,6059],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"break\".","line":2,"column":6040,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6045,"fix":{"range":[6060,6060],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6045,"nodeType":"SwitchStatement","messageId":"missing","endLine":2,"endColumn":6046,"fix":{"range":[6065,6065],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6045,"nodeType":"BreakStatement","messageId":"missingSemi","endLine":2,"endColumn":6046,"fix":{"range":[6065,6065],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6046,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6047,"fix":{"range":[6066,6066],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6052,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6053,"fix":{"range":[6073,6073],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"return\".","line":2,"column":6053,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6059,"fix":{"range":[6079,6079],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":6059,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":6060,"fix":{"range":[6080,6080],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'sourceCode'.","line":2,"column":6071,"nodeType":"CallExpression","messageId":"missingValue","endLine":2,"endColumn":6072,"fix":{"range":[6091,6091],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":6078,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":6080,"fix":{"range":[6098,6100],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6095,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6096,"fix":{"range":[6116,6116],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":6096,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":6098,"fix":{"range":[6116,6118],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6099,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6100,"fix":{"range":[6120,6120],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'spans'.","line":2,"column":6106,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":6107,"fix":{"range":[6126,6126],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":6107,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":6108,"fix":{"range":[6127,6127],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6108,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6109,"fix":{"range":[6128,6128],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6108,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":6109,"fix":{"range":[6128,6128],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":6109,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6117,"fix":{"range":[6129,6129],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6121,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6122,"fix":{"range":[6142,6142],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6123,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6124,"fix":{"range":[6144,6144],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6125,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6126,"fix":{"range":[6146,6146],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6128,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6129,"fix":{"range":[6149,6149],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6128,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6209,"fix":{"range":[6148,6148],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":6129,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6131,"fix":{"range":[6151,6151],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6135,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6136,"fix":{"range":[6156,6156],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6135,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6143,"fix":{"range":[6155,6155],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6142,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6143,"fix":{"range":[6162,6162],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6142,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":6143,"fix":{"range":[6162,6162],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":6143,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6146,"fix":{"range":[6163,6163],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6143,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6174,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6143,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6174,"fix":{"range":[6163,6166],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6148,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6149,"fix":{"range":[6168,6169],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":6149,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":6150,"fix":{"range":[6170,6170],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'sourceCode'.","line":2,"column":6161,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":6162,"fix":{"range":[6181,6181],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6162,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6163,"fix":{"range":[6183,6183],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'basePos'.","line":2,"column":6171,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":6172,"fix":{"range":[6191,6191],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":6172,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":6173,"fix":{"range":[6192,6192],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6173,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6174,"fix":{"range":[6194,6194],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6178,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6179,"fix":{"range":[6199,6199],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-spread","severity":2,"message":"Use the spread operator instead of '.apply()'.","line":2,"column":6179,"nodeType":"CallExpression","messageId":"preferSpread","endLine":2,"endColumn":6208,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6193,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6194,"fix":{"range":[6214,6214],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6208,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6209,"fix":{"range":[6228,6228],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6208,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":6209,"fix":{"range":[6228,6228],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":6209,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6212,"fix":{"range":[6229,6229],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6209,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6220,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6209,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6220,"fix":{"range":[6229,6232],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6214,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6215,"fix":{"range":[6234,6235],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6219,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6220,"fix":{"range":[6240,6240],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6233,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6234,"fix":{"range":[6254,6254],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6233,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6388,"fix":{"range":[6253,6253],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6234,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6250,"fix":{"range":[6254,6257],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef-init","severity":2,"message":"It's not necessary to initialize 'V' to undefined.","line":2,"column":6238,"nodeType":"VariableDeclarator","messageId":"unnecessaryUndefinedInit","endLine":2,"endColumn":6249,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6239,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6240,"fix":{"range":[6259,6260],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6249,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6250,"fix":{"range":[6270,6270],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":6250,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6253,"fix":{"range":[6273,6273],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6254,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6272,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6254,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6272,"fix":{"range":[6274,6277],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6259,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6260,"fix":{"range":[6279,6280],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6272,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6273,"fix":{"range":[6293,6293],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6274,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6275,"fix":{"range":[6295,6295],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6276,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6277,"fix":{"range":[6296,6297],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6291,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6292,"fix":{"range":[6312,6312],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6291,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6363,"fix":{"range":[6311,6311],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6292,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6309,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6292,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6309,"fix":{"range":[6312,6315],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6297,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6298,"fix":{"range":[6317,6318],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6308,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6309,"fix":{"range":[6329,6329],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6310,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6311,"fix":{"range":[6330,6331],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":2,"column":6311,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":2,"endColumn":6362,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":6313,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6316,"fix":{"range":[6333,6336],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":6318,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6319,"fix":{"range":[6338,6339],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":6321,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6322,"fix":{"range":[6341,6342],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":6323,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6324,"fix":{"range":[6343,6344],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":6326,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6327,"fix":{"range":[6346,6347],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":2,"column":6327,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":2,"endColumn":6362,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":6329,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6332,"fix":{"range":[6349,6352],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":6334,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6335,"fix":{"range":[6354,6355],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":6355,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6356,"fix":{"range":[6375,6376],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":6357,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6358,"fix":{"range":[6377,6378],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":6360,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6361,"fix":{"range":[6380,6381],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6362,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6363,"fix":{"range":[6382,6382],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6362,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":6363,"fix":{"range":[6382,6382],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"return\".","line":2,"column":6363,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6369,"fix":{"range":[6383,6383],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":6371,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6374,"fix":{"range":[6391,6394],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":6375,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6376,"fix":{"range":[6395,6396],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":6385,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":6386,"fix":{"range":[6405,6406],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6387,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6388,"fix":{"range":[6407,6407],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6387,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":6388,"fix":{"range":[6407,6407],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":6388,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6396,"fix":{"range":[6408,6408],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6400,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6401,"fix":{"range":[6421,6421],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6403,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6404,"fix":{"range":[6424,6424],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6403,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7521,"fix":{"range":[6423,6423],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6404,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6413,"fix":{"range":[6424,6427],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6409,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6410,"fix":{"range":[6429,6430],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6412,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6413,"fix":{"range":[6433,6433],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6413,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6419,"fix":{"range":[6433,6436],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6418,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6419,"fix":{"range":[6439,6439],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"wrap-iife","severity":2,"message":"Move the invocation into the parens that contain the function.","line":2,"column":6419,"nodeType":"CallExpression","messageId":"moveInvocation","endLine":2,"endColumn":6700,"fix":{"range":[6717,6720],"text":"())"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":2,"column":6420,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":2,"endColumn":6428,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":2,"column":6428,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":2,"endColumn":6429,"fix":{"range":[6448,6448],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6430,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6431,"fix":{"range":[6451,6451],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6430,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6697,"fix":{"range":[6450,6450],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6431,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6450,"fix":{"range":[6451,6454],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6437,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6438,"fix":{"range":[6457,6458],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6449,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6450,"fix":{"range":[6470,6470],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6450,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6460,"fix":{"range":[6470,6473],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6456,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6457,"fix":{"range":[6476,6477],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6459,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6460,"fix":{"range":[6480,6480],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6460,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6470,"fix":{"range":[6480,6483],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6466,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6467,"fix":{"range":[6486,6487],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6469,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6470,"fix":{"range":[6490,6490],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":6470,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6473,"fix":{"range":[6493,6493],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6474,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6494,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6474,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6494,"fix":{"range":[6494,6497],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6480,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6481,"fix":{"range":[6500,6501],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6482,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6483,"fix":{"range":[6503,6503],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6484,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6485,"fix":{"range":[6504,6505],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6494,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6495,"fix":{"range":[6515,6515],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":6497,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6498,"fix":{"range":[6517,6518],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6499,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6500,"fix":{"range":[6520,6520],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":6500,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":6504,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6505,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6506,"fix":{"range":[6526,6526],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6505,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6666,"fix":{"range":[6525,6525],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6506,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6519,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6506,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6519,"fix":{"range":[6526,6529],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6511,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6512,"fix":{"range":[6531,6532],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6518,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6519,"fix":{"range":[6539,6539],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6519,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6531,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6519,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6531,"fix":{"range":[6539,6542],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6525,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6526,"fix":{"range":[6545,6546],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6530,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6531,"fix":{"range":[6551,6551],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":6531,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6533,"fix":{"range":[6553,6553],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6537,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6538,"fix":{"range":[6558,6558],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6537,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6589,"fix":{"range":[6557,6557],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":6538,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6541,"fix":{"range":[6561,6561],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6542,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6558,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6542,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6558,"fix":{"range":[6562,6565],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6548,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6549,"fix":{"range":[6568,6569],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6558,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6559,"fix":{"range":[6579,6579],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '--' used.","line":2,"column":6559,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":6563,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":6563,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6565,"fix":{"range":[6583,6585],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6568,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6569,"fix":{"range":[6589,6589],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6568,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6588,"fix":{"range":[6588,6588],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6585,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6586,"fix":{"range":[6605,6606],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6587,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6588,"fix":{"range":[6607,6607],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6587,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":6588,"fix":{"range":[6607,6607],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6588,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6589,"fix":{"range":[6608,6608],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":6589,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6592,"fix":{"range":[6609,6609],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6589,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6601,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6589,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6601,"fix":{"range":[6609,6612],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6595,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6596,"fix":{"range":[6615,6616],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6600,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6601,"fix":{"range":[6621,6621],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6601,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6614,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6601,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6614,"fix":{"range":[6621,6624],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6607,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6608,"fix":{"range":[6627,6628],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":6608,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":6613,"fix":{"range":[6628,6633],"text":"`${af}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":6608,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":6610,"fix":{"range":[6628,6630],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":6610,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6611,"fix":{"range":[6630,6631],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6613,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6614,"fix":{"range":[6634,6634],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":6614,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6616,"fix":{"range":[6636,6636],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":2,"column":6621,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":2,"endColumn":6635,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[6638,6656],"text":"Object.prototype.hasOwnProperty.call(ag, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6640,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6641,"fix":{"range":[6661,6661],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6640,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6665,"fix":{"range":[6660,6660],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6652,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6653,"fix":{"range":[6673,6673],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6659,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6660,"fix":{"range":[6679,6680],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6664,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6665,"fix":{"range":[6684,6684],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6664,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":6665,"fix":{"range":[6684,6684],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6665,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6666,"fix":{"range":[6685,6685],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6688,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6689,"fix":{"range":[6709,6709],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6690,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6691,"fix":{"range":[6710,6711],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6696,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6697,"fix":{"range":[6716,6716],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6696,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":6697,"fix":{"range":[6716,6716],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6700,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6701,"fix":{"range":[6721,6721],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6701,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6716,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6701,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6716,"fix":{"range":[6721,6724],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6706,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6707,"fix":{"range":[6726,6727],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6715,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6716,"fix":{"range":[6736,6736],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6716,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":7512,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6716,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7512,"fix":{"range":[6736,6739],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6721,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6722,"fix":{"range":[6741,6742],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":2,"column":6722,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":2,"endColumn":6730,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":2,"column":6730,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":2,"endColumn":6731,"fix":{"range":[6750,6750],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6734,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6735,"fix":{"range":[6755,6755],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6734,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7511,"fix":{"range":[6754,6754],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":2,"column":6735,"nodeType":"VariableDeclaration","messageId":"split","endLine":2,"endColumn":6768,"fix":{"range":[6774,6775],"text":"; var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6735,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6768,"fix":{"range":[6755,6758],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6740,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6741,"fix":{"range":[6760,6761],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6754,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6755,"fix":{"range":[6775,6775],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var-declaration-per-line","severity":2,"message":"Expected variable declaration to be on a new line.","line":2,"column":6755,"nodeType":"VariableDeclaration","messageId":"expectVarOnNewline","endLine":2,"endColumn":6767,"fix":{"range":[6775,6775],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6756,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6757,"fix":{"range":[6776,6777],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6767,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6768,"fix":{"range":[6788,6788],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6768,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6781,"fix":{"range":[6788,6791],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6774,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6775,"fix":{"range":[6794,6795],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6777,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6778,"fix":{"range":[6798,6798],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6780,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6781,"fix":{"range":[6801,6801],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6781,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6790,"fix":{"range":[6801,6804],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6787,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6788,"fix":{"range":[6807,6808],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6789,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6790,"fix":{"range":[6810,6810],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6790,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6812,"fix":{"range":[6810,6813],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6796,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6797,"fix":{"range":[6816,6817],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":6807,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":6809,"fix":{"range":[6827,6829],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6811,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6812,"fix":{"range":[6832,6832],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6812,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6822,"fix":{"range":[6832,6835],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6818,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6819,"fix":{"range":[6838,6839],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6821,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6822,"fix":{"range":[6842,6842],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":6822,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6825,"fix":{"range":[6845,6845],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6826,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6847,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6826,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6847,"fix":{"range":[6846,6849],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6832,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6833,"fix":{"range":[6852,6853],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":6834,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":6835,"fix":{"range":[6855,6855],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6837,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6838,"fix":{"range":[6857,6858],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6847,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6848,"fix":{"range":[6868,6868],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":6850,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6851,"fix":{"range":[6870,6871],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6853,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6854,"fix":{"range":[6874,6874],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":6854,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":6858,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6859,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6860,"fix":{"range":[6880,6880],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6859,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7493,"fix":{"range":[6879,6879],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6860,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6874,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6860,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6874,"fix":{"range":[6880,6883],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6866,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6867,"fix":{"range":[6886,6887],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6873,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6874,"fix":{"range":[6894,6894],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6874,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6888,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6874,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6888,"fix":{"range":[6894,6897],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6880,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6881,"fix":{"range":[6900,6901],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6887,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6888,"fix":{"range":[6908,6908],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6888,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6902,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6888,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6902,"fix":{"range":[6908,6911],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6894,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6895,"fix":{"range":[6914,6915],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-void","severity":2,"message":"Expected 'undefined' and instead saw 'void'.","line":2,"column":6895,"nodeType":"UnaryExpression","messageId":"noVoid","endLine":2,"endColumn":6901,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6901,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6902,"fix":{"range":[6922,6922],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6902,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6909,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6902,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6909,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6908,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6909,"fix":{"range":[6929,6929],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":6909,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6911,"fix":{"range":[6931,6931],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":6921,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":6924,"fix":{"range":[6941,6944],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":6924,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":6932,"fix":{"range":[6944,6952],"text":"'string'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6933,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6934,"fix":{"range":[6954,6954],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6933,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":6943,"fix":{"range":[6953,6953],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6936,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6937,"fix":{"range":[6956,6957],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":6942,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6943,"fix":{"range":[6962,6962],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":6942,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":6943,"fix":{"range":[6962,6962],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":6943,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":6947,"fix":{"range":[6963,6963],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":6943,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6947,"fix":{"range":[6967,6967],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6947,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6948,"fix":{"range":[6968,6968],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":6948,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":6971,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":6948,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":6971,"fix":{"range":[6968,6971],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6954,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":6955,"fix":{"range":[6974,6975],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6970,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6971,"fix":{"range":[6991,6991],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":6971,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":6973,"fix":{"range":[6993,6993],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":6977,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":6978,"fix":{"range":[6998,6998],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":6977,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7006,"fix":{"range":[6997,6997],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6980,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":6981,"fix":{"range":[7000,7001],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":6996,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":6997,"fix":{"range":[7017,7017],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-destructuring","severity":2,"message":"Use array destructuring.","line":2,"column":6997,"nodeType":"AssignmentExpression","messageId":"preferDestructuring","endLine":2,"endColumn":7005,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":6999,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7000,"fix":{"range":[7019,7020],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7005,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7006,"fix":{"range":[7025,7025],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7005,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7006,"fix":{"range":[7025,7025],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":7006,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7010,"fix":{"range":[7026,7026],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":7006,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7010,"fix":{"range":[7030,7030],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7010,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7011,"fix":{"range":[7031,7031],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":7011,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7014,"fix":{"range":[7034,7034],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":7015,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":7023,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":7015,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7023,"fix":{"range":[7035,7038],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7021,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7022,"fix":{"range":[7041,7042],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7023,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7024,"fix":{"range":[7044,7044],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":7026,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7027,"fix":{"range":[7046,7047],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7028,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7029,"fix":{"range":[7049,7049],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":7029,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":7033,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7034,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7035,"fix":{"range":[7055,7055],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7034,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7086,"fix":{"range":[7054,7054],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7037,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7038,"fix":{"range":[7057,7058],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7043,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7044,"fix":{"range":[7064,7064],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7046,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7047,"fix":{"range":[7066,7067],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7062,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7063,"fix":{"range":[7083,7083],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7063,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7065,"fix":{"range":[7085,7085],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7069,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7070,"fix":{"range":[7090,7090],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7069,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7085,"fix":{"range":[7089,7089],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-destructuring","severity":2,"message":"Use array destructuring.","line":2,"column":7070,"nodeType":"AssignmentExpression","messageId":"preferDestructuring","endLine":2,"endColumn":7078,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7072,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7073,"fix":{"range":[7092,7093],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7078,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7079,"fix":{"range":[7099,7099],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7084,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7085,"fix":{"range":[7104,7104],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7084,"nodeType":"BreakStatement","messageId":"missingSemi","endLine":2,"endColumn":7085,"fix":{"range":[7104,7104],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7085,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7086,"fix":{"range":[7105,7105],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":7086,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7088,"fix":{"range":[7106,7106],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7086,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7088,"fix":{"range":[7108,7108],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7093,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7094,"fix":{"range":[7114,7114],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7093,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7099,"fix":{"range":[7113,7113],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7096,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7097,"fix":{"range":[7116,7117],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7098,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7099,"fix":{"range":[7118,7118],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7098,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7099,"fix":{"range":[7118,7118],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7099,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7100,"fix":{"range":[7119,7119],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7102,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7103,"fix":{"range":[7122,7123],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":7112,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7114,"fix":{"range":[7132,7134],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":7115,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":7117,"fix":{"range":[7135,7137],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":7117,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":7144,"fix":{"range":[7137,7164],"text":"ap.substring(0,5)===\"lang-\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":7117,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":7124,"fix":{"range":[7137,7144],"text":"'lang-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":7124,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7127,"fix":{"range":[7144,7147],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7141,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7142,"fix":{"range":[7162,7162],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7144,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7145,"fix":{"range":[7165,7165],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7145,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7147,"fix":{"range":[7167,7167],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":7150,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":7152,"fix":{"range":[7170,7172],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":7156,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":7158,"fix":{"range":[7176,7178],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":7170,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7173,"fix":{"range":[7190,7193],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":7173,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":7181,"fix":{"range":[7193,7201],"text":"'string'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7183,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7184,"fix":{"range":[7204,7204],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7183,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7198,"fix":{"range":[7203,7203],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7186,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7187,"fix":{"range":[7206,7207],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7192,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7193,"fix":{"range":[7213,7213],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7195,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7196,"fix":{"range":[7215,7216],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7197,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7198,"fix":{"range":[7217,7217],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7197,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7198,"fix":{"range":[7217,7217],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":7198,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7200,"fix":{"range":[7218,7218],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7198,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7200,"fix":{"range":[7220,7220],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7205,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7206,"fix":{"range":[7226,7226],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7205,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7216,"fix":{"range":[7225,7225],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7212,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7213,"fix":{"range":[7232,7233],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7215,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7216,"fix":{"range":[7235,7235],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7215,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7216,"fix":{"range":[7235,7235],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7216,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7217,"fix":{"range":[7236,7236],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":7217,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7220,"fix":{"range":[7237,7237],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":7217,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":7227,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":7217,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7227,"fix":{"range":[7237,7240],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7223,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7224,"fix":{"range":[7243,7244],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7226,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7227,"fix":{"range":[7247,7247],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+=' must be spaced.","line":2,"column":7229,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7231,"fix":{"range":[7249,7251],"text":" += "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7240,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7241,"fix":{"range":[7261,7261],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7241,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7243,"fix":{"range":[7263,7263],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7248,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7249,"fix":{"range":[7269,7269],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7248,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7266,"fix":{"range":[7268,7268],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":7258,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7259,"fix":{"range":[7278,7279],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7261,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7262,"fix":{"range":[7282,7282],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7265,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7266,"fix":{"range":[7285,7285],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7265,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7266,"fix":{"range":[7285,7285],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":7266,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7270,"fix":{"range":[7286,7286],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":7266,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7270,"fix":{"range":[7290,7290],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7270,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7271,"fix":{"range":[7291,7291],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":7271,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":7284,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":7271,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7284,"fix":{"range":[7291,7294],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7277,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7278,"fix":{"range":[7297,7298],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7283,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7284,"fix":{"range":[7304,7304],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":7284,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":7306,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":7284,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7306,"fix":{"range":[7304,7307],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7290,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7291,"fix":{"range":[7310,7311],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7305,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7306,"fix":{"range":[7326,7326],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":7306,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":7326,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":7306,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7326,"fix":{"range":[7326,7329],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7312,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7313,"fix":{"range":[7332,7333],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":7315,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7316,"fix":{"range":[7335,7336],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7325,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7326,"fix":{"range":[7346,7346],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7326,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7328,"fix":{"range":[7348,7348],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7335,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7336,"fix":{"range":[7356,7356],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7335,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7378,"fix":{"range":[7355,7355],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7338,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7339,"fix":{"range":[7358,7359],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '-' must be spaced.","line":2,"column":7348,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7349,"fix":{"range":[7368,7369],"text":" - "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7361,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7362,"fix":{"range":[7382,7382],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7364,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7365,"fix":{"range":[7384,7385],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '-' must be spaced.","line":2,"column":7367,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7368,"fix":{"range":[7387,7388],"text":" - "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7377,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7378,"fix":{"range":[7397,7397],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7377,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7378,"fix":{"range":[7397,7397],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":7378,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7381,"fix":{"range":[7398,7398],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":7378,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":7401,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":7378,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7401,"fix":{"range":[7398,7401],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7384,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7385,"fix":{"range":[7404,7405],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7400,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7401,"fix":{"range":[7421,7421],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":7404,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7405,"fix":{"range":[7424,7425],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7407,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7408,"fix":{"range":[7428,7428],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7422,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7423,"fix":{"range":[7443,7443],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7426,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7427,"fix":{"range":[7447,7447],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7428,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7429,"fix":{"range":[7449,7449],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7432,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7433,"fix":{"range":[7453,7453],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":7436,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7437,"fix":{"range":[7456,7457],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":7439,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7440,"fix":{"range":[7459,7460],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7442,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7443,"fix":{"range":[7463,7463],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7445,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7446,"fix":{"range":[7466,7466],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-use-before-define","severity":2,"message":"'q' was used before it was defined.","line":2,"column":7446,"nodeType":"Identifier","messageId":"usedBeforeDefined","endLine":2,"endColumn":7447,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7450,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7451,"fix":{"range":[7471,7471],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7454,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7455,"fix":{"range":[7475,7475],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7458,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7459,"fix":{"range":[7479,7479],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":7462,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7463,"fix":{"range":[7482,7483],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":7465,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":7466,"fix":{"range":[7485,7486],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7468,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7469,"fix":{"range":[7489,7489],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7485,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7486,"fix":{"range":[7506,7506],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7487,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7488,"fix":{"range":[7508,7508],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7491,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7492,"fix":{"range":[7511,7511],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7491,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7492,"fix":{"range":[7511,7511],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7492,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7493,"fix":{"range":[7512,7512],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'ah'.","line":2,"column":7493,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":2,"endColumn":7495,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7507,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":7508,"fix":{"range":[7527,7528],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7510,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7511,"fix":{"range":[7530,7530],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7510,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7511,"fix":{"range":[7530,7530],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7511,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7512,"fix":{"range":[7532,7532],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7520,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7521,"fix":{"range":[7540,7540],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7520,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":7521,"fix":{"range":[7540,7540],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":7521,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7529,"fix":{"range":[7541,7541],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7534,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7535,"fix":{"range":[7555,7555],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7534,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9272,"fix":{"range":[7554,7554],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":2,"column":7535,"nodeType":"VariableDeclaration","messageId":"split","endLine":2,"endColumn":7549,"fix":{"range":[7563,7564],"text":"; var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":7535,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":7549,"fix":{"range":[7555,7558],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7540,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7541,"fix":{"range":[7560,7561],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7543,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7544,"fix":{"range":[7564,7564],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var-declaration-per-line","severity":2,"message":"Expected variable declaration to be on a new line.","line":2,"column":7544,"nodeType":"VariableDeclaration","messageId":"expectVarOnNewline","endLine":2,"endColumn":7548,"fix":{"range":[7564,7564],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":7545,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":7546,"fix":{"range":[7565,7566],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":7548,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":7549,"fix":{"range":[7569,7569],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7549,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7551,"fix":{"range":[7571,7571],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7574,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7575,"fix":{"range":[7595,7595],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7574,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7783,"fix":{"range":[7594,7594],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7584,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7585,"fix":{"range":[7605,7605],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7590,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7591,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7610,7611],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7610,7610],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7592,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7593,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7612,7613],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7612,7612],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7594,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7595,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7614,7615],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7614,7614],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7601,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7602,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7621,7622],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7621,7621],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7616,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7617,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7636,7637],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7636,7636],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7628,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7629,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7648,7649],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7648,7648],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7637,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7638,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7657,7658],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7657,7657],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7639,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7640,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7659,7660],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7659,7659],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7641,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7642,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7661,7662],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7661,7661],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7647,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7648,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7667,7668],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7667,7667],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7649,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7650,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7669,7670],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7669,7669],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7651,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7652,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7671,7672],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7671,7671],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7658,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7659,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7678,7679],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7678,7678],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7673,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7674,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7693,7694],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7693,7693],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7685,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7686,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7705,7706],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7705,7705],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7694,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7695,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7714,7715],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7714,7714],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7696,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7697,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7716,7717],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7716,7716],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7698,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7699,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7718,7719],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7718,7718],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7704,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7705,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7724,7725],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7724,7724],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7713,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7714,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7733,7734],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7733,7733],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7730,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7731,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7750,7751],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7750,7750],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7736,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7737,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7756,7757],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7756,7756],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7745,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7746,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7765,7766],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7765,7765],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7762,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7763,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7782,7783],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7782,7782],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7769,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7770,"fix":{"range":[7790,7790],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7774,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7775,"fix":{"range":[7795,7795],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7782,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7783,"fix":{"range":[7802,7802],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7782,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7783,"fix":{"range":[7802,7802],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":7783,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7787,"fix":{"range":[7803,7803],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":7783,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7787,"fix":{"range":[7807,7807],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7787,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7788,"fix":{"range":[7808,7808],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":7788,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7790,"fix":{"range":[7810,7810],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":7788,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":8035,"fix":{"range":[7807,8056],"text":" if(T.multiLineStrings){W.push([C,/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"])}else{W.push([C,/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"])}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7810,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7811,"fix":{"range":[7831,7831],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":7810,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":7938,"fix":{"range":[7830,7830],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7820,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7821,"fix":{"range":[7841,7841],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7826,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7827,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7846,7847],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7846,7846],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7835,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7836,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7855,7856],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7855,7855],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7852,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7853,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7872,7873],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7872,7872],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7858,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7859,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7878,7879],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7878,7878],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7867,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7868,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7887,7888],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7887,7887],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7884,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7885,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7904,7905],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7904,7904],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\`.","line":2,"column":7890,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7891,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7910,7911],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7910,7910],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\`.","line":2,"column":7899,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7900,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7919,7920],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7919,7919],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\`.","line":2,"column":7916,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7917,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7936,7937],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7936,7936],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7923,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7924,"fix":{"range":[7944,7944],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7928,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7929,"fix":{"range":[7949,7949],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":7937,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7938,"fix":{"range":[7957,7957],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":7937,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":7938,"fix":{"range":[7957,7957],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":7938,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":7942,"fix":{"range":[7958,7958],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":7938,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":7942,"fix":{"range":[7962,7962],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":7942,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":7943,"fix":{"range":[7963,7963],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":7952,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":7953,"fix":{"range":[7973,7973],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7958,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7959,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7978,7979],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7978,7978],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7967,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7968,"suggestions":[{"messageId":"removeEscape","fix":{"range":[7987,7988],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[7987,7987],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":7983,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7984,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8003,8004],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8003,8003],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7989,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7990,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8009,8010],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8009,8009],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":7998,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":7999,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8018,8019],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8018,8018],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":8014,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":8015,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8034,8035],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8034,8034],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8021,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8022,"fix":{"range":[8042,8042],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8026,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8027,"fix":{"range":[8047,8047],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8034,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8035,"fix":{"range":[8054,8054],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8034,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8035,"fix":{"range":[8054,8054],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8035,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8036,"fix":{"range":[8055,8055],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":8036,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8038,"fix":{"range":[8056,8056],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8036,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8038,"fix":{"range":[8058,8058],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8057,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8058,"fix":{"range":[8078,8078],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8057,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8105,"fix":{"range":[8077,8077],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8067,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8068,"fix":{"range":[8088,8088],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":8071,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":8072,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8091,8092],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8091,8091],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":8078,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":8079,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8098,8099],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8098,8098],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":8082,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":8083,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8102,8103],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8102,8102],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":8084,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":8085,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8104,8105],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8104,8104],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":8091,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":8092,"suggestions":[{"messageId":"removeEscape","fix":{"range":[8111,8112],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[8111,8111],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8097,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8098,"fix":{"range":[8118,8118],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8104,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8105,"fix":{"range":[8124,8124],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8104,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8105,"fix":{"range":[8124,8124],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":8105,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8108,"fix":{"range":[8125,8125],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":8105,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":8126,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":8105,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":8126,"fix":{"range":[8125,8128],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":8110,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":8111,"fix":{"range":[8130,8131],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":8125,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":8126,"fix":{"range":[8146,8146],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8126,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8128,"fix":{"range":[8148,8148],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8131,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8132,"fix":{"range":[8152,8152],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8131,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8475,"fix":{"range":[8151,8151],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8132,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8134,"fix":{"range":[8154,8154],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8152,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8153,"fix":{"range":[8173,8173],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8152,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8435,"fix":{"range":[8172,8172],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8153,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8155,"fix":{"range":[8175,8175],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>' must be spaced.","line":2,"column":8157,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8158,"fix":{"range":[8177,8178],"text":" > "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8160,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8161,"fix":{"range":[8181,8181],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8160,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8222,"fix":{"range":[8180,8180],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8170,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8171,"fix":{"range":[8191,8191],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8210,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8211,"fix":{"range":[8231,8231],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8215,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8216,"fix":{"range":[8236,8236],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8216,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8219,"fix":{"range":[8236,8239],"text":"'#'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8221,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8222,"fix":{"range":[8241,8241],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8221,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8222,"fix":{"range":[8241,8241],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":8222,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8226,"fix":{"range":[8242,8242],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":8222,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8226,"fix":{"range":[8246,8246],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8226,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8227,"fix":{"range":[8247,8247],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8236,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8237,"fix":{"range":[8257,8257],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8335,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8336,"fix":{"range":[8356,8356],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8340,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8341,"fix":{"range":[8361,8361],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8341,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8344,"fix":{"range":[8361,8364],"text":"'#'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8346,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8347,"fix":{"range":[8366,8366],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8346,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8347,"fix":{"range":[8366,8366],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8356,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8357,"fix":{"range":[8377,8377],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8427,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8428,"fix":{"range":[8448,8448],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8434,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8435,"fix":{"range":[8454,8454],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8434,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8435,"fix":{"range":[8454,8454],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":8435,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8439,"fix":{"range":[8455,8455],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":8435,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8439,"fix":{"range":[8459,8459],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8439,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8440,"fix":{"range":[8460,8460],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8449,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8450,"fix":{"range":[8470,8470],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8462,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8463,"fix":{"range":[8483,8483],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8467,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8468,"fix":{"range":[8488,8488],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8468,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8471,"fix":{"range":[8488,8491],"text":"'#'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8473,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8474,"fix":{"range":[8493,8493],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8473,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8474,"fix":{"range":[8493,8493],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8474,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8475,"fix":{"range":[8494,8494],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":8475,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8477,"fix":{"range":[8495,8495],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8475,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8477,"fix":{"range":[8497,8497],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8495,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8496,"fix":{"range":[8516,8516],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8495,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8572,"fix":{"range":[8515,8515],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8505,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8506,"fix":{"range":[8526,8526],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8521,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8522,"fix":{"range":[8542,8542],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":8528,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":8529,"fix":{"range":[8549,8549],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8538,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8539,"fix":{"range":[8559,8559],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8564,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8565,"fix":{"range":[8585,8585],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8571,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8572,"fix":{"range":[8591,8591],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8571,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8572,"fix":{"range":[8591,8591],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":8572,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8574,"fix":{"range":[8592,8592],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8572,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8574,"fix":{"range":[8594,8594],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8591,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8592,"fix":{"range":[8612,8612],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8591,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8747,"fix":{"range":[8611,8611],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":8592,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":8696,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":8592,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":8696,"fix":{"range":[8612,8615],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":8597,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":8598,"fix":{"range":[8617,8618],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8599,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8694,"fix":{"range":[8619,8714],"text":"'/(?=[^/*])(?:[^/\\\\x5B\\\\x5C]|\\\\x5C[\\\\s\\\\S]|\\\\x5B(?:[^\\\\x5C\\\\x5D]|\\\\x5C[\\\\s\\\\S])*(?:\\\\x5D|$))+/'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":8695,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":8696,"fix":{"range":[8716,8716],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8704,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8716,"fix":{"range":[8724,8736],"text":"'lang-regex'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8716,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8717,"fix":{"range":[8737,8737],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":8728,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":8743,"fix":{"range":[8748,8763],"text":"`^${M}(${X})`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8728,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8731,"fix":{"range":[8748,8751],"text":"'^'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":8731,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8732,"fix":{"range":[8751,8752],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":8733,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8734,"fix":{"range":[8753,8754],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8734,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8737,"fix":{"range":[8754,8757],"text":"'('"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":8737,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8738,"fix":{"range":[8757,8758],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":8739,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8740,"fix":{"range":[8759,8760],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8740,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8743,"fix":{"range":[8760,8763],"text":"')'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8746,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8747,"fix":{"range":[8766,8766],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8746,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8747,"fix":{"range":[8766,8766],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":8747,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8750,"fix":{"range":[8767,8767],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":8747,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":8761,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":8747,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":8761,"fix":{"range":[8767,8770],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":8752,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":8753,"fix":{"range":[8772,8773],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":8760,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":8761,"fix":{"range":[8781,8781],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8761,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8763,"fix":{"range":[8783,8783],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8766,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8767,"fix":{"range":[8787,8787],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8766,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8781,"fix":{"range":[8786,8786],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8776,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8777,"fix":{"range":[8797,8797],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8780,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8781,"fix":{"range":[8800,8800],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8780,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8781,"fix":{"range":[8800,8800],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":8781,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":8784,"fix":{"range":[8801,8801],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":8781,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":8824,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":8781,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":8824,"fix":{"range":[8801,8804],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":8786,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":8787,"fix":{"range":[8806,8807],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":8788,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":8801,"fix":{"range":[8808,8821],"text":"`${T.keywords}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8788,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8790,"fix":{"range":[8808,8810],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":8790,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8791,"fix":{"range":[8810,8811],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8819,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8820,"fix":{"range":[8840,8840],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8820,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8822,"fix":{"range":[8840,8842],"text":"''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":8823,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":8824,"fix":{"range":[8844,8844],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":8824,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":8826,"fix":{"range":[8846,8846],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":8836,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8837,"fix":{"range":[8857,8857],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":8836,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":8905,"fix":{"range":[8856,8856],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8846,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8847,"fix":{"range":[8867,8867],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":8858,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":8896,"fix":{"range":[8878,8916],"text":"`^(?:${U.replace(/[\\s,]+/g,\"|\")})\\\\b`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8858,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8864,"fix":{"range":[8878,8884],"text":"'^(?:'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":8864,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8865,"fix":{"range":[8884,8885],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8884,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8885,"fix":{"range":[8905,8905],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8885,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8888,"fix":{"range":[8905,8908],"text":"'|'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":8889,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":8890,"fix":{"range":[8909,8910],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8890,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8896,"fix":{"range":[8910,8916],"text":"')\\\\b'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8897,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8898,"fix":{"range":[8918,8918],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":8904,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":8905,"fix":{"range":[8924,8924],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":8904,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":8905,"fix":{"range":[8924,8924],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8914,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8915,"fix":{"range":[8935,8935],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8921,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8922,"fix":{"range":[8942,8942],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8926,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8927,"fix":{"range":[8947,8947],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":8927,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":8940,"fix":{"range":[8947,8960],"text":"' \\r\\n\\t\\xA0'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":8942,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":8943,"fix":{"range":[8963,8963],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8952,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8953,"fix":{"range":[8973,8973],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8977,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8978,"fix":{"range":[8998,8998],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8983,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8984,"fix":{"range":[9004,9004],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":8986,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":8987,"fix":{"range":[9007,9007],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9033,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9034,"fix":{"range":[9054,9054],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9039,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9040,"fix":{"range":[9060,9060],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9042,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9043,"fix":{"range":[9063,9063],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9066,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9067,"fix":{"range":[9087,9087],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9072,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9073,"fix":{"range":[9093,9093],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9075,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9076,"fix":{"range":[9096,9096],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-regex-literals","severity":2,"message":"Use a regular expression literal instead of the 'RegExp' constructor.","line":2,"column":9076,"nodeType":"NewExpression","messageId":"unexpectedRegExp","endLine":2,"endColumn":9177,"suggestions":[{"messageId":"replaceWithLiteral","fix":{"range":[9096,9197],"text":"/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i"},"desc":"Replace with an equivalent regular expression literal."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":9087,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":9172,"fix":{"range":[9107,9192],"text":"'^(?:0x[a-f0-9]+|(?:\\\\d(?:_\\\\d+)*\\\\d*(?:\\\\.\\\\d*)?|\\\\.\\\\d\\\\+)(?:e[+\\\\-]?\\\\d+)?)[a-z]*'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9172,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9173,"fix":{"range":[9193,9193],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":9173,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":9176,"fix":{"range":[9193,9196],"text":"'i'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9177,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9178,"fix":{"range":[9198,9198],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9182,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9183,"fix":{"range":[9203,9203],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":9183,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":9195,"fix":{"range":[9203,9215],"text":"'0123456789'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9196,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9197,"fix":{"range":[9217,9217],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9199,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9200,"fix":{"range":[9220,9220],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9212,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9213,"fix":{"range":[9233,9233],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9218,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9219,"fix":{"range":[9239,9239],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9221,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9222,"fix":{"range":[9242,9242],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\..","line":2,"column":9231,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":9232,"suggestions":[{"messageId":"removeEscape","fix":{"range":[9251,9252],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[9251,9251],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":9235,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":9236,"suggestions":[{"messageId":"removeEscape","fix":{"range":[9255,9256],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[9255,9255],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":9237,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":9238,"suggestions":[{"messageId":"removeEscape","fix":{"range":[9257,9258],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[9257,9257],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\`.","line":2,"column":9239,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":9240,"suggestions":[{"messageId":"removeEscape","fix":{"range":[9259,9260],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[9259,9259],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\/.","line":2,"column":9241,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":9242,"suggestions":[{"messageId":"removeEscape","fix":{"range":[9261,9262],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[9261,9261],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\#.","line":2,"column":9243,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":9244,"suggestions":[{"messageId":"removeEscape","fix":{"range":[9263,9264],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[9263,9263],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9250,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9251,"fix":{"range":[9271,9271],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9257,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9258,"fix":{"range":[9278,9278],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9268,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9269,"fix":{"range":[9289,9289],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9271,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9272,"fix":{"range":[9291,9291],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":9271,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":9272,"fix":{"range":[9291,9291],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":9272,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":9275,"fix":{"range":[9292,9292],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":9272,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":9373,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9272,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9373,"fix":{"range":[9292,9295],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9277,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9278,"fix":{"range":[9297,9298],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":9280,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":9281,"fix":{"range":[9301,9301],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":9280,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":9281,"fix":{"range":[9301,9301],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":9290,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":9291,"fix":{"range":[9310,9310],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9291,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9292,"fix":{"range":[9312,9312],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":9305,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":9309,"fix":{"range":[9325,9325],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9309,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9310,"fix":{"range":[9330,9330],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'cStyleComments'.","line":2,"column":9325,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":9329,"fix":{"range":[9345,9345],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9329,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9330,"fix":{"range":[9350,9350],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'multiLineStrings'.","line":2,"column":9347,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":9351,"fix":{"range":[9367,9367],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9351,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9352,"fix":{"range":[9372,9372],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'regexLiterals'.","line":2,"column":9366,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":9370,"fix":{"range":[9386,9386],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":9370,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":9371,"fix":{"range":[9390,9390],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":9370,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":9371,"fix":{"range":[9390,9390],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9372,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9373,"fix":{"range":[9393,9393],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9385,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9386,"fix":{"range":[9406,9406],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9389,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9390,"fix":{"range":[9410,9410],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9389,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10970,"fix":{"range":[9409,9409],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9390,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9421,"fix":{"range":[9410,9413],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9395,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9396,"fix":{"range":[9415,9416],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9420,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9421,"fix":{"range":[9441,9441],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9421,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9439,"fix":{"range":[9441,9444],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9427,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9428,"fix":{"range":[9447,9448],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9438,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9439,"fix":{"range":[9459,9459],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9439,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9462,"fix":{"range":[9459,9462],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9445,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9446,"fix":{"range":[9465,9466],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9461,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9462,"fix":{"range":[9482,9482],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9462,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9468,"fix":{"range":[9482,9485],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9467,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9468,"fix":{"range":[9488,9488],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":9468,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9470,"fix":{"range":[9490,9490],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9486,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9487,"fix":{"range":[9507,9507],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9486,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9515,"fix":{"range":[9506,9506],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9488,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":9489,"fix":{"range":[9508,9509],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9514,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9515,"fix":{"range":[9534,9534],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":9514,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":9515,"fix":{"range":[9534,9534],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":9515,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":9519,"fix":{"range":[9535,9535],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":9515,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9519,"fix":{"range":[9539,9539],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9519,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9520,"fix":{"range":[9540,9540],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":9520,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9522,"fix":{"range":[9542,9542],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":9520,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":9622,"fix":{"range":[9539,9643],"text":" if(window.getComputedStyle){S=ac.defaultView.getComputedStyle(V,null).getPropertyValue(\"white-space\")}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":9523,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":9529,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9547,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9548,"fix":{"range":[9568,9568],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9547,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9622,"fix":{"range":[9567,9567],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9549,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":9550,"fix":{"range":[9569,9570],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9583,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9584,"fix":{"range":[9604,9604],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":9607,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":9620,"fix":{"range":[9627,9640],"text":"'white-space'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9621,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9622,"fix":{"range":[9641,9641],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":9621,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":9622,"fix":{"range":[9641,9641],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9622,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9623,"fix":{"range":[9642,9642],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":9623,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":9626,"fix":{"range":[9643,9643],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":9623,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":9657,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9623,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9657,"fix":{"range":[9643,9646],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9628,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9629,"fix":{"range":[9648,9649],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":9630,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":9632,"fix":{"range":[9650,9652],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":9632,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":9656,"fix":{"range":[9652,9676],"text":"S.substring(0,3)===\"pre\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":9632,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":9637,"fix":{"range":[9652,9657],"text":"'pre'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":9637,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":9640,"fix":{"range":[9657,9660],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":9653,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":9654,"fix":{"range":[9674,9674],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9656,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9657,"fix":{"range":[9677,9677],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":9657,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":9687,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9657,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9687,"fix":{"range":[9677,9680],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9663,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9664,"fix":{"range":[9683,9684],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":9681,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":9685,"fix":{"range":[9701,9705],"text":"'LI'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9686,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9687,"fix":{"range":[9707,9707],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"while\".","line":2,"column":9687,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9692,"fix":{"range":[9712,9712],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9706,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9707,"fix":{"range":[9727,9727],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9706,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9736,"fix":{"range":[9726,9726],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9735,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9736,"fix":{"range":[9755,9755],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":9735,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":9736,"fix":{"range":[9755,9755],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":9736,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":9739,"fix":{"range":[9756,9756],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":9736,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":9747,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9736,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9747,"fix":{"range":[9756,9759],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9741,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9742,"fix":{"range":[9761,9762],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9746,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9747,"fix":{"range":[9767,9767],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9762,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9763,"fix":{"range":[9783,9783],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9762,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10260,"fix":{"range":[9782,9782],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"switch\".","line":2,"column":9763,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9769,"fix":{"range":[9789,9789],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"default-case","severity":2,"message":"Expected a default case.","line":2,"column":9763,"nodeType":"SwitchStatement","messageId":"missingDefaultCase","endLine":2,"endColumn":10259,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9782,"nodeType":"SwitchStatement","messageId":"missing","endLine":2,"endColumn":9783,"fix":{"range":[9803,9803],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9782,"nodeType":"Punctuator","messageId":"missingSpace","endLine":2,"endColumn":9783,"fix":{"range":[9802,9802],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"switch-colon-spacing","severity":2,"message":"Expected space(s) after this colon.","line":2,"column":9789,"nodeType":"SwitchCase","messageId":"expectedAfter","endLine":2,"endColumn":9790,"fix":{"range":[9810,9810],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":9790,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9792,"fix":{"range":[9812,9812],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9814,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9815,"fix":{"range":[9835,9835],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9814,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9821,"fix":{"range":[9834,9834],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9820,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9821,"fix":{"range":[9840,9840],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":9820,"nodeType":"BreakStatement","messageId":"missingSemi","endLine":2,"endColumn":9821,"fix":{"range":[9840,9840],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":9821,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":9823,"fix":{"range":[9841,9841],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":9821,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9823,"fix":{"range":[9843,9843],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":9824,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":9842,"fix":{"range":[9844,9862],"text":"al.nodeName===\"BR\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":9824,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":9828,"fix":{"range":[9844,9848],"text":"'BR'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":9828,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":9831,"fix":{"range":[9848,9851],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9843,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9844,"fix":{"range":[9864,9864],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9843,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9900,"fix":{"range":[9863,9863],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-use-before-define","severity":2,"message":"'ad' was used before it was defined.","line":2,"column":9844,"nodeType":"Identifier","messageId":"usedBeforeDefined","endLine":2,"endColumn":9846,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9850,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9851,"fix":{"range":[9871,9871],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":9851,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9853,"fix":{"range":[9873,9873],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9868,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9869,"fix":{"range":[9889,9889],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9868,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9899,"fix":{"range":[9888,9888],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9898,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9899,"fix":{"range":[9918,9918],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":9898,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":9899,"fix":{"range":[9918,9918],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9899,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9900,"fix":{"range":[9919,9919],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":9900,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":9904,"fix":{"range":[9920,9920],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":9900,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9904,"fix":{"range":[9924,9924],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9904,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9905,"fix":{"range":[9925,9925],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":9905,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9908,"fix":{"range":[9928,9928],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":9909,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":9929,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9909,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":9929,"fix":{"range":[9929,9932],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9915,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9916,"fix":{"range":[9935,9936],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9929,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9930,"fix":{"range":[9950,9950],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9932,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9933,"fix":{"range":[9953,9953],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9935,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":9936,"fix":{"range":[9955,9956],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9951,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9952,"fix":{"range":[9972,9972],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9951,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":9959,"fix":{"range":[9971,9971],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9958,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9959,"fix":{"range":[9978,9978],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":9958,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":9959,"fix":{"range":[9978,9978],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":9959,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9960,"fix":{"range":[9979,9979],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"break\".","line":2,"column":9960,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":9965,"fix":{"range":[9980,9980],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":9965,"nodeType":"BreakStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":9966,"fix":{"range":[9986,9986],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"switch-colon-spacing","severity":2,"message":"Expected space(s) after this colon.","line":2,"column":9972,"nodeType":"SwitchCase","messageId":"expectedAfter","endLine":2,"endColumn":9973,"fix":{"range":[9993,9993],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"switch-colon-spacing","severity":2,"message":"Expected space(s) after this colon.","line":2,"column":9979,"nodeType":"SwitchCase","messageId":"expectedAfter","endLine":2,"endColumn":9980,"fix":{"range":[10000,10000],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":9980,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":9982,"fix":{"range":[10002,10002],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":9985,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":9986,"fix":{"range":[10006,10006],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":9985,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10253,"fix":{"range":[10005,10005],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":9986,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10006,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":9986,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10006,"fix":{"range":[10006,10009],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":9992,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":9993,"fix":{"range":[10012,10013],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10005,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10006,"fix":{"range":[10026,10026],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10006,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10026,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10006,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10026,"fix":{"range":[10026,10029],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10012,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10013,"fix":{"range":[10032,10033],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10025,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10026,"fix":{"range":[10046,10046],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":10026,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10028,"fix":{"range":[10048,10048],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10032,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10033,"fix":{"range":[10053,10053],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10032,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10252,"fix":{"range":[10052,10052],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10033,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10065,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10033,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10065,"fix":{"range":[10053,10056],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10039,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10040,"fix":{"range":[10059,10060],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10054,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10055,"fix":{"range":[10075,10075],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10064,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10065,"fix":{"range":[10085,10085],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'al'.","line":2,"column":10065,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":2,"endColumn":10067,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10077,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10078,"fix":{"range":[10097,10098],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10080,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10081,"fix":{"range":[10101,10101],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10081,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10124,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10081,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10124,"fix":{"range":[10101,10104],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10087,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10088,"fix":{"range":[10107,10108],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":10109,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10110,"fix":{"range":[10129,10130],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10123,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10124,"fix":{"range":[10144,10144],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":10124,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10126,"fix":{"range":[10146,10146],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10130,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10131,"fix":{"range":[10151,10151],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10130,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10206,"fix":{"range":[10150,10150],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10131,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10152,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10131,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10152,"fix":{"range":[10151,10154],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10137,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10138,"fix":{"range":[10157,10158],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10151,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10152,"fix":{"range":[10172,10172],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10189,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10190,"fix":{"range":[10210,10210],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10205,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10206,"fix":{"range":[10225,10225],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10205,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10206,"fix":{"range":[10225,10225],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-use-before-define","severity":2,"message":"'ad' was used before it was defined.","line":2,"column":10206,"nodeType":"Identifier","messageId":"usedBeforeDefined","endLine":2,"endColumn":10208,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10212,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10213,"fix":{"range":[10233,10233],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":10213,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10215,"fix":{"range":[10235,10235],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10220,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10221,"fix":{"range":[10241,10241],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10220,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10251,"fix":{"range":[10240,10240],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10250,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10251,"fix":{"range":[10270,10270],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10250,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10251,"fix":{"range":[10270,10270],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10251,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10252,"fix":{"range":[10271,10271],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10252,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10253,"fix":{"range":[10272,10272],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"break\".","line":2,"column":10253,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10258,"fix":{"range":[10273,10273],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10258,"nodeType":"SwitchStatement","messageId":"missing","endLine":2,"endColumn":10259,"fix":{"range":[10278,10278],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10258,"nodeType":"BreakStatement","messageId":"missingSemi","endLine":2,"endColumn":10259,"fix":{"range":[10278,10278],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10259,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10260,"fix":{"range":[10279,10279],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":10260,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10268,"fix":{"range":[10280,10280],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10275,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10276,"fix":{"range":[10296,10296],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10275,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10635,"fix":{"range":[10295,10295],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"while\".","line":2,"column":10276,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10281,"fix":{"range":[10301,10301],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10298,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10299,"fix":{"range":[10319,10319],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10298,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10332,"fix":{"range":[10318,10318],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to function parameter 'ak'.","line":2,"column":10299,"nodeType":"Identifier","messageId":"assignmentToFunctionParam","endLine":2,"endColumn":10301,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10301,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10302,"fix":{"range":[10321,10322],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10315,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10316,"fix":{"range":[10336,10336],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":10316,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10318,"fix":{"range":[10338,10338],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10323,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10324,"fix":{"range":[10344,10344],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10323,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10331,"fix":{"range":[10343,10343],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10330,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10331,"fix":{"range":[10350,10350],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10330,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":10331,"fix":{"range":[10350,10350],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10331,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10332,"fix":{"range":[10351,10351],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":10332,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10340,"fix":{"range":[10352,10352],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10346,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10347,"fix":{"range":[10367,10367],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10350,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10351,"fix":{"range":[10371,10371],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10350,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10541,"fix":{"range":[10370,10370],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10351,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10384,"fix":{"range":[10371,10374],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10357,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10358,"fix":{"range":[10377,10378],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":10360,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":10361,"fix":{"range":[10380,10381],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":10380,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":10381,"fix":{"range":[10400,10401],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10383,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10384,"fix":{"range":[10404,10404],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10384,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10405,"fix":{"range":[10404,10407],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10390,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10391,"fix":{"range":[10410,10411],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10404,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10405,"fix":{"range":[10425,10425],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":10405,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10407,"fix":{"range":[10427,10427],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10411,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10412,"fix":{"range":[10432,10432],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10411,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10531,"fix":{"range":[10431,10431],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10412,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10428,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10412,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10428,"fix":{"range":[10432,10435],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10418,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10419,"fix":{"range":[10438,10439],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10424,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10425,"fix":{"range":[10445,10445],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10427,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10428,"fix":{"range":[10448,10448],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10428,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10450,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10428,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10450,"fix":{"range":[10448,10451],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10434,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10435,"fix":{"range":[10454,10455],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10449,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10450,"fix":{"range":[10470,10470],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10468,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10469,"fix":{"range":[10489,10489],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":10469,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10472,"fix":{"range":[10492,10492],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10473,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10482,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10473,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10482,"fix":{"range":[10493,10496],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10479,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10480,"fix":{"range":[10499,10500],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10482,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10483,"fix":{"range":[10503,10503],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10485,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10486,"fix":{"range":[10506,10506],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10488,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10489,"fix":{"range":[10508,10509],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10492,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10493,"fix":{"range":[10513,10513],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10492,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10530,"fix":{"range":[10512,10512],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10495,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10496,"fix":{"range":[10515,10516],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10510,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10511,"fix":{"range":[10531,10531],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10529,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10530,"fix":{"range":[10549,10549],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10529,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10530,"fix":{"range":[10549,10549],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10530,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10531,"fix":{"range":[10550,10550],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"return\".","line":2,"column":10531,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10537,"fix":{"range":[10551,10551],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10540,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10541,"fix":{"range":[10560,10560],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10540,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":10541,"fix":{"range":[10560,10560],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":10541,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10544,"fix":{"range":[10561,10561],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10541,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10569,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10541,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10569,"fix":{"range":[10561,10564],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10547,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10548,"fix":{"range":[10567,10568],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10565,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10566,"fix":{"range":[10586,10586],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10568,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10569,"fix":{"range":[10589,10589],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":10569,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10572,"fix":{"range":[10592,10592],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10573,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10579,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10573,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10579,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10579,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10580,"fix":{"range":[10600,10600],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-cond-assign","severity":2,"message":"Unexpected assignment within a 'for' statement.","line":2,"column":10581,"nodeType":"AssignmentExpression","messageId":"unexpected","endLine":2,"endColumn":10597,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10583,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10584,"fix":{"range":[10603,10604],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":10598,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":10600,"fix":{"range":[10618,10620],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":10611,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10614,"fix":{"range":[10631,10634],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10617,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10618,"fix":{"range":[10638,10638],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10617,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10624,"fix":{"range":[10637,10637],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10620,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10621,"fix":{"range":[10640,10641],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10623,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10624,"fix":{"range":[10643,10643],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10623,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10624,"fix":{"range":[10643,10643],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10634,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10635,"fix":{"range":[10654,10654],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10634,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10635,"fix":{"range":[10654,10654],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"for\".","line":2,"column":10635,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10638,"fix":{"range":[10655,10655],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":10635,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10638,"fix":{"range":[10658,10658],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10639,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10646,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10639,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10646,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10812 is used outside of binding context.","line":2,"column":10643,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10644,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10644,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10645,"fix":{"range":[10664,10665],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10646,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10647,"fix":{"range":[10667,10667],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10812 is used outside of binding context.","line":2,"column":10647,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10648,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":10648,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10649,"fix":{"range":[10668,10669],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10657,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10658,"fix":{"range":[10678,10678],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":10658,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":10661,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10812 is used outside of binding context.","line":2,"column":10660,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10661,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10662,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10663,"fix":{"range":[10683,10683],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10662,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10672,"fix":{"range":[10682,10682],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10812 is used outside of binding context.","line":2,"column":10668,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10669,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10671,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10672,"fix":{"range":[10691,10691],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10671,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10672,"fix":{"range":[10691,10691],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":10672,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10674,"fix":{"range":[10692,10692],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":10672,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10674,"fix":{"range":[10694,10694],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":10677,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10680,"fix":{"range":[10697,10700],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":2,"column":10681,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":10685,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '|' must be spaced.","line":2,"column":10683,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10684,"fix":{"range":[10703,10704],"text":" | "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10687,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10688,"fix":{"range":[10708,10708],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10687,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10718,"fix":{"range":[10707,10707],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":10706,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":10713,"fix":{"range":[10726,10733],"text":"'value'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10713,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10714,"fix":{"range":[10734,10734],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10717,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10718,"fix":{"range":[10737,10737],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10717,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10718,"fix":{"range":[10737,10737],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":10718,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10721,"fix":{"range":[10738,10738],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10718,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10748,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10718,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10748,"fix":{"range":[10738,10741],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10724,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10725,"fix":{"range":[10744,10745],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":10742,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":10746,"fix":{"range":[10762,10766],"text":"'OL'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10747,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10748,"fix":{"range":[10768,10768],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10760,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10761,"fix":{"range":[10780,10781],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":10761,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":10771,"fix":{"range":[10781,10791],"text":"'linenums'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10771,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10772,"fix":{"range":[10792,10792],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10772,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10804,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10772,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10804,"fix":{"range":[10792,10795],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10777,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10778,"fix":{"range":[10797,10798],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10788,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10789,"fix":{"range":[10809,10809],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":2,"column":10789,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":10799,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '-' must be spaced.","line":2,"column":10793,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10794,"fix":{"range":[10813,10814],"text":" - "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '|' must be spaced.","line":2,"column":10797,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10798,"fix":{"range":[10817,10818],"text":" | "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":10800,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":10802,"fix":{"range":[10820,10822],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10803,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10804,"fix":{"range":[10824,10824],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":10804,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10807,"fix":{"range":[10827,10827],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":10808,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":10826,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10808,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":10826,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'Y' is already defined.","line":2,"column":10812,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":10813,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10643 is used outside of binding context.","line":2,"column":10812,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10813,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10813,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10814,"fix":{"range":[10833,10834],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":10815,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":10816,"fix":{"range":[10836,10836],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10817,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10818,"fix":{"range":[10837,10838],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10826,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10827,"fix":{"range":[10847,10847],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10643 is used outside of binding context.","line":2,"column":10827,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10828,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":10828,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10829,"fix":{"range":[10848,10849],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10830,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10831,"fix":{"range":[10851,10851],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":10831,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":10834,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10643 is used outside of binding context.","line":2,"column":10833,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10834,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10835,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10836,"fix":{"range":[10856,10856],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10835,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10952,"fix":{"range":[10855,10855],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10838,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10839,"fix":{"range":[10858,10859],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10643 is used outside of binding context.","line":2,"column":10841,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10842,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10843,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10844,"fix":{"range":[10864,10864],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10856,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":10857,"fix":{"range":[10876,10877],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":2,"column":10857,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":2,"endColumn":10871,"fix":{"range":[10877,10891],"text":"`L${(Y+X)%10}`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":10857,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":10860,"fix":{"range":[10877,10880],"text":"'L'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":10860,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10861,"fix":{"range":[10880,10881],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'Y' declared on line 2 column 10643 is used outside of binding context.","line":2,"column":10863,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":10864,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":10864,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10865,"fix":{"range":[10884,10885],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '%' must be spaced.","line":2,"column":10867,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":10868,"fix":{"range":[10887,10888],"text":" % "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":10871,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":10872,"fix":{"range":[10892,10892],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":10872,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":10874,"fix":{"range":[10894,10894],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10890,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10891,"fix":{"range":[10911,10911],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10890,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":10933,"fix":{"range":[10910,10910],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":10924,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":10930,"fix":{"range":[10944,10950],"text":"'\\xA0'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10932,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10933,"fix":{"range":[10952,10952],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10932,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10933,"fix":{"range":[10952,10952],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10951,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10952,"fix":{"range":[10971,10971],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10951,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10952,"fix":{"range":[10971,10971],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":10969,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10970,"fix":{"range":[10989,10989],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":10969,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":10970,"fix":{"range":[10989,10989],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":10970,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":10978,"fix":{"range":[10990,10990],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":10984,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":10985,"fix":{"range":[11005,11005],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":10984,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11894,"fix":{"range":[11004,11004],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":10985,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11029,"fix":{"range":[11005,11008],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":10991,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":10992,"fix":{"range":[11011,11012],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":2,"column":11008,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":11017,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11028,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11029,"fix":{"range":[11049,11049],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11029,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11042,"fix":{"range":[11049,11052],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11035,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11036,"fix":{"range":[11055,11056],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11041,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11042,"fix":{"range":[11062,11062],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11042,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11063,"fix":{"range":[11062,11065],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11048,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11049,"fix":{"range":[11068,11069],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11062,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11063,"fix":{"range":[11083,11083],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11063,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11080,"fix":{"range":[11083,11086],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11069,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11070,"fix":{"range":[11089,11090],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11079,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11080,"fix":{"range":[11100,11100],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11080,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11088,"fix":{"range":[11100,11103],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11085,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11086,"fix":{"range":[11105,11106],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11087,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11088,"fix":{"range":[11108,11108],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11088,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11104,"fix":{"range":[11108,11111],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11094,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11095,"fix":{"range":[11114,11115],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11103,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11104,"fix":{"range":[11124,11124],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11104,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11120,"fix":{"range":[11124,11127],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11109,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11110,"fix":{"range":[11129,11130],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11119,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11120,"fix":{"range":[11140,11140],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11120,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11129,"fix":{"range":[11140,11143],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11126,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11127,"fix":{"range":[11146,11147],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11128,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11129,"fix":{"range":[11149,11149],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11129,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11150,"fix":{"range":[11149,11152],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11134,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11135,"fix":{"range":[11154,11155],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11149,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11150,"fix":{"range":[11170,11170],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11150,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11165,"fix":{"range":[11170,11173],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11155,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11156,"fix":{"range":[11175,11176],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11164,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11165,"fix":{"range":[11185,11185],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11165,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11173,"fix":{"range":[11185,11188],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11170,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11171,"fix":{"range":[11190,11191],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11172,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11173,"fix":{"range":[11193,11193],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11177,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11178,"fix":{"range":[11197,11198],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11180,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11181,"fix":{"range":[11201,11201],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":2,"column":11181,"nodeType":"VariableDeclaration","messageId":"split","endLine":2,"endColumn":11191,"fix":{"range":[11207,11208],"text":"; var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11181,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11191,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11181,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11191,"fix":{"range":[11201,11204],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11187,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11188,"fix":{"range":[11208,11208],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var-declaration-per-line","severity":2,"message":"Expected variable declaration to be on a new line.","line":2,"column":11188,"nodeType":"VariableDeclaration","messageId":"expectVarOnNewline","endLine":2,"endColumn":11190,"fix":{"range":[11208,11208],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11190,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11191,"fix":{"range":[11211,11211],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":11191,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11194,"fix":{"range":[11214,11214],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11197,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11198,"fix":{"range":[11217,11218],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-multi-assign","severity":2,"message":"Unexpected chained assignment.","line":2,"column":11198,"nodeType":"AssignmentExpression","messageId":"unexpectedChain","endLine":2,"endColumn":11202,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11200,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11201,"fix":{"range":[11220,11221],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11202,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11203,"fix":{"range":[11223,11223],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":11205,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11206,"fix":{"range":[11225,11226],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11209,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11210,"fix":{"range":[11230,11230],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11209,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11274,"fix":{"range":[11229,11229],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11210,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11212,"fix":{"range":[11232,11232],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '!==' must be spaced.","line":2,"column":11218,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11221,"fix":{"range":[11238,11241],"text":" !== "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11225,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11226,"fix":{"range":[11245,11246],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11229,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11230,"fix":{"range":[11250,11250],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11229,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11262,"fix":{"range":[11249,11249],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":11232,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":11236,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11237,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11238,"fix":{"range":[11257,11258],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":11240,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":11244,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11245,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11246,"fix":{"range":[11266,11266],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":11248,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":11252,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11253,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11254,"fix":{"range":[11273,11274],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":11256,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":11260,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11261,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11262,"fix":{"range":[11281,11281],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11261,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11262,"fix":{"range":[11281,11281],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":11262,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":11266,"fix":{"range":[11282,11282],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":11262,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11266,"fix":{"range":[11286,11286],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11266,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11267,"fix":{"range":[11287,11287],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+=' must be spaced.","line":2,"column":11269,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11271,"fix":{"range":[11289,11291],"text":" += "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11272,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11273,"fix":{"range":[11292,11292],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11272,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11273,"fix":{"range":[11292,11292],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11273,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11274,"fix":{"range":[11293,11293],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11275,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11276,"fix":{"range":[11295,11296],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11278,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11279,"fix":{"range":[11299,11299],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":11279,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11282,"fix":{"range":[11302,11302],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11285,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11286,"fix":{"range":[11305,11306],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-multi-assign","severity":2,"message":"Unexpected chained assignment.","line":2,"column":11286,"nodeType":"AssignmentExpression","messageId":"unexpectedChain","endLine":2,"endColumn":11290,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11288,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11289,"fix":{"range":[11308,11309],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11290,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11291,"fix":{"range":[11311,11311],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":11293,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11294,"fix":{"range":[11313,11314],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11297,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11298,"fix":{"range":[11318,11318],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11297,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11396,"fix":{"range":[11317,11317],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11298,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11311,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11298,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11311,"fix":{"range":[11318,11321],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11304,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11305,"fix":{"range":[11324,11325],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11310,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11311,"fix":{"range":[11331,11331],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11311,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11326,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11311,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11326,"fix":{"range":[11331,11334],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11317,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11318,"fix":{"range":[11337,11338],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11322,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11323,"fix":{"range":[11342,11343],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11325,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11326,"fix":{"range":[11346,11346],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11326,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11337,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11326,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11337,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11501 is used outside of binding context.","line":2,"column":11330,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11331,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11331,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11332,"fix":{"range":[11351,11352],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11334,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11335,"fix":{"range":[11354,11355],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11336,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11337,"fix":{"range":[11357,11357],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"while\".","line":2,"column":11337,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11342,"fix":{"range":[11362,11362],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11501 is used outside of binding context.","line":2,"column":11343,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11344,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11344,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11345,"fix":{"range":[11364,11365],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<=' must be spaced.","line":2,"column":11346,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11348,"fix":{"range":[11366,11368],"text":" <= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":11349,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":11351,"fix":{"range":[11369,11371],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11501 is used outside of binding context.","line":2,"column":11353,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11354,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11354,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11355,"fix":{"range":[11374,11375],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":11357,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11360,"fix":{"range":[11377,11380],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11363,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11364,"fix":{"range":[11384,11384],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11363,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11369,"fix":{"range":[11383,11383],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11501 is used outside of binding context.","line":2,"column":11364,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11365,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+=' must be spaced.","line":2,"column":11365,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11367,"fix":{"range":[11385,11387],"text":" += "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11368,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11369,"fix":{"range":[11388,11388],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11368,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11369,"fix":{"range":[11388,11388],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":11371,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":11375,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11376,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11377,"fix":{"range":[11396,11397],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11379,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11380,"fix":{"range":[11400,11400],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":11382,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":11386,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11387,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11388,"fix":{"range":[11407,11408],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11390,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11391,"fix":{"range":[11411,11411],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11393,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11394,"fix":{"range":[11413,11414],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11501 is used outside of binding context.","line":2,"column":11394,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11395,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11395,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11396,"fix":{"range":[11415,11415],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11395,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11396,"fix":{"range":[11415,11415],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11397,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11398,"fix":{"range":[11417,11418],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-multi-assign","severity":2,"message":"Unexpected chained assignment.","line":2,"column":11398,"nodeType":"AssignmentExpression","messageId":"unexpectedChain","endLine":2,"endColumn":11409,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11406,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11407,"fix":{"range":[11426,11427],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11409,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11410,"fix":{"range":[11430,11430],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11410,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11422,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11410,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11422,"fix":{"range":[11430,11433],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":2,"message":"'ae' is assigned a value but never used.","line":2,"column":11414,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11416,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11416,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11417,"fix":{"range":[11436,11437],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11421,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11422,"fix":{"range":[11442,11442],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"while\".","line":2,"column":11422,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11427,"fix":{"range":[11447,11447],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":11430,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11431,"fix":{"range":[11450,11451],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11433,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11434,"fix":{"range":[11454,11454],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11433,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11893,"fix":{"range":[11453,11453],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11434,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11448,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11434,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11448,"fix":{"range":[11454,11457],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":2,"message":"'af' is assigned a value but never used.","line":2,"column":11438,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11440,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11440,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11441,"fix":{"range":[11460,11461],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11447,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11448,"fix":{"range":[11468,11468],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11448,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11467,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11448,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11467,"fix":{"range":[11468,11471],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11453,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11454,"fix":{"range":[11473,11474],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11459,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11460,"fix":{"range":[11479,11480],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":11462,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":11464,"fix":{"range":[11482,11484],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11466,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11467,"fix":{"range":[11487,11487],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11467,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11479,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11467,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11479,"fix":{"range":[11487,11490],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":2,"message":"'ag' is assigned a value but never used.","line":2,"column":11471,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11473,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11473,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11474,"fix":{"range":[11493,11494],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11478,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11479,"fix":{"range":[11499,11499],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11479,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11497,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11479,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11497,"fix":{"range":[11499,11502],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11485,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11486,"fix":{"range":[11505,11506],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11489,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11490,"fix":{"range":[11509,11510],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":11492,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":11494,"fix":{"range":[11512,11514],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11496,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11497,"fix":{"range":[11517,11517],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11497,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11518,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11497,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11518,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-redeclare","severity":2,"message":"'W' is already defined.","line":2,"column":11501,"nodeType":"Identifier","messageId":"redeclared","endLine":2,"endColumn":11502,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11330 is used outside of binding context.","line":2,"column":11501,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11502,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11502,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11503,"fix":{"range":[11522,11523],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11513,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11514,"fix":{"range":[11534,11534],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11517,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11518,"fix":{"range":[11538,11538],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11518,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11534,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11518,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11534,"fix":{"range":[11538,11541],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11524,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11525,"fix":{"range":[11544,11545],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11530,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11531,"fix":{"range":[11550,11551],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11533,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11534,"fix":{"range":[11554,11554],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11534,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11540,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11534,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11540,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11539,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11540,"fix":{"range":[11560,11560],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11540,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11542,"fix":{"range":[11562,11562],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '!==' must be spaced.","line":2,"column":11554,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11557,"fix":{"range":[11574,11577],"text":" !== "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":11558,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":11560,"fix":{"range":[11578,11580],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-cond-assign","severity":2,"message":"Unexpected assignment within an 'if' statement.","line":2,"column":11561,"nodeType":"AssignmentExpression","messageId":"unexpected","endLine":2,"endColumn":11580,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11562,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11563,"fix":{"range":[11582,11583],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11577,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11578,"fix":{"range":[11598,11598],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11330 is used outside of binding context.","line":2,"column":11578,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11579,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11582,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11583,"fix":{"range":[11603,11603],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11582,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11858,"fix":{"range":[11602,11602],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11583,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11585,"fix":{"range":[11605,11605],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11589,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11590,"fix":{"range":[11610,11610],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11589,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11611,"fix":{"range":[11609,11609],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11591,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11592,"fix":{"range":[11611,11612],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11604,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11605,"fix":{"range":[11625,11625],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":11605,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":11609,"fix":{"range":[11625,11629],"text":"'\\r'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11610,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11611,"fix":{"range":[11630,11630],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11610,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11611,"fix":{"range":[11630,11630],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11623,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11624,"fix":{"range":[11643,11644],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11625,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11626,"fix":{"range":[11646,11646],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11626,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11650,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11626,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11650,"fix":{"range":[11646,11649],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11632,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11633,"fix":{"range":[11652,11653],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11649,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11650,"fix":{"range":[11670,11670],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11650,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11682,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11650,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11682,"fix":{"range":[11670,11673],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11656,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11657,"fix":{"range":[11676,11677],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":11674,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":11680,"fix":{"range":[11694,11700],"text":"'SPAN'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11681,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11682,"fix":{"range":[11702,11702],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11694,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11695,"fix":{"range":[11714,11715],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11698,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11699,"fix":{"range":[11718,11719],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11701,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11702,"fix":{"range":[11722,11722],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11702,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11723,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11702,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11723,"fix":{"range":[11722,11725],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11708,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11709,"fix":{"range":[11728,11729],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11722,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11723,"fix":{"range":[11743,11743],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11741,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11742,"fix":{"range":[11762,11762],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11745,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11746,"fix":{"range":[11766,11766],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11764,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11765,"fix":{"range":[11785,11785],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11765,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11767,"fix":{"range":[11787,11787],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":11769,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11770,"fix":{"range":[11789,11790],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11772,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11773,"fix":{"range":[11793,11793],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11772,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11857,"fix":{"range":[11792,11792],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":11778,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11779,"fix":{"range":[11798,11799],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11781,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11782,"fix":{"range":[11801,11802],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-multi-assign","severity":2,"message":"Unexpected chained assignment.","line":2,"column":11782,"nodeType":"AssignmentExpression","messageId":"unexpectedChain","endLine":2,"endColumn":11821,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11784,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11785,"fix":{"range":[11804,11805],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11330 is used outside of binding context.","line":2,"column":11816,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11817,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11817,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11818,"fix":{"range":[11838,11838],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11821,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11822,"fix":{"range":[11842,11842],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11840,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11841,"fix":{"range":[11861,11861],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11856,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11857,"fix":{"range":[11876,11876],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11856,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11857,"fix":{"range":[11876,11876],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11857,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11858,"fix":{"range":[11877,11877],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11859,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11860,"fix":{"range":[11879,11880],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-scoped-var","severity":2,"message":"'W' declared on line 2 column 11330 is used outside of binding context.","line":2,"column":11860,"nodeType":"Identifier","messageId":"outOfScope","endLine":2,"endColumn":11861,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11861,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11862,"fix":{"range":[11882,11882],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11862,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11864,"fix":{"range":[11884,11884],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":11866,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11868,"fix":{"range":[11886,11888],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11870,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11871,"fix":{"range":[11891,11891],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11870,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11877,"fix":{"range":[11890,11890],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+=' must be spaced.","line":2,"column":11873,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11875,"fix":{"range":[11893,11895],"text":" += "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11876,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11877,"fix":{"range":[11896,11896],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11876,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11877,"fix":{"range":[11896,11896],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":11877,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":11879,"fix":{"range":[11897,11897],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11877,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11879,"fix":{"range":[11899,11899],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":11881,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11883,"fix":{"range":[11901,11903],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11886,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11887,"fix":{"range":[11907,11907],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11886,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11892,"fix":{"range":[11906,11906],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+=' must be spaced.","line":2,"column":11888,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11890,"fix":{"range":[11908,11910],"text":" += "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11891,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11892,"fix":{"range":[11911,11911],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11891,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11892,"fix":{"range":[11911,11911],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11892,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11893,"fix":{"range":[11912,11912],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11893,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11894,"fix":{"range":[11913,11913],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":11894,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":11897,"fix":{"range":[11914,11914],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11894,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11903,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11894,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11903,"fix":{"range":[11914,11917],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11899,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11900,"fix":{"range":[11919,11920],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11902,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11903,"fix":{"range":[11923,11923],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":11915,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":11916,"fix":{"range":[11936,11936],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11918,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11919,"fix":{"range":[11939,11939],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11918,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":12071,"fix":{"range":[11938,11938],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":11919,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11922,"fix":{"range":[11942,11942],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11923,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11937,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11923,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11937,"fix":{"range":[11943,11946],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11928,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11929,"fix":{"range":[11948,11949],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11937,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11938,"fix":{"range":[11958,11958],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '--' used.","line":2,"column":11938,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":11941,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":11941,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":11943,"fix":{"range":[11961,11963],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11946,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11947,"fix":{"range":[11967,11967],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11946,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":12070,"fix":{"range":[11966,11966],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":11947,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":11958,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":11947,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":11958,"fix":{"range":[11967,11970],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11952,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":11953,"fix":{"range":[11972,11973],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":11957,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":11958,"fix":{"range":[11978,11978],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11958,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11960,"fix":{"range":[11980,11980],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":2,"column":11964,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":2,"endColumn":11978,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[11982,11999],"text":"Object.prototype.hasOwnProperty.call(t, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11982,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11983,"fix":{"range":[12003,12003],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":11982,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":11990,"fix":{"range":[12002,12002],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":11987,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":11988,"fix":{"range":[12007,12008],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":11989,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11990,"fix":{"range":[12009,12009],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":11989,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":11990,"fix":{"range":[12009,12009],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":11990,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":11994,"fix":{"range":[12010,12010],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":11990,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11994,"fix":{"range":[12014,12014],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":11994,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":11995,"fix":{"range":[12015,12015],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":11995,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":11997,"fix":{"range":[12017,12017],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":11995,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":12068,"fix":{"range":[12014,12089],"text":" if(window.console){console.warn(\"cannot override language handler %s\",T)}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":11998,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":12004,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":12013,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12014,"fix":{"range":[12034,12034],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":12013,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":12068,"fix":{"range":[12033,12033],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":2,"column":12014,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2,"endColumn":12026,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[12034,12087],"text":""},"desc":"Remove the console.warn()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12027,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12064,"fix":{"range":[12047,12084],"text":"'cannot override language handler %s'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12064,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12065,"fix":{"range":[12085,12085],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":12067,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12068,"fix":{"range":[12087,12087],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":12067,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":12068,"fix":{"range":[12087,12087],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":12068,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12069,"fix":{"range":[12088,12088],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":12069,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12070,"fix":{"range":[12089,12089],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":12070,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12071,"fix":{"range":[12090,12090],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":12071,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":12079,"fix":{"range":[12091,12091],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12083,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12084,"fix":{"range":[12104,12104],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":12086,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12087,"fix":{"range":[12107,12107],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":12086,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":12179,"fix":{"range":[12106,12106],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":12087,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":12089,"fix":{"range":[12109,12109],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":12093,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":12095,"fix":{"range":[12113,12115],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":2,"column":12097,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":2,"endColumn":12111,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[12115,12132],"text":"Object.prototype.hasOwnProperty.call(t, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":12116,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12117,"fix":{"range":[12137,12137],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":12116,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":12167,"fix":{"range":[12136,12136],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to function parameter 'T'.","line":2,"column":12117,"nodeType":"Identifier","messageId":"assignmentToFunctionParam","endLine":2,"endColumn":12118,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":12118,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":12119,"fix":{"range":[12138,12139],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":12134,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":12135,"fix":{"range":[12154,12155],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12135,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12151,"fix":{"range":[12155,12171],"text":"'default-markup'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":12151,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":12152,"fix":{"range":[12171,12172],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12152,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12166,"fix":{"range":[12172,12186],"text":"'default-code'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":12166,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12167,"fix":{"range":[12186,12186],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":12166,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":12167,"fix":{"range":[12186,12186],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"return\".","line":2,"column":12167,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":12173,"fix":{"range":[12187,12187],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":12178,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":12179,"fix":{"range":[12198,12198],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":12178,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":12179,"fix":{"range":[12198,12198],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12182,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12183,"fix":{"range":[12203,12203],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12184,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12198,"fix":{"range":[12204,12218],"text":"'default-code'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":12200,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":12201,"fix":{"range":[12221,12221],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12207,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12208,"fix":{"range":[12228,12228],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12211,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12212,"fix":{"range":[12232,12232],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12222,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12223,"fix":{"range":[12243,12243],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12225,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12226,"fix":{"range":[12246,12246],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12246,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12247,"fix":{"range":[12267,12267],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12249,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12250,"fix":{"range":[12270,12270],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\!.","line":2,"column":12253,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12254,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12273,12274],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12273,12273],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\-.","line":2,"column":12269,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12270,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12289,12290],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12289,12289],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12277,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12278,"fix":{"range":[12298,12298],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12279,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12286,"fix":{"range":[12299,12306],"text":"'lang-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12286,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12287,"fix":{"range":[12307,12307],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12313,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12314,"fix":{"range":[12334,12334],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12315,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12322,"fix":{"range":[12335,12342],"text":"'lang-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12322,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12323,"fix":{"range":[12343,12343],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12347,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12348,"fix":{"range":[12368,12368],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12350,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12351,"fix":{"range":[12371,12371],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12370,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12371,"fix":{"range":[12391,12391],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12372,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12379,"fix":{"range":[12392,12399],"text":"'lang-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12379,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12380,"fix":{"range":[12400,12400],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12421,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12422,"fix":{"range":[12442,12442],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12423,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12432,"fix":{"range":[12443,12452],"text":"'lang-js'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12432,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12433,"fix":{"range":[12453,12453],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12482,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12483,"fix":{"range":[12503,12503],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12484,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12494,"fix":{"range":[12504,12514],"text":"'lang-css'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12494,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12495,"fix":{"range":[12515,12515],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12542,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12543,"fix":{"range":[12563,12563],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12544,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12557,"fix":{"range":[12564,12577],"text":"'lang-in.tag'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12557,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12558,"fix":{"range":[12578,12578],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12583,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12584,"fix":{"range":[12604,12604],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12585,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12601,"fix":{"range":[12605,12621],"text":"'default-markup'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12601,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12602,"fix":{"range":[12622,12622],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12602,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12607,"fix":{"range":[12622,12627],"text":"'htm'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12607,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12608,"fix":{"range":[12628,12628],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12608,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12614,"fix":{"range":[12628,12634],"text":"'html'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12614,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12615,"fix":{"range":[12635,12635],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12615,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12621,"fix":{"range":[12635,12641],"text":"'mxml'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12621,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12622,"fix":{"range":[12642,12642],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12622,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12629,"fix":{"range":[12642,12649],"text":"'xhtml'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12629,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12630,"fix":{"range":[12650,12650],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12630,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12635,"fix":{"range":[12650,12655],"text":"'xml'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12635,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12636,"fix":{"range":[12656,12656],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12636,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12641,"fix":{"range":[12656,12661],"text":"'xsl'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":12643,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":12644,"fix":{"range":[12664,12664],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12651,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12652,"fix":{"range":[12672,12672],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12660,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12661,"fix":{"range":[12681,12681],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12665,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12666,"fix":{"range":[12686,12686],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12666,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12675,"fix":{"range":[12686,12695],"text":"' \\t\\r\\n'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12676,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12677,"fix":{"range":[12697,12697],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12679,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12680,"fix":{"range":[12700,12700],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12685,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12686,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12705,12706],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12705,12705],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12689,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12690,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12709,12710],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12709,12709],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12693,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12694,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12713,12714],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12713,12713],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12697,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12698,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12717,12718],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12717,12717],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12701,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12702,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12721,12722],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12721,12721],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12705,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12706,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12725,12726],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12725,12725],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12710,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12711,"fix":{"range":[12731,12731],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12715,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12716,"fix":{"range":[12736,12736],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12723,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12724,"fix":{"range":[12744,12744],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12727,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12728,"fix":{"range":[12748,12748],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12764,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12765,"fix":{"range":[12785,12785],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12767,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12768,"fix":{"range":[12788,12788],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12809,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12810,"fix":{"range":[12830,12830],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12811,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12824,"fix":{"range":[12831,12844],"text":"'lang-uq.val'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12824,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12825,"fix":{"range":[12845,12845],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12835,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12836,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12855,12856],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12855,12855],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12837,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12838,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12857,12858],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12857,12857],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12849,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12850,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12869,12870],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12869,12869],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12851,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12852,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12871,12872],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12871,12871],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\/.","line":2,"column":12855,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12856,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12875,12876],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12875,12875],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12871,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12872,"fix":{"range":[12892,12892],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12874,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12875,"fix":{"range":[12895,12895],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\/.","line":2,"column":12881,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12882,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12901,12902],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12901,12901],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12887,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12888,"fix":{"range":[12908,12908],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12889,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12898,"fix":{"range":[12909,12918],"text":"'lang-js'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12898,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12899,"fix":{"range":[12919,12919],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12913,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12914,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12933,12934],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12933,12933],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12918,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12919,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12938,12939],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12938,12938],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12923,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12924,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12943,12944],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12943,12943],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12928,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12929,"fix":{"range":[12949,12949],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12930,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12939,"fix":{"range":[12950,12959],"text":"'lang-js'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12939,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12940,"fix":{"range":[12960,12960],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12954,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12955,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12974,12975],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12974,12974],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12959,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12960,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12979,12980],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12979,12979],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":12964,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12965,"suggestions":[{"messageId":"removeEscape","fix":{"range":[12984,12985],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[12984,12984],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12969,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12970,"fix":{"range":[12990,12990],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":12971,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":12980,"fix":{"range":[12991,13000],"text":"'lang-js'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":12980,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":12981,"fix":{"range":[13001,13001],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":12998,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":12999,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13018,13019],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13018,13018],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":13000,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13001,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13020,13021],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13020,13020],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13011,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13012,"fix":{"range":[13032,13032],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13013,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13023,"fix":{"range":[13033,13043],"text":"'lang-css'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13023,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13024,"fix":{"range":[13044,13044],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":13038,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13039,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13058,13059],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13058,13058],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":13043,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13044,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13063,13064],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13063,13063],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":13048,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13049,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13068,13069],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13068,13068],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13053,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13054,"fix":{"range":[13074,13074],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13055,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13065,"fix":{"range":[13075,13085],"text":"'lang-css'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13065,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13066,"fix":{"range":[13086,13086],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":13080,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13081,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13100,13101],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13100,13100],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":13085,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13086,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13105,13106],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13105,13105],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":13090,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13091,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13110,13111],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13110,13110],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13095,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13096,"fix":{"range":[13116,13116],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13097,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13107,"fix":{"range":[13117,13127],"text":"'lang-css'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13107,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13108,"fix":{"range":[13128,13128],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":13125,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13126,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13145,13146],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13145,13145],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":13127,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":13128,"suggestions":[{"messageId":"removeEscape","fix":{"range":[13147,13148],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[13147,13147],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13140,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13141,"fix":{"range":[13161,13161],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13142,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13150,"fix":{"range":[13162,13170],"text":"'in.tag'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13152,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13153,"fix":{"range":[13173,13173],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13159,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13160,"fix":{"range":[13180,13180],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13163,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13164,"fix":{"range":[13184,13184],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13177,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13178,"fix":{"range":[13198,13198],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13179,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13187,"fix":{"range":[13199,13207],"text":"'uq.val'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13189,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13190,"fix":{"range":[13210,13210],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13194,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13195,"fix":{"range":[13215,13215],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":13194,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":13195,"fix":{"range":[13215,13215],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13204,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13205,"fix":{"range":[13224,13224],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13205,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13206,"fix":{"range":[13226,13226],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":13219,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13223,"fix":{"range":[13239,13239],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13223,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13224,"fix":{"range":[13244,13244],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'cStyleComments'.","line":2,"column":13239,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13243,"fix":{"range":[13259,13259],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13243,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13244,"fix":{"range":[13264,13264],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'types'.","line":2,"column":13250,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13251,"fix":{"range":[13270,13270],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13251,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13252,"fix":{"range":[13271,13271],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":13251,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":13252,"fix":{"range":[13271,13271],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13253,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13254,"fix":{"range":[13274,13274],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13255,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13258,"fix":{"range":[13275,13278],"text":"'c'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13258,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13259,"fix":{"range":[13279,13279],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13259,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13263,"fix":{"range":[13279,13283],"text":"'cc'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13263,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13264,"fix":{"range":[13284,13284],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13264,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13269,"fix":{"range":[13284,13289],"text":"'cpp'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13269,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13270,"fix":{"range":[13290,13290],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13270,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13275,"fix":{"range":[13290,13295],"text":"'cxx'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13275,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13276,"fix":{"range":[13296,13296],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13276,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13281,"fix":{"range":[13296,13301],"text":"'cyc'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13281,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13282,"fix":{"range":[13302,13302],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13282,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13285,"fix":{"range":[13302,13305],"text":"'m'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13287,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13288,"fix":{"range":[13308,13308],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13292,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13293,"fix":{"range":[13313,13313],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13302,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13319,"fix":{"range":[13322,13322],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13302,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13319,"fix":{"range":[13322,13339],"text":"'null,true,false'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13319,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13320,"fix":{"range":[13339,13339],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13321,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13322,"fix":{"range":[13342,13342],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13323,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13329,"fix":{"range":[13343,13349],"text":"'json'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13331,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13332,"fix":{"range":[13352,13352],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13336,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13337,"fix":{"range":[13357,13357],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":13336,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":13337,"fix":{"range":[13357,13357],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13346,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13347,"fix":{"range":[13366,13366],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13347,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13348,"fix":{"range":[13368,13368],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":13361,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13365,"fix":{"range":[13381,13381],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13365,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13366,"fix":{"range":[13386,13386],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'cStyleComments'.","line":2,"column":13381,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13385,"fix":{"range":[13401,13401],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13385,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13386,"fix":{"range":[13406,13406],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'verbatimStrings'.","line":2,"column":13402,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13406,"fix":{"range":[13422,13422],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13406,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13407,"fix":{"range":[13427,13427],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'types'.","line":2,"column":13413,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13414,"fix":{"range":[13433,13433],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13414,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13415,"fix":{"range":[13434,13434],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":13414,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":13415,"fix":{"range":[13434,13434],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13416,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13417,"fix":{"range":[13437,13437],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13418,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13422,"fix":{"range":[13438,13442],"text":"'cs'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13424,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13425,"fix":{"range":[13445,13445],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13429,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13430,"fix":{"range":[13450,13450],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13439,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13440,"fix":{"range":[13459,13459],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13440,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13441,"fix":{"range":[13461,13461],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'cStyleComments'.","line":2,"column":13456,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13460,"fix":{"range":[13476,13476],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13460,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13461,"fix":{"range":[13480,13480],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13462,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13463,"fix":{"range":[13483,13483],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13464,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13470,"fix":{"range":[13484,13490],"text":"'java'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13472,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13473,"fix":{"range":[13493,13493],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13477,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13478,"fix":{"range":[13498,13498],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13487,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13488,"fix":{"range":[13507,13507],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13488,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13489,"fix":{"range":[13509,13509],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":13502,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13506,"fix":{"range":[13522,13522],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13506,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13507,"fix":{"range":[13527,13527],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'multiLineStrings'.","line":2,"column":13524,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13528,"fix":{"range":[13544,13544],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13528,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13529,"fix":{"range":[13548,13548],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13530,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13531,"fix":{"range":[13551,13551],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13532,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13537,"fix":{"range":[13552,13557],"text":"'bsh'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13537,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13538,"fix":{"range":[13558,13558],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13538,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13543,"fix":{"range":[13558,13563],"text":"'csh'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13543,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13544,"fix":{"range":[13564,13564],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13544,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13548,"fix":{"range":[13564,13568],"text":"'sh'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13550,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13551,"fix":{"range":[13571,13571],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13555,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13556,"fix":{"range":[13576,13576],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":13555,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":13556,"fix":{"range":[13576,13576],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13565,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13566,"fix":{"range":[13585,13585],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13566,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13567,"fix":{"range":[13587,13587],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":13580,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13584,"fix":{"range":[13600,13600],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13584,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13585,"fix":{"range":[13605,13605],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'multiLineStrings'.","line":2,"column":13602,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13606,"fix":{"range":[13622,13622],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13606,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13607,"fix":{"range":[13627,13627],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'tripleQuotedStrings'.","line":2,"column":13627,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13631,"fix":{"range":[13647,13647],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13631,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13632,"fix":{"range":[13651,13651],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":13631,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":13632,"fix":{"range":[13651,13651],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13633,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13634,"fix":{"range":[13654,13654],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13635,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13639,"fix":{"range":[13655,13659],"text":"'cv'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13639,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13640,"fix":{"range":[13660,13660],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13640,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13644,"fix":{"range":[13660,13664],"text":"'py'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13646,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13647,"fix":{"range":[13667,13667],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13651,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13652,"fix":{"range":[13672,13672],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":13651,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":13652,"fix":{"range":[13672,13672],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13661,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13662,"fix":{"range":[13681,13681],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13662,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13663,"fix":{"range":[13683,13683],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":13676,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13680,"fix":{"range":[13696,13696],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13680,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13681,"fix":{"range":[13701,13701],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'multiLineStrings'.","line":2,"column":13698,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13702,"fix":{"range":[13718,13718],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13702,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13703,"fix":{"range":[13723,13723],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'regexLiterals'.","line":2,"column":13717,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13721,"fix":{"range":[13737,13737],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13721,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13722,"fix":{"range":[13741,13741],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":13721,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":13722,"fix":{"range":[13741,13741],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13723,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13724,"fix":{"range":[13744,13744],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13725,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13731,"fix":{"range":[13745,13751],"text":"'perl'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13731,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13732,"fix":{"range":[13752,13752],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13732,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13736,"fix":{"range":[13752,13756],"text":"'pl'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13736,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13737,"fix":{"range":[13757,13757],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13737,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13741,"fix":{"range":[13757,13761],"text":"'pm'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13743,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13744,"fix":{"range":[13764,13764],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13748,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13749,"fix":{"range":[13769,13769],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":13748,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":13749,"fix":{"range":[13769,13769],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13758,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13759,"fix":{"range":[13778,13778],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13759,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13760,"fix":{"range":[13780,13780],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":13773,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13777,"fix":{"range":[13793,13793],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13777,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13778,"fix":{"range":[13798,13798],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'multiLineStrings'.","line":2,"column":13795,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13799,"fix":{"range":[13815,13815],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13799,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13800,"fix":{"range":[13820,13820],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'regexLiterals'.","line":2,"column":13814,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13818,"fix":{"range":[13834,13834],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13818,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13819,"fix":{"range":[13838,13838],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":13818,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":13819,"fix":{"range":[13838,13838],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13820,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13821,"fix":{"range":[13841,13841],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13822,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13826,"fix":{"range":[13842,13846],"text":"'rb'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13828,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13829,"fix":{"range":[13849,13849],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13833,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13834,"fix":{"range":[13854,13854],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13843,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13844,"fix":{"range":[13863,13863],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13844,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13845,"fix":{"range":[13865,13865],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'cStyleComments'.","line":2,"column":13860,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13864,"fix":{"range":[13880,13880],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13864,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13865,"fix":{"range":[13885,13885],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'regexLiterals'.","line":2,"column":13879,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13883,"fix":{"range":[13899,13899],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":13883,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":13884,"fix":{"range":[13903,13903],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13885,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13886,"fix":{"range":[13906,13906],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":13887,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":13891,"fix":{"range":[13907,13911],"text":"'js'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":13893,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":13894,"fix":{"range":[13914,13914],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":13898,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":13899,"fix":{"range":[13919,13919],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":13898,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":13899,"fix":{"range":[13919,13919],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'keywords'.","line":2,"column":13908,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":13909,"fix":{"range":[13928,13928],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13909,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13910,"fix":{"range":[13930,13930],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'hashComments'.","line":2,"column":13923,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13924,"fix":{"range":[13943,13943],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13924,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13925,"fix":{"range":[13945,13945],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'cStyleComments'.","line":2,"column":13940,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13944,"fix":{"range":[13960,13960],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13944,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13945,"fix":{"range":[13965,13965],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'multilineStrings'.","line":2,"column":13962,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13966,"fix":{"range":[13982,13982],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13966,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13967,"fix":{"range":[13987,13987],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'tripleQuotedStrings'.","line":2,"column":13987,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":13991,"fix":{"range":[14007,14007],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":13991,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":13992,"fix":{"range":[14012,14012],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'regexLiterals'.","line":2,"column":14006,"nodeType":"Literal","messageId":"missingValue","endLine":2,"endColumn":14010,"fix":{"range":[14026,14026],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":14010,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":14011,"fix":{"range":[14030,14030],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":14010,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":14011,"fix":{"range":[14030,14030],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14012,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14013,"fix":{"range":[14033,14033],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14014,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14022,"fix":{"range":[14034,14042],"text":"'coffee'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14024,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14025,"fix":{"range":[14045,14045],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14031,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14032,"fix":{"range":[14052,14052],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14035,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14036,"fix":{"range":[14056,14056],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14049,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14050,"fix":{"range":[14070,14070],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14051,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14058,"fix":{"range":[14071,14078],"text":"'regex'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14060,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14061,"fix":{"range":[14081,14081],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14074,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14075,"fix":{"range":[14095,14095],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14074,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14269,"fix":{"range":[14094,14094],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14075,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14097,"fix":{"range":[14095,14098],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14080,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14081,"fix":{"range":[14100,14101],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14096,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14097,"fix":{"range":[14117,14117],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"try\".","line":2,"column":14097,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14100,"fix":{"range":[14120,14120],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14100,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14101,"fix":{"range":[14121,14121],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14101,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14123,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14101,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14123,"fix":{"range":[14121,14124],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14106,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14107,"fix":{"range":[14126,14127],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14122,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14123,"fix":{"range":[14143,14143],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14123,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14142,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14123,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14142,"fix":{"range":[14143,14146],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14128,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14129,"fix":{"range":[14148,14149],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14141,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14142,"fix":{"range":[14162,14162],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'V'.","line":2,"column":14142,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":2,"endColumn":14143,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14154,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":14155,"fix":{"range":[14174,14175],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14156,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14157,"fix":{"range":[14177,14177],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'V'.","line":2,"column":14157,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":2,"endColumn":14158,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14164,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":14165,"fix":{"range":[14184,14185],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14172,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14173,"fix":{"range":[14193,14193],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'V'.","line":2,"column":14173,"nodeType":"Identifier","messageId":"assignmentToFunctionParamProp","endLine":2,"endColumn":14174,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14182,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":14183,"fix":{"range":[14202,14203],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14184,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14185,"fix":{"range":[14205,14205],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14188,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14189,"fix":{"range":[14209,14209],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14194,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14195,"fix":{"range":[14215,14215],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14199,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14200,"fix":{"range":[14219,14219],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14199,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":14200,"fix":{"range":[14219,14219],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"catch\".","line":2,"column":14200,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":14205,"fix":{"range":[14220,14220],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"catch\".","line":2,"column":14200,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14205,"fix":{"range":[14225,14225],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14208,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14209,"fix":{"range":[14229,14229],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14208,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14268,"fix":{"range":[14228,14228],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":14209,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14211,"fix":{"range":[14231,14231],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14212,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14221,"fix":{"range":[14232,14241],"text":"'console'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":14225,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":14231,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14232,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14233,"fix":{"range":[14253,14253],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14232,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14267,"fix":{"range":[14252,14252],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":2,"column":14233,"nodeType":"MemberExpression","messageId":"unexpected","endLine":2,"endColumn":14244,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[14253,14286],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":14246,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":14248,"fix":{"range":[14266,14268],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":14255,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":14256,"fix":{"range":[14275,14276],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":14263,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":14264,"fix":{"range":[14283,14284],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14266,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14267,"fix":{"range":[14286,14286],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14266,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":14267,"fix":{"range":[14286,14286],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14267,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14268,"fix":{"range":[14287,14287],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14268,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14269,"fix":{"range":[14288,14288],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":14269,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":14277,"fix":{"range":[14289,14289],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14281,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14282,"fix":{"range":[14302,14302],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14283,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14284,"fix":{"range":[14304,14304],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14286,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14287,"fix":{"range":[14307,14307],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14286,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14425,"fix":{"range":[14306,14306],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14287,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14323,"fix":{"range":[14307,14310],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14292,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14293,"fix":{"range":[14312,14313],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":2,"column":14293,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":14301,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14316,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14321,"fix":{"range":[14336,14341],"text":"'PRE'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14322,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14323,"fix":{"range":[14343,14343],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14334,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":14335,"fix":{"range":[14354,14355],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14336,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14337,"fix":{"range":[14357,14357],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":14337,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14339,"fix":{"range":[14359,14359],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14342,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14343,"fix":{"range":[14363,14363],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14342,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14350,"fix":{"range":[14362,14362],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14346,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14347,"fix":{"range":[14367,14367],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14349,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14350,"fix":{"range":[14369,14369],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14349,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":14350,"fix":{"range":[14369,14369],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":14350,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":14353,"fix":{"range":[14370,14370],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14350,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14401,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14350,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14401,"fix":{"range":[14370,14373],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14355,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14356,"fix":{"range":[14375,14376],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":14356,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":14357,"fix":{"range":[14377,14377],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'langExtension'.","line":2,"column":14371,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":14372,"fix":{"range":[14391,14391],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14372,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14373,"fix":{"range":[14393,14393],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'numberLines'.","line":2,"column":14385,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":14386,"fix":{"range":[14405,14405],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14386,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14387,"fix":{"range":[14407,14407],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'sourceNode'.","line":2,"column":14398,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":14399,"fix":{"range":[14418,14418],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":14399,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":14400,"fix":{"range":[14419,14419],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14400,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14401,"fix":{"range":[14421,14421],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14405,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14406,"fix":{"range":[14426,14426],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14424,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14425,"fix":{"range":[14444,14444],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14424,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":14425,"fix":{"range":[14444,14444],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"function\".","line":2,"column":14425,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":14433,"fix":{"range":[14445,14445],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14439,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14440,"fix":{"range":[14460,14460],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14439,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15491,"fix":{"range":[14459,14459],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14454,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14455,"fix":{"range":[14475,14475],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14454,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14496,"fix":{"range":[14474,14474],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":2,"column":14462,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":14470,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14495,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14496,"fix":{"range":[14515,14515],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14495,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":14496,"fix":{"range":[14515,14515],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":14496,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":14499,"fix":{"range":[14516,14516],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14496,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14533,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14496,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14533,"fix":{"range":[14516,14519],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14502,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14503,"fix":{"range":[14522,14523],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14506,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14511,"fix":{"range":[14526,14531],"text":"'pre'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14512,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14513,"fix":{"range":[14533,14533],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14515,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14521,"fix":{"range":[14535,14541],"text":"'code'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14522,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14523,"fix":{"range":[14543,14543],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14525,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14530,"fix":{"range":[14545,14550],"text":"'xmp'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14532,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14533,"fix":{"range":[14553,14553],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14533,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14542,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14533,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14542,"fix":{"range":[14553,14556],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14538,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14539,"fix":{"range":[14558,14559],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14541,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14542,"fix":{"range":[14562,14562],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":14542,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14545,"fix":{"range":[14565,14565],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14546,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14554,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14546,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14554,"fix":{"range":[14566,14569],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14552,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14553,"fix":{"range":[14572,14573],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14554,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14555,"fix":{"range":[14575,14575],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":14557,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":14558,"fix":{"range":[14577,14578],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14567,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14568,"fix":{"range":[14588,14588],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":14568,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":14572,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14573,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14574,"fix":{"range":[14594,14594],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14573,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14630,"fix":{"range":[14593,14593],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":14574,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14577,"fix":{"range":[14597,14597],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14578,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14601,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14578,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14601,"fix":{"range":[14598,14601],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14583,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14584,"fix":{"range":[14603,14604],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":14585,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":14586,"fix":{"range":[14606,14606],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14587,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14588,"fix":{"range":[14607,14608],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14601,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14602,"fix":{"range":[14622,14622],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":14603,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":14604,"fix":{"range":[14623,14624],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14605,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14606,"fix":{"range":[14626,14626],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":14606,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":14609,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14610,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14611,"fix":{"range":[14631,14631],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14610,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14629,"fix":{"range":[14630,14630],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14628,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14629,"fix":{"range":[14648,14648],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14628,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":14629,"fix":{"range":[14648,14648],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14629,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14630,"fix":{"range":[14649,14649],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14632,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":14633,"fix":{"range":[14652,14653],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14637,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14638,"fix":{"range":[14658,14658],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14638,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14649,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14638,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14649,"fix":{"range":[14658,14661],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14643,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14644,"fix":{"range":[14663,14664],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14648,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14649,"fix":{"range":[14669,14669],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":14649,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14651,"fix":{"range":[14671,14671],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14659,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14660,"fix":{"range":[14680,14680],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14659,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14699,"fix":{"range":[14679,14679],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14661,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":14662,"fix":{"range":[14681,14682],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":14662,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":14663,"fix":{"range":[14683,14683],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'now'.","line":2,"column":14663,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":2,"endColumn":14675,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":2,"column":14663,"nodeType":"Property","messageId":"expectedMethodShorthand","endLine":2,"endColumn":14697,"fix":{"range":[14683,14717],"text":"now(){return +(new Date)}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'now'.","line":2,"column":14667,"nodeType":"FunctionExpression","messageId":"missingValue","endLine":2,"endColumn":14675,"fix":{"range":[14687,14687],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":2,"column":14675,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":2,"endColumn":14676,"fix":{"range":[14695,14695],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14677,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14678,"fix":{"range":[14698,14698],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14677,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":14697,"fix":{"range":[14697,14697],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"new-parens","severity":2,"message":"Missing '()' invoking a constructor.","line":2,"column":14687,"nodeType":"NewExpression","messageId":"missing","endLine":2,"endColumn":14695,"fix":{"range":[14715,14715],"text":"()"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14696,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14697,"fix":{"range":[14716,14716],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14696,"nodeType":"ReturnStatement","messageId":"missingSemi","endLine":2,"endColumn":14697,"fix":{"range":[14716,14716],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":14697,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":14698,"fix":{"range":[14717,14717],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":14698,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14699,"fix":{"range":[14718,14718],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":14698,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":14699,"fix":{"range":[14718,14718],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":14699,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":14702,"fix":{"range":[14719,14719],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14699,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14707,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14699,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14707,"fix":{"range":[14719,14722],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14704,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14705,"fix":{"range":[14724,14725],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14706,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14707,"fix":{"range":[14727,14727],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14707,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14713,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14707,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14713,"fix":{"range":[14727,14730],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14712,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14713,"fix":{"range":[14733,14733],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14713,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14753,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14713,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14753,"fix":{"range":[14733,14736],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14719,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14720,"fix":{"range":[14739,14740],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14752,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14753,"fix":{"range":[14773,14773],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14753,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14778,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14753,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14778,"fix":{"range":[14773,14776],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":2,"message":"'ae' is assigned a value but never used.","line":2,"column":14757,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14759,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14759,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14760,"fix":{"range":[14779,14780],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14777,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14778,"fix":{"range":[14798,14798],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14790,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14791,"fix":{"range":[14811,14811],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14790,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15487,"fix":{"range":[14810,14810],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14791,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14855,"fix":{"range":[14811,14814],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14797,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14798,"fix":{"range":[14817,14818],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":14799,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":14805,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":14832,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":14833,"fix":{"range":[14852,14853],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '+' must be spaced.","line":2,"column":14840,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":14841,"fix":{"range":[14860,14861],"text":" + "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":14844,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":14845,"fix":{"range":[14864,14865],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14854,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14855,"fix":{"range":[14875,14875],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":14855,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14858,"fix":{"range":[14878,14878],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":14861,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":14862,"fix":{"range":[14881,14882],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":14870,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":14872,"fix":{"range":[14890,14892],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":14879,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":14880,"fix":{"range":[14899,14900],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14882,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14883,"fix":{"range":[14903,14903],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":2,"column":14883,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":2,"endColumn":14886,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14887,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14888,"fix":{"range":[14908,14908],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14887,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15435,"fix":{"range":[14907,14907],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14888,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14900,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14888,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14900,"fix":{"range":[14908,14911],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14894,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14895,"fix":{"range":[14914,14915],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14899,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14900,"fix":{"range":[14920,14920],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14900,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14920,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14900,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14920,"fix":{"range":[14920,14923],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14906,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14907,"fix":{"range":[14926,14927],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14919,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14920,"fix":{"range":[14940,14940],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":14920,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14922,"fix":{"range":[14942,14942],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":14934,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":14947,"fix":{"range":[14954,14967],"text":"'prettyprint'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":14948,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":14950,"fix":{"range":[14968,14970],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":14952,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":14953,"fix":{"range":[14973,14973],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":14952,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15434,"fix":{"range":[14972,14972],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14953,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14973,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14953,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14973,"fix":{"range":[14973,14976],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14959,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":14960,"fix":{"range":[14979,14980],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14972,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14973,"fix":{"range":[14993,14993],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":14973,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":14980,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":14973,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":14980,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":14979,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":14980,"fix":{"range":[15000,15000],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":14980,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":14982,"fix":{"range":[15002,15002],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":14986,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":14988,"fix":{"range":[15006,15008],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-cond-assign","severity":2,"message":"Unexpected assignment within an 'if' statement.","line":2,"column":14989,"nodeType":"AssignmentExpression","messageId":"unexpected","endLine":2,"endColumn":14997,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":14991,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":14992,"fix":{"range":[15011,15012],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":14998,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":15000,"fix":{"range":[15018,15020],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":2,"column":15000,"nodeType":"BinaryExpression","messageId":"expected","endLine":2,"endColumn":15019,"fix":{"range":[15020,15039],"text":"am.tagName===\"CODE\""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":15000,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":15006,"fix":{"range":[15020,15026],"text":"'CODE'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":15006,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":15009,"fix":{"range":[15026,15029],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15020,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15021,"fix":{"range":[15041,15041],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15020,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15047,"fix":{"range":[15040,15040],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15023,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15024,"fix":{"range":[15043,15044],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15046,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15047,"fix":{"range":[15066,15066],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15046,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15047,"fix":{"range":[15066,15066],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":15047,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":15049,"fix":{"range":[15067,15067],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":15047,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15049,"fix":{"range":[15069,15069],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15053,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15054,"fix":{"range":[15074,15074],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15053,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15063,"fix":{"range":[15073,15073],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-destructuring","severity":2,"message":"Use array destructuring.","line":2,"column":15054,"nodeType":"AssignmentExpression","messageId":"preferDestructuring","endLine":2,"endColumn":15062,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15056,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15057,"fix":{"range":[15076,15077],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15062,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15063,"fix":{"range":[15082,15082],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15062,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15063,"fix":{"range":[15082,15082],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"var\".","line":2,"column":15063,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":15066,"fix":{"range":[15083,15083],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":15063,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":15076,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":15063,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":15076,"fix":{"range":[15083,15086],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15069,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":15070,"fix":{"range":[15089,15090],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15075,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15076,"fix":{"range":[15096,15096],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"for\".","line":2,"column":15076,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15079,"fix":{"range":[15099,15099],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":15080,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":15100,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":15080,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":15100,"fix":{"range":[15100,15103],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15086,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":15087,"fix":{"range":[15106,15107],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15100,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15101,"fix":{"range":[15121,15121],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15103,"nodeType":"ForStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15104,"fix":{"range":[15124,15124],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15106,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15107,"fix":{"range":[15126,15127],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15121,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15122,"fix":{"range":[15142,15142],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15121,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15257,"fix":{"range":[15141,15141],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":15122,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15124,"fix":{"range":[15144,15144],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":15136,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":15139,"fix":{"range":[15156,15159],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":15139,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":15144,"fix":{"range":[15159,15164],"text":"'pre'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":15144,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":15146,"fix":{"range":[15164,15166],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":15156,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":15159,"fix":{"range":[15176,15179],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":15159,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":15165,"fix":{"range":[15179,15185],"text":"'code'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '||' must be spaced.","line":2,"column":15165,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":15167,"fix":{"range":[15185,15187],"text":" || "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '===' must be spaced.","line":2,"column":15177,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":15180,"fix":{"range":[15197,15200],"text":" === "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":15180,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":15185,"fix":{"range":[15200,15205],"text":"'xmp'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":15186,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":15188,"fix":{"range":[15206,15208],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":15200,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":15202,"fix":{"range":[15220,15222],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":15223,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":15236,"fix":{"range":[15243,15256],"text":"'prettyprint'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '>=' must be spaced.","line":2,"column":15237,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":15239,"fix":{"range":[15257,15259],"text":" >= "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15241,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15242,"fix":{"range":[15262,15262],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15241,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15256,"fix":{"range":[15261,15261],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15244,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15245,"fix":{"range":[15264,15265],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15249,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15250,"fix":{"range":[15270,15270],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15255,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15256,"fix":{"range":[15275,15275],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15255,"nodeType":"BreakStatement","messageId":"missingSemi","endLine":2,"endColumn":15256,"fix":{"range":[15275,15275],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15256,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15257,"fix":{"range":[15276,15276],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":15257,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":15259,"fix":{"range":[15277,15277],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":15257,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15259,"fix":{"range":[15279,15279],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15264,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15265,"fix":{"range":[15285,15285],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15264,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15433,"fix":{"range":[15284,15284],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":2,"column":15265,"nodeType":"VariableDeclaration","messageId":"top","endLine":2,"endColumn":15318,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":15265,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":2,"endColumn":15318,"fix":{"range":[15285,15288],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15271,"nodeType":"VariableDeclarator","messageId":"missingSpace","endLine":2,"endColumn":15272,"fix":{"range":[15291,15292],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15317,"nodeType":"VariableDeclaration","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15318,"fix":{"range":[15338,15338],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15320,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15321,"fix":{"range":[15340,15341],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":2,"column":15321,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":2,"endColumn":15361,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":15323,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":15324,"fix":{"range":[15343,15344],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '&&' must be spaced.","line":2,"column":15329,"nodeType":"LogicalExpression","messageId":"missingSpace","endLine":2,"endColumn":15331,"fix":{"range":[15349,15351],"text":" && "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '?' must be spaced.","line":2,"column":15343,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":15344,"fix":{"range":[15363,15364],"text":" ? "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":15350,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":15351,"fix":{"range":[15370,15371],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator ':' must be spaced.","line":2,"column":15355,"nodeType":"ConditionalExpression","messageId":"missingSpace","endLine":2,"endColumn":15356,"fix":{"range":[15375,15376],"text":" : "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15361,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15362,"fix":{"range":[15382,15382],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":15362,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15364,"fix":{"range":[15384,15384],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15368,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15369,"fix":{"range":[15389,15389],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15368,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15378,"fix":{"range":[15388,15388],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15373,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15374,"fix":{"range":[15394,15394],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15377,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15378,"fix":{"range":[15397,15397],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15377,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15378,"fix":{"range":[15397,15397],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15379,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15380,"fix":{"range":[15399,15400],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":15380,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":15381,"fix":{"range":[15401,15401],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'langExtension'.","line":2,"column":15395,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15397,"fix":{"range":[15415,15415],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15397,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15398,"fix":{"range":[15418,15418],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'sourceNode'.","line":2,"column":15409,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15411,"fix":{"range":[15429,15429],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15411,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15412,"fix":{"range":[15432,15432],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'numberLines'.","line":2,"column":15424,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15426,"fix":{"range":[15444,15444],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":15426,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":15427,"fix":{"range":[15446,15446],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15427,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15428,"fix":{"range":[15448,15448],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15432,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15433,"fix":{"range":[15452,15452],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15432,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15433,"fix":{"range":[15452,15452],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15433,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15434,"fix":{"range":[15453,15453],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15434,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15435,"fix":{"range":[15454,15454],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"if\".","line":2,"column":15435,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":15437,"fix":{"range":[15455,15455],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":15435,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15437,"fix":{"range":[15457,15457],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '<' must be spaced.","line":2,"column":15439,"nodeType":"BinaryExpression","messageId":"missingSpace","endLine":2,"endColumn":15440,"fix":{"range":[15459,15460],"text":" < "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15449,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15450,"fix":{"range":[15470,15470],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15449,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15468,"fix":{"range":[15469,15469],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15462,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15463,"fix":{"range":[15483,15483],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15467,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15468,"fix":{"range":[15487,15487],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15467,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15468,"fix":{"range":[15487,15487],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) before \"else\".","line":2,"column":15468,"nodeType":null,"messageId":"expectedBefore","endLine":2,"endColumn":15472,"fix":{"range":[15488,15488],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"else\".","line":2,"column":15468,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15472,"fix":{"range":[15492,15492],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15472,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15473,"fix":{"range":[15493,15493],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"keyword-spacing","severity":2,"message":"Expected space(s) after \"if\".","line":2,"column":15473,"nodeType":null,"messageId":"expectedAfter","endLine":2,"endColumn":15475,"fix":{"range":[15495,15495],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":2,"column":15473,"nodeType":"IfStatement","messageId":"unexpectedLonelyIf","endLine":2,"endColumn":15485,"fix":{"range":[15492,15506],"text":" if(ad){ad()}"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":2,"column":15479,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15480,"fix":{"range":[15500,15500],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":2,"column":15479,"nodeType":"BlockStatement","messageId":"missingSpace","endLine":2,"endColumn":15485,"fix":{"range":[15499,15499],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15484,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15485,"fix":{"range":[15504,15504],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15484,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15485,"fix":{"range":[15504,15504],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15485,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15486,"fix":{"range":[15505,15505],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15486,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15487,"fix":{"range":[15506,15506],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15490,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15491,"fix":{"range":[15510,15510],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15490,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15491,"fix":{"range":[15510,15510],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":15491,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15497,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15512,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15513,"fix":{"range":[15532,15533],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15514,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15515,"fix":{"range":[15535,15535],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":15515,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15521,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15533,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15534,"fix":{"range":[15553,15554],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15535,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15536,"fix":{"range":[15556,15556],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":2,"column":15536,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15542,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-infix-ops","severity":2,"message":"Operator '=' must be spaced.","line":2,"column":15545,"nodeType":"AssignmentExpression","messageId":"missingSpace","endLine":2,"endColumn":15546,"fix":{"range":[15565,15566],"text":" = "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required after '{'.","line":2,"column":15546,"nodeType":"ObjectExpression","messageId":"requireSpaceAfter","endLine":2,"endColumn":15547,"fix":{"range":[15567,15567],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":2,"column":15546,"nodeType":"ObjectExpression","messageId":"expectedLinebreakAfterOpeningBrace","endLine":2,"endColumn":15547,"fix":{"range":[15567,15567],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'createSimpleLexer'.","line":2,"column":15565,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15566,"fix":{"range":[15585,15585],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15566,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15567,"fix":{"range":[15587,15587],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'registerLangHandler'.","line":2,"column":15587,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15588,"fix":{"range":[15607,15607],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15588,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15589,"fix":{"range":[15609,15609],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'sourceDecorator'.","line":2,"column":15605,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15606,"fix":{"range":[15625,15625],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15606,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15607,"fix":{"range":[15627,15627],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_ATTRIB_NAME'.","line":2,"column":15622,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15623,"fix":{"range":[15642,15642],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15623,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15624,"fix":{"range":[15644,15644],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_ATTRIB_VALUE'.","line":2,"column":15640,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15641,"fix":{"range":[15660,15660],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15641,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15642,"fix":{"range":[15662,15662],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_COMMENT'.","line":2,"column":15653,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15654,"fix":{"range":[15673,15673],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15654,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15655,"fix":{"range":[15675,15675],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_DECLARATION'.","line":2,"column":15670,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15671,"fix":{"range":[15690,15690],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15671,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15672,"fix":{"range":[15692,15692],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_KEYWORD'.","line":2,"column":15683,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15684,"fix":{"range":[15703,15703],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15684,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15685,"fix":{"range":[15705,15705],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_LITERAL'.","line":2,"column":15696,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15697,"fix":{"range":[15716,15716],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15697,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15698,"fix":{"range":[15718,15718],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_NOCODE'.","line":2,"column":15708,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15709,"fix":{"range":[15728,15728],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15709,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15710,"fix":{"range":[15730,15730],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_PLAIN'.","line":2,"column":15719,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15720,"fix":{"range":[15739,15739],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15720,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15721,"fix":{"range":[15741,15741],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_PUNCTUATION'.","line":2,"column":15736,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15737,"fix":{"range":[15756,15756],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15737,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15738,"fix":{"range":[15758,15758],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_SOURCE'.","line":2,"column":15748,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15749,"fix":{"range":[15768,15768],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15749,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15750,"fix":{"range":[15770,15770],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_STRING'.","line":2,"column":15760,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15761,"fix":{"range":[15780,15780],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15761,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15762,"fix":{"range":[15782,15782],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_TAG'.","line":2,"column":15769,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15770,"fix":{"range":[15789,15789],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15770,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15771,"fix":{"range":[15791,15791],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'PR_TYPE'.","line":2,"column":15779,"nodeType":"Identifier","messageId":"missingValue","endLine":2,"endColumn":15780,"fix":{"range":[15799,15799],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-spacing","severity":2,"message":"A space is required before '}'.","line":2,"column":15780,"nodeType":"ObjectExpression","messageId":"requireSpaceBefore","endLine":2,"endColumn":15781,"fix":{"range":[15800,15800],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":2,"column":15780,"nodeType":"ObjectExpression","messageId":"expectedLinebreakBeforeClosingBrace","endLine":2,"endColumn":15781,"fix":{"range":[15800,15800],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":2,"column":15781,"nodeType":"BlockStatement","messageId":"missing","endLine":2,"endColumn":15782,"fix":{"range":[15801,15801],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":2,"column":15781,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":15782,"fix":{"range":[15801,15801],"text":";"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":15785,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":15786,"fix":{"range":[15806,15806],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":15786,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15788,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":15809,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15811,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15832,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15833,"fix":{"range":[15853,15853],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":15835,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15837,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15852,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15853,"fix":{"range":[15873,15873],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15873,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15874,"fix":{"range":[15894,15894],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":15875,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15877,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15888,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15889,"fix":{"range":[15909,15909],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\!.","line":2,"column":15892,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":15893,"suggestions":[{"messageId":"removeEscape","fix":{"range":[15912,15913],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[15912,15912],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\-.","line":2,"column":15908,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":15909,"suggestions":[{"messageId":"removeEscape","fix":{"range":[15928,15929],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[15928,15928],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15916,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15917,"fix":{"range":[15937,15937],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":15918,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":15920,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15935,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15936,"fix":{"range":[15956,15956],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15955,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15956,"fix":{"range":[15976,15976],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":15957,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":15964,"fix":{"range":[15977,15984],"text":"'lang-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15964,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15965,"fix":{"range":[15985,15985],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":15991,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":15992,"fix":{"range":[16012,16012],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":15993,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16000,"fix":{"range":[16013,16020],"text":"'lang-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16000,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16001,"fix":{"range":[16021,16021],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16025,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16026,"fix":{"range":[16046,16046],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16027,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16034,"fix":{"range":[16047,16054],"text":"'lang-'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16034,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16035,"fix":{"range":[16055,16055],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16076,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16077,"fix":{"range":[16097,16097],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16078,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16095,"fix":{"range":[16098,16115],"text":"'lang-handlebars'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16095,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16096,"fix":{"range":[16116,16116],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16200,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16201,"fix":{"range":[16221,16221],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16202,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16211,"fix":{"range":[16222,16231],"text":"'lang-js'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16211,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16212,"fix":{"range":[16232,16232],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16261,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16262,"fix":{"range":[16282,16282],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16263,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16273,"fix":{"range":[16283,16293],"text":"'lang-css'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16273,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16274,"fix":{"range":[16294,16294],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16321,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16322,"fix":{"range":[16342,16342],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16323,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16336,"fix":{"range":[16343,16356],"text":"'lang-in.tag'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16336,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16337,"fix":{"range":[16357,16357],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16360,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16361,"fix":{"range":[16381,16381],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16362,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16364,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16379,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16380,"fix":{"range":[16400,16400],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16408,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16409,"fix":{"range":[16429,16429],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16410,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16412,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16427,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16428,"fix":{"range":[16448,16448],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16451,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16452,"fix":{"range":[16472,16472],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16453,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16455,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16470,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16471,"fix":{"range":[16491,16491],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16496,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16497,"fix":{"range":[16517,16517],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16498,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16500,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16511,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16512,"fix":{"range":[16532,16532],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16528,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16529,"fix":{"range":[16549,16549],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16530,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16542,"fix":{"range":[16550,16562],"text":"'handlebars'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16542,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16543,"fix":{"range":[16563,16563],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16543,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16548,"fix":{"range":[16563,16568],"text":"'hbs'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":16550,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":16551,"fix":{"range":[16571,16571],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16551,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16553,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16574,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16576,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16597,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16599,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16608,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16609,"fix":{"range":[16629,16629],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16624,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16625,"fix":{"range":[16645,16645],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16629,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16630,"fix":{"range":[16650,16650],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16630,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16641,"fix":{"range":[16650,16661],"text":"' \\t\\r\\n\\f'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16643,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16644,"fix":{"range":[16664,16664],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16646,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16648,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16658,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16659,"fix":{"range":[16679,16679],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":16661,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16662,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16681,16682],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16681,16681],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":16676,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16677,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16696,16697],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16696,16696],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":16708,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16709,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16728,16729],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16728,16728],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16711,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16712,"fix":{"range":[16732,16732],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16717,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16718,"fix":{"range":[16738,16738],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16719,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16721,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16731,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16732,"fix":{"range":[16752,16752],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":16734,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16735,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16754,16755],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16754,16754],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":16749,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16750,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16769,16770],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16769,16769],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":16781,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16782,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16801,16802],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16801,16801],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16784,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16785,"fix":{"range":[16805,16805],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16790,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16791,"fix":{"range":[16811,16811],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16792,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16806,"fix":{"range":[16812,16826],"text":"'lang-css-str'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16806,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16807,"fix":{"range":[16827,16827],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\).","line":2,"column":16817,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16818,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16837,16838],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16837,16837],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":16819,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16820,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16839,16840],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16839,16839],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":16821,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16822,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16841,16842],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16841,16841],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16831,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16832,"fix":{"range":[16852,16852],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":16833,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16835,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16846,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16847,"fix":{"range":[16867,16867],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\!.","line":2,"column":16860,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16861,"suggestions":[{"messageId":"removeEscape","fix":{"range":[16880,16881],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[16880,16880],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16925,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16926,"fix":{"range":[16946,16946],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16931,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16932,"fix":{"range":[16952,16952],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":16933,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":16946,"fix":{"range":[16953,16966],"text":"'lang-css-kw'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":16946,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":16947,"fix":{"range":[16967,16967],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\-.","line":2,"column":16991,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":16992,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17011,17012],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17011,17011],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17024,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17025,"fix":{"range":[17045,17045],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17026,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17028,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17039,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17040,"fix":{"range":[17060,17060],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\/.","line":2,"column":17059,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17060,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17079,17080],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17079,17079],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17077,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17078,"fix":{"range":[17098,17098],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17079,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17081,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17092,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17093,"fix":{"range":[17113,17113],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17109,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17110,"fix":{"range":[17130,17130],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17111,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17113,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17124,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17125,"fix":{"range":[17145,17145],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17159,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17160,"fix":{"range":[17180,17180],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17161,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17163,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17174,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17175,"fix":{"range":[17195,17195],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17201,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17202,"fix":{"range":[17222,17222],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17203,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17205,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17214,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17215,"fix":{"range":[17235,17235],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\-.","line":2,"column":17256,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17257,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17276,17277],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17276,17276],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17283,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17284,"fix":{"range":[17304,17304],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17285,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17287,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17302,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17303,"fix":{"range":[17323,17323],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":17311,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17312,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17331,17332],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17331,17331],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":17313,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17314,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17333,17334],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17333,17333],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17321,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17322,"fix":{"range":[17342,17342],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":17323,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":17328,"fix":{"range":[17343,17348],"text":"'css'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":17330,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":17331,"fix":{"range":[17351,17351],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17331,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17333,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17354,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17356,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17377,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17378,"fix":{"range":[17398,17398],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17380,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17382,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17393,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17394,"fix":{"range":[17414,17414],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\-.","line":2,"column":17435,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17436,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17455,17456],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17455,17455],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17464,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17465,"fix":{"range":[17485,17485],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":17466,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":17474,"fix":{"range":[17486,17494],"text":"'css-kw'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"semi-spacing","severity":2,"message":"Missing whitespace after semicolon.","line":2,"column":17476,"nodeType":"ExpressionStatement","messageId":"missingWhitespaceAfter","endLine":2,"endColumn":17477,"fix":{"range":[17497,17497],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17477,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17479,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17500,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17502,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17523,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17524,"fix":{"range":[17544,17544],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'PR' is not defined.","line":2,"column":17526,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17528,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17538,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17539,"fix":{"range":[17559,17559],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\).","line":2,"column":17543,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17544,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17563,17564],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17563,17563],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":2,"column":17545,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17546,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17565,17566],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17565,17565],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":2,"column":17547,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":2,"endColumn":17548,"suggestions":[{"messageId":"removeEscape","fix":{"range":[17567,17568],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[17567,17567],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":2,"column":17555,"nodeType":"Punctuator","messageId":"missing","endLine":2,"endColumn":17556,"fix":{"range":[17576,17576],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":17557,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":17566,"fix":{"range":[17577,17586],"text":"'css-str'"},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/coverage/lcov-report/sorter.js","messages":[],"suppressedMessages":[{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":194,"endColumn":6,"fix":{"range":[21,24],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"wrap-iife","severity":2,"message":"Move the invocation into the parens that contain the function.","line":2,"column":18,"nodeType":"CallExpression","messageId":"moveInvocation","endLine":194,"endColumn":5,"fix":{"range":[6130,6133],"text":"())"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":2,"column":19,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":2,"endColumn":27,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":2,"column":27,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":2,"endColumn":28,"fix":{"range":[47,47],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":3,"column":1,"nodeType":"String","messageId":"wrongIndentation","endLine":3,"endColumn":5,"fix":{"range":[52,56],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"strict","severity":2,"message":"Strict mode is not permitted.","line":3,"column":5,"nodeType":"ExpressionStatement","messageId":"never","endLine":3,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"lines-around-directive","severity":2,"message":"Expected newline after \"use strict\" directive.","line":3,"column":5,"nodeType":"ExpressionStatement","messageId":"expected","endLine":3,"endColumn":18,"fix":{"range":[69,69],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":4,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":4,"endColumn":5,"fix":{"range":[70,74],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":4,"column":5,"nodeType":"VariableDeclaration","messageId":"split","endLine":8,"endColumn":11,"fix":{"range":[82,92],"text":";\n        var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":4,"column":5,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":8,"endColumn":11,"fix":{"range":[74,77],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":5,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":5,"endColumn":9,"fix":{"range":[84,92],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":6,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":6,"endColumn":13,"fix":{"range":[108,120],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":7,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":7,"endColumn":13,"fix":{"range":[130,142],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":7,"column":24,"nodeType":"Property","messageId":"missing","endLine":8,"endColumn":1,"fix":{"range":[148,163],"text":"false,\n        }"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":8,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":8,"endColumn":9,"fix":{"range":[154,162],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":10,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":10,"endColumn":5,"fix":{"range":[166,170],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":11,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":11,"endColumn":5,"fix":{"range":[207,211],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":12,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":12,"endColumn":9,"fix":{"range":[233,241],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":12,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":13,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":13,"endColumn":5,"fix":{"range":[293,297],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":14,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":14,"endColumn":5,"fix":{"range":[299,303],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":15,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":15,"endColumn":5,"fix":{"range":[353,357],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":16,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":16,"endColumn":9,"fix":{"range":[385,393],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":17,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":17,"endColumn":5,"fix":{"range":[438,442],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":18,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":18,"endColumn":5,"fix":{"range":[444,448],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":19,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":19,"endColumn":5,"fix":{"range":[498,502],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":20,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":20,"endColumn":9,"fix":{"range":[528,536],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":21,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":21,"endColumn":5,"fix":{"range":[578,582],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":22,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":22,"endColumn":5,"fix":{"range":[584,588],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":23,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":23,"endColumn":5,"fix":{"range":[629,633],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":24,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":24,"endColumn":9,"fix":{"range":[660,668],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":25,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":25,"endColumn":5,"fix":{"range":[719,723],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":27,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":27,"endColumn":5,"fix":{"range":[726,730],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":28,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":28,"endColumn":9,"fix":{"range":[757,765],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":28,"column":29,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":37,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":29,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":29,"endColumn":9,"fix":{"range":[830,838],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":29,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":30,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":30,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":30,"endColumn":9,"fix":{"range":[903,911],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":30,"column":42,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":30,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":31,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":31,"endColumn":13,"fix":{"range":[951,963],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":32,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":32,"endColumn":13,"fix":{"range":[984,996],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":33,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":33,"endColumn":17,"fix":{"range":[1001,1017],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":34,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":34,"endColumn":21,"fix":{"range":[1033,1053],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":35,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":35,"endColumn":21,"fix":{"range":[1068,1088],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":36,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":36,"endColumn":13,"fix":{"range":[1125,1137],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":37,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":37,"endColumn":17,"fix":{"range":[1141,1157],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":38,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":38,"endColumn":13,"fix":{"range":[1181,1193],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":39,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":39,"endColumn":17,"fix":{"range":[1202,1218],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":40,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":40,"endColumn":13,"fix":{"range":[1246,1258],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":41,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":41,"endColumn":9,"fix":{"range":[1260,1268],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":42,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":42,"endColumn":5,"fix":{"range":[1270,1274],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":44,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":44,"endColumn":5,"fix":{"range":[1277,1281],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":45,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":45,"endColumn":5,"fix":{"range":[1305,1309],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":46,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":46,"endColumn":9,"fix":{"range":[1335,1343],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":46,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":46,"endColumn":66,"fix":{"range":[1343,1346],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":46,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":47,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":47,"endColumn":9,"fix":{"range":[1401,1409],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":47,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":47,"endColumn":62,"fix":{"range":[1409,1412],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":48,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":48,"endColumn":9,"fix":{"range":[1463,1471],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":49,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":49,"endColumn":9,"fix":{"range":[1539,1547],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":50,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":50,"endColumn":5,"fix":{"range":[1598,1602],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":52,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":52,"endColumn":5,"fix":{"range":[1605,1609],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":53,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":53,"endColumn":5,"fix":{"range":[1630,1634],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":54,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":54,"endColumn":9,"fix":{"range":[1659,1667],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":54,"column":9,"nodeType":"VariableDeclaration","messageId":"split","endLine":58,"endColumn":15,"fix":{"range":[1721,1796],"text":";\n            var colNode;\n            var cols = [];\n            var col;\n            var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":54,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":58,"endColumn":15,"fix":{"range":[1667,1670],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":55,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":55,"endColumn":13,"fix":{"range":[1723,1735],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":56,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":56,"endColumn":13,"fix":{"range":[1744,1756],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-shadow","severity":2,"message":"'cols' is already declared in the upper scope on line 4 column 9.","line":56,"column":13,"nodeType":"Identifier","messageId":"noShadow","endLine":56,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":57,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":57,"endColumn":13,"fix":{"range":[1767,1779],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":58,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":58,"endColumn":13,"fix":{"range":[1784,1796],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":60,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":60,"endColumn":9,"fix":{"range":[1800,1808],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":61,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":61,"endColumn":13,"fix":{"range":[1851,1863],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":62,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":62,"endColumn":13,"fix":{"range":[1886,1898],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":63,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":63,"endColumn":17,"fix":{"range":[1906,1922],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":64,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":64,"endColumn":17,"fix":{"range":[1961,1977],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":65,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":65,"endColumn":17,"fix":{"range":[2025,2041],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":65,"column":68,"nodeType":"Property","messageId":"missing","endLine":66,"endColumn":1,"fix":{"range":[2084,2106],"text":"'string',\n            }"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":66,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":66,"endColumn":13,"fix":{"range":[2093,2105],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":67,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":67,"endColumn":13,"fix":{"range":[2108,2120],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":68,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":68,"endColumn":13,"fix":{"range":[2136,2148],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":69,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":69,"endColumn":17,"fix":{"range":[2168,2184],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":70,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":70,"endColumn":17,"fix":{"range":[2229,2245],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-assignment","severity":2,"message":"Assignment (=) can be replaced with operator assignment (+=).","line":70,"column":17,"nodeType":"AssignmentExpression","messageId":"replaced","endLine":71,"endColumn":71,"fix":{"range":[2245,2335],"text":"colNode.innerHTML += '<span class=\"sorter\"></span>'"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"operator-linebreak","severity":2,"message":"There should be no line break before or after '='.","line":70,"column":35,"nodeType":"AssignmentExpression","messageId":"noLinebreak","endLine":70,"endColumn":36,"fix":{"range":[2262,2285],"text":" =                    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":71,"column":21,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":71,"endColumn":71,"fix":{"range":[2285,2335],"text":"`${colNode.innerHTML  }<span class=\"sorter\"></span>`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":72,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":72,"endColumn":13,"fix":{"range":[2337,2349],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":73,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":73,"endColumn":9,"fix":{"range":[2351,2359],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":74,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":74,"endColumn":9,"fix":{"range":[2361,2369],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":75,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":75,"endColumn":5,"fix":{"range":[2382,2386],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":76,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":76,"endColumn":5,"fix":{"range":[2388,2392],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":77,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":77,"endColumn":5,"fix":{"range":[2456,2460],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":78,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":78,"endColumn":5,"fix":{"range":[2499,2503],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":79,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":79,"endColumn":9,"fix":{"range":[2536,2544],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":79,"column":9,"nodeType":"VariableDeclaration","messageId":"split","endLine":84,"endColumn":17,"fix":{"range":[2591,2681],"text":";\n            var colNode;\n            var col;\n            var data = {};\n            var i;\n            var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":79,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":84,"endColumn":17,"fix":{"range":[2544,2547],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":80,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":80,"endColumn":13,"fix":{"range":[2593,2605],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":81,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":81,"endColumn":13,"fix":{"range":[2614,2626],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":82,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":82,"endColumn":13,"fix":{"range":[2631,2643],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":83,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":83,"endColumn":13,"fix":{"range":[2654,2666],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":84,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":84,"endColumn":13,"fix":{"range":[2669,2681],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":85,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":85,"endColumn":9,"fix":{"range":[2686,2694],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":86,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":86,"endColumn":13,"fix":{"range":[2738,2750],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":87,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":87,"endColumn":13,"fix":{"range":[2774,2786],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":88,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":88,"endColumn":13,"fix":{"range":[2801,2813],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":89,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":89,"endColumn":13,"fix":{"range":[2855,2867],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":90,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":90,"endColumn":17,"fix":{"range":[2896,2912],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":91,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":91,"endColumn":13,"fix":{"range":[2931,2943],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":92,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":92,"endColumn":13,"fix":{"range":[2945,2957],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":93,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":93,"endColumn":9,"fix":{"range":[2978,2986],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":94,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":94,"endColumn":9,"fix":{"range":[2988,2996],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":95,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":95,"endColumn":5,"fix":{"range":[3009,3013],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":96,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":96,"endColumn":5,"fix":{"range":[3015,3019],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":97,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":97,"endColumn":5,"fix":{"range":[3041,3045],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":98,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":98,"endColumn":9,"fix":{"range":[3067,3075],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":98,"column":9,"nodeType":"VariableDeclaration","messageId":"split","endLine":99,"endColumn":15,"fix":{"range":[3123,3137],"text":";\n            var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":98,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":99,"endColumn":15,"fix":{"range":[3075,3078],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":99,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":99,"endColumn":13,"fix":{"range":[3125,3137],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":101,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":101,"endColumn":9,"fix":{"range":[3141,3149],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":102,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":102,"endColumn":13,"fix":{"range":[3188,3200],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":103,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":103,"endColumn":9,"fix":{"range":[3237,3245],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":104,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":104,"endColumn":5,"fix":{"range":[3247,3251],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":105,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":105,"endColumn":5,"fix":{"range":[3253,3257],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":106,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":106,"endColumn":5,"fix":{"range":[3310,3314],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":107,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":107,"endColumn":9,"fix":{"range":[3350,3358],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":107,"column":9,"nodeType":"VariableDeclaration","messageId":"split","endLine":117,"endColumn":15,"fix":{"range":[3383,3756],"text":";\n            var sorter = function(a, b) {\n                a = a.data[key];\n                b = b.data[key];\n                return a < b ? -1 : a > b ? 1 : 0;\n            };\n            var finalSorter = sorter;\n            var tableBody = document.querySelector('.coverage-summary tbody');\n            var rowNodes = tableBody.querySelectorAll('tr');\n            var rows = [];\n            var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":107,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":117,"endColumn":15,"fix":{"range":[3358,3361],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":107,"column":13,"nodeType":"VariableDeclarator","messageId":"preferDestructuring","endLine":107,"endColumn":34,"fix":{"range":[3362,3383],"text":"{key} = cols[index]"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":108,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":108,"endColumn":13,"fix":{"range":[3385,3397],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":108,"column":22,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":108,"endColumn":30,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":108,"column":30,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":108,"endColumn":31,"fix":{"range":[3414,3414],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":109,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":109,"endColumn":17,"fix":{"range":[3423,3439],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to function parameter 'a'.","line":109,"column":17,"nodeType":"Identifier","messageId":"assignmentToFunctionParam","endLine":109,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":110,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":110,"endColumn":17,"fix":{"range":[3456,3472],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to function parameter 'b'.","line":110,"column":17,"nodeType":"Identifier","messageId":"assignmentToFunctionParam","endLine":110,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":111,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":111,"endColumn":17,"fix":{"range":[3489,3505],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":111,"column":24,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":111,"endColumn":50,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":112,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":112,"endColumn":13,"fix":{"range":[3540,3552],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":113,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":113,"endColumn":13,"fix":{"range":[3555,3567],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":114,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":114,"endColumn":13,"fix":{"range":[3589,3601],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":114,"column":25,"nodeType":"Identifier","messageId":"undef","endLine":114,"endColumn":33,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":115,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":115,"endColumn":13,"fix":{"range":[3664,3676],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":116,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":116,"endColumn":13,"fix":{"range":[3721,3733],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":117,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":117,"endColumn":13,"fix":{"range":[3744,3756],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":119,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":119,"endColumn":9,"fix":{"range":[3760,3768],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":120,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":120,"endColumn":13,"fix":{"range":[3780,3792],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":120,"column":27,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":120,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":120,"column":35,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":120,"endColumn":36,"fix":{"range":[3814,3814],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":121,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":121,"endColumn":17,"fix":{"range":[3823,3839],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":122,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":122,"endColumn":13,"fix":{"range":[3865,3877],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":123,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":123,"endColumn":9,"fix":{"range":[3880,3888],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":125,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":125,"endColumn":9,"fix":{"range":[3891,3899],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":126,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":126,"endColumn":13,"fix":{"range":[3942,3954],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":127,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":127,"endColumn":13,"fix":{"range":[3978,3990],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":128,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":128,"endColumn":9,"fix":{"range":[4026,4034],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":130,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":130,"endColumn":9,"fix":{"range":[4037,4045],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":132,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":132,"endColumn":9,"fix":{"range":[4070,4078],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":133,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":133,"endColumn":13,"fix":{"range":[4117,4129],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":134,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":134,"endColumn":9,"fix":{"range":[4161,4169],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":135,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":135,"endColumn":5,"fix":{"range":[4171,4175],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":136,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":136,"endColumn":5,"fix":{"range":[4177,4181],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":137,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":137,"endColumn":5,"fix":{"range":[4240,4244],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":138,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":138,"endColumn":9,"fix":{"range":[4278,4286],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":138,"column":9,"nodeType":"VariableDeclaration","messageId":"split","endLine":139,"endColumn":33,"fix":{"range":[4327,4341],"text":";\n            var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":138,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":139,"endColumn":33,"fix":{"range":[4286,4289],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":139,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":139,"endColumn":13,"fix":{"range":[4329,4341],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":141,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":141,"endColumn":9,"fix":{"range":[4363,4371],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":142,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":142,"endColumn":9,"fix":{"range":[4435,4443],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":143,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":143,"endColumn":5,"fix":{"range":[4464,4468],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":144,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":144,"endColumn":5,"fix":{"range":[4470,4474],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":145,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":145,"endColumn":5,"fix":{"range":[4530,4534],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":146,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":146,"endColumn":9,"fix":{"range":[4565,4573],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":147,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":147,"endColumn":13,"fix":{"range":[4635,4647],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":148,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":148,"endColumn":13,"fix":{"range":[4664,4676],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":149,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":149,"endColumn":5,"fix":{"range":[4689,4693],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":150,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":150,"endColumn":5,"fix":{"range":[4695,4699],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":151,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":151,"endColumn":5,"fix":{"range":[4746,4750],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":152,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":152,"endColumn":9,"fix":{"range":[4772,4780],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"one-var","severity":2,"message":"Split 'var' declarations into multiple statements.","line":152,"column":9,"nodeType":"VariableDeclaration","messageId":"split","endLine":169,"endColumn":15,"fix":{"range":[4785,4815],"text":";\n            var el;\n            var "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":152,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":169,"endColumn":15,"fix":{"range":[4780,4783],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":153,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":153,"endColumn":13,"fix":{"range":[4787,4799],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":154,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":154,"endColumn":13,"fix":{"range":[4803,4815],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-shadow","severity":2,"message":"'i' is already declared in the upper scope on line 152 column 13.","line":154,"column":44,"nodeType":"Identifier","messageId":"noShadow","endLine":154,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":155,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":155,"endColumn":17,"fix":{"range":[4851,4867],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":155,"column":17,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":155,"endColumn":35,"fix":{"range":[4867,4870],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":157,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":157,"endColumn":17,"fix":{"range":[4887,4903],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":157,"column":24,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":157,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":157,"column":32,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":157,"endColumn":33,"fix":{"range":[4918,4918],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":158,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":158,"endColumn":21,"fix":{"range":[4923,4943],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":158,"column":21,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":158,"endColumn":52,"fix":{"range":[4943,4946],"text":"let"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":160,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":160,"endColumn":21,"fix":{"range":[4976,4996],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 12 spaces but found 24.","line":161,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":161,"endColumn":25,"fix":{"range":[5027,5051],"text":"            "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":162,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":162,"endColumn":21,"fix":{"range":[5077,5097],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":163,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":163,"endColumn":21,"fix":{"range":[5099,5119],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":164,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":164,"endColumn":21,"fix":{"range":[5141,5161],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":165,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":165,"endColumn":21,"fix":{"range":[5185,5205],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":166,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":166,"endColumn":21,"fix":{"range":[5228,5248],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":167,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":167,"endColumn":21,"fix":{"range":[5273,5293],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":168,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":168,"endColumn":17,"fix":{"range":[5314,5330],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":169,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":169,"endColumn":13,"fix":{"range":[5333,5345],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":170,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":170,"endColumn":9,"fix":{"range":[5348,5356],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":171,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":171,"endColumn":13,"fix":{"range":[5395,5407],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":172,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":172,"endColumn":17,"fix":{"range":[5431,5447],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":173,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":173,"endColumn":17,"fix":{"range":[5497,5513],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":174,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":174,"endColumn":17,"fix":{"range":[5556,5572],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":175,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":175,"endColumn":17,"fix":{"range":[5633,5649],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":176,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":176,"endColumn":21,"fix":{"range":[5676,5696],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":177,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":177,"endColumn":17,"fix":{"range":[5740,5756],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 20.","line":178,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":178,"endColumn":21,"fix":{"range":[5765,5785],"text":"          "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 16.","line":179,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":179,"endColumn":17,"fix":{"range":[5826,5842],"text":"        "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":180,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":180,"endColumn":13,"fix":{"range":[5844,5856],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":181,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":181,"endColumn":9,"fix":{"range":[5858,5866],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":182,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":182,"endColumn":5,"fix":{"range":[5868,5872],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":183,"column":1,"nodeType":"Line","messageId":"wrongIndentation","endLine":183,"endColumn":5,"fix":{"range":[5874,5878],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":184,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":184,"endColumn":5,"fix":{"range":[5918,5922],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":184,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":184,"endColumn":20,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":184,"column":20,"nodeType":"FunctionExpression","messageId":"missingSpace","endLine":184,"endColumn":21,"fix":{"range":[5937,5937],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":185,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":185,"endColumn":9,"fix":{"range":[5942,5950],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 12.","line":186,"column":1,"nodeType":"Keyword","messageId":"wrongIndentation","endLine":186,"endColumn":13,"fix":{"range":[5969,5981],"text":"      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":187,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":187,"endColumn":9,"fix":{"range":[5989,5997],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":188,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":188,"endColumn":9,"fix":{"range":[5999,6007],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":189,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":189,"endColumn":9,"fix":{"range":[6029,6037],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":190,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":190,"endColumn":9,"fix":{"range":[6049,6057],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":191,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":191,"endColumn":9,"fix":{"range":[6073,6081],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 8.","line":192,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":192,"endColumn":9,"fix":{"range":[6102,6110],"text":"    "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 4.","line":193,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":193,"endColumn":5,"fix":{"range":[6122,6126],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":196,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":196,"endColumn":7,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/index.js","messages":[{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./routes/index.js\"","line":5,"column":24,"nodeType":"Literal","endLine":5,"endColumn":43},{"ruleId":"no-unused-vars","severity":2,"message":"'gitRoutes' is assigned a value but never used.","line":6,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":16},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_router'.","line":58,"column":1,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":58,"endColumn":12},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":58,"column":27,"nodeType":"FunctionExpression","messageId":"preferArrowCallback","endLine":70,"endColumn":2,"fix":{"range":[1580,1601],"text":"(middleware) =>"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":58,"column":27,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":58,"endColumn":36},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":60,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":60,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1675,1738],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":61,"column":66,"nodeType":"Program","messageId":"trailingSpace","endLine":61,"endColumn":67,"fix":{"range":[1804,1805],"text":""}},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":62,"column":37,"nodeType":"FunctionExpression","messageId":"preferArrowCallback","endLine":68,"endColumn":6,"fix":{"range":[1842,1860],"text":"(handler) =>"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":62,"column":37,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":62,"endColumn":46},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":63,"column":13,"nodeType":"VariableDeclarator","messageId":"preferDestructuring","endLine":63,"endColumn":34,"fix":{"range":[1875,1896],"text":"{route} = handler"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":66,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":66,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2002,2049],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":79,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":79,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2228,2264],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":90,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":90,"endColumn":19,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"info"},"fix":{"range":[2548,2595],"text":""},"desc":"Remove the console.info()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":95,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":95,"endColumn":21,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"info"},"fix":{"range":[2686,2746],"text":""},"desc":"Remove the console.info()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":98,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":98,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2801,2837],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":102,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":102,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2876,2922],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":14,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":4,"fixableWarningCount":0,"source":"const express = require('express');\nconst cors = require('cors');\nconst morgan = require('morgan');\n// const path = require('path'); // Commented out unused import\nconst routes = require('./routes/index.js'); // Added file extension\nconst gitRoutes = require('./routes/git');\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// CORS configuration\nconst corsOptions = {\n  origin: ['http://localhost:3000', 'http://127.0.0.1:3000'],\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization'],\n  credentials: true,\n  optionsSuccessStatus: 200,\n};\n\n// Middleware\napp.use(cors(corsOptions));\n\n// Increase payload limit to 50mb\napp.use(express.json({\n  limit: '50mb',\n  type: ['application/json', 'text/plain'],\n}));\napp.use(express.urlencoded({\n  limit: '50mb',\n  extended: true,\n}));\napp.use(morgan('dev'));\n\n// Error handling for JSON parsing\napp.use((err, req, res, next) => {\n  if (err instanceof SyntaxError && err.status === 400 && 'body' in err) {\n    return res.status(400).json({\n      error: 'Invalid JSON',\n      details: err.message,\n    });\n  }\n  return next();\n});\n\n// API Routes\napp.use('/api', routes);\n// The git routes are already included via routes/index.js\n// app.use('/api/git', gitRoutes); // Removing this to avoid conflicts\n\n// Add a direct route for the old /api/analyze endpoint\napp.post('/api/analyze', (req, res) => {\n  // Forward the request to our code review analyze endpoint\n  req.url = '/code-review/analyze';\n  routes(req, res);\n});\n\n// Debug available routes\napp._router.stack.forEach(function (middleware) {\n  if (middleware.route) { // routes registered directly on the app\n    console.log(`Route: ${JSON.stringify(middleware.route.path)}`);\n  } else if (middleware.name === 'router') { // router middleware \n    middleware.handle.stack.forEach(function (handler) {\n      const route = handler.route;\n      if (route) {\n        const methods = Object.keys(route.methods).join(', ').toUpperCase();\n        console.log(`Route: ${methods} ${route.path}`);\n      }\n    });\n  }\n});\n\n// Handle 404\napp.use((req, res) => {\n  res.status(404).json({ error: 'Not Found' });\n});\n\n// Global error handler\napp.use((err, req, res, _next) => {\n  console.error('Global error:', err);\n  return res.status(500).json({\n    error: 'Internal Server Error',\n    details: process.env.NODE_ENV === 'development' ? err.message : undefined,\n  });\n});\n\n// Function to try different ports\nconst startServer = (port) => {\n  try {\n    const server = app.listen(port, () => {\n      console.info(`Server running on port ${port}`);\n    });\n\n    server.on('error', (err) => {\n      if (err.code === 'EADDRINUSE') {\n        console.info(`Port ${port} is busy, trying ${port + 1}...`);\n        startServer(port + 1);\n      } else {\n        console.error('Server error:', err);\n      }\n    });\n  } catch (err) {\n    console.error('Failed to start server:', err);\n  }\n};\n\n// Start the server\nstartServer(PORT);\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/jest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/routes/codeReviewRoutes.js","messages":[{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":28,"column":52,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":28,"endColumn":54},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":59,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":59,"endColumn":44},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":79,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":79,"endColumn":44},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":81,"column":11,"nodeType":"ObjectPattern","messageId":"expectedLinebreakAfterOpeningBrace","endLine":81,"endColumn":12,"fix":{"range":[2202,2202],"text":"\n"}},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":81,"column":58,"nodeType":"ObjectPattern","messageId":"expectedLinebreakBeforeClosingBrace","endLine":81,"endColumn":59,"fix":{"range":[2248,2248],"text":"\n"}},{"ruleId":"max-len","severity":2,"message":"This line has a length of 114. Maximum allowed is 100.","line":111,"column":1,"nodeType":"Program","messageId":"max","endLine":111,"endColumn":115},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":124,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":124,"endColumn":40},{"ruleId":"max-len","severity":2,"message":"This line has a length of 104. Maximum allowed is 100.","line":137,"column":1,"nodeType":"Program","messageId":"max","endLine":137,"endColumn":105},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":156,"column":25,"nodeType":"Program","messageId":"trailingSpace","endLine":156,"endColumn":26,"fix":{"range":[4733,4734],"text":""}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":156,"column":26,"nodeType":"Program","messageId":"missing","fix":{"range":[4734,4734],"text":"\n"}}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"const express = require('express');\nconst CodeReviewService = require('../src/services/CodeReviewService');\nconst SecureGitService = require('../src/services/SecureGitService');\nconst logger = require('../src/utils/logger');\n\nconst router = express.Router();\nconst codeReviewService = new CodeReviewService();\nconst secureGitService = new SecureGitService();\n\n/**\n * Get all repositories\n * Endpoint for listing available repositories\n */\nrouter.get('/repositories', async (req, res) => {\n  try {\n    const repositories = await SecureGitService.findRepositories();\n    res.json(repositories);\n  } catch (error) {\n    logger.error('Error fetching repositories:', error);\n    res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Select repository\n * Endpoint for setting the current repository\n */\nrouter.post('/select-repository', async (req, res) => {\n  try {\n    const { path } = req.body;\n\n    if (!path) {\n      return res.status(400).json({ error: 'Repository path is required' });\n    }\n\n    const isPathSet = secureGitService.setRepositoryPath(path);\n\n    if (!isPathSet) {\n      return res.status(403).json({ error: 'Access to this repository path is not allowed' });\n    }\n\n    const isValid = await secureGitService.isValidRepo(path);\n\n    if (!isValid) {\n      return res.status(400).json({ error: 'Invalid Git repository' });\n    }\n\n    res.json({ success: true, path });\n  } catch (error) {\n    logger.error('Error selecting repository:', error);\n    res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Get branches\n * Endpoint for listing branches in the selected repository\n */\nrouter.get('/branches', async (req, res) => {\n  try {\n    const repoPath = secureGitService.getRepositoryPath();\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    const branches = await secureGitService.getBranches();\n    res.json(branches);\n  } catch (error) {\n    logger.error('Error fetching branches:', error);\n    res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Review pull request\n * Endpoint for analyzing code differences between branches\n */\nrouter.post('/analyze', async (req, res) => {\n  try {\n    const { baseBranch, headBranch, fromBranch, toBranch } = req.body;\n    const repoPath = secureGitService.getRepositoryPath() || req.body.repoPath;\n\n    // Support both naming conventions (from old and new components)\n    const actualBaseBranch = baseBranch || fromBranch;\n    const actualHeadBranch = headBranch || toBranch;\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!actualBaseBranch || !actualHeadBranch) {\n      return res.status(400).json({ error: 'Base and head branches are required' });\n    }\n\n    // Set the repository path if it's provided directly\n    if (req.body.repoPath && !secureGitService.getRepositoryPath()) {\n      const isPathSet = secureGitService.setRepositoryPath(req.body.repoPath);\n      if (!isPathSet) {\n        return res.status(403).json({ error: 'Access to this repository path is not allowed' });\n      }\n    }\n\n    // Log the analysis request\n    logger.info(`Starting code review for ${actualHeadBranch} against ${actualBaseBranch}`);\n\n    // Set a longer timeout for complex reviews\n    req.setTimeout(300000); // 5 minutes\n\n    // Perform the code review with token optimization\n    const reviewResults = await codeReviewService.reviewPullRequest(repoPath, actualBaseBranch, actualHeadBranch);\n\n    res.json(reviewResults);\n  } catch (error) {\n    logger.error('Error analyzing code:', error);\n    res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Get diff between branches\n * Endpoint for getting the raw diff between two branches\n */\nrouter.get('/diff', async (req, res) => {\n  try {\n    const { baseBranch, headBranch } = req.query;\n    const repoPath = secureGitService.getRepositoryPath();\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!baseBranch || !headBranch) {\n      return res.status(400).json({ error: 'Base and head branches are required' });\n    }\n\n    const diffOutput = await codeReviewService.getDiffBetweenBranches(repoPath, baseBranch, headBranch);\n    const files = await codeReviewService.parseGitDiff(diffOutput);\n\n    res.json({ files });\n  } catch (error) {\n    logger.error('Error getting diff:', error);\n    res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Get review status\n * Endpoint for checking the status of ongoing analyses\n */\nrouter.get('/status', (req, res) => {\n  // This could be extended to support progress tracking for long-running analyses\n  res.json({ status: 'ready' });\n});\n\nmodule.exports = router; ","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/routes/git.js","messages":[{"ruleId":"import/newline-after-import","severity":2,"message":"Expected 1 empty line after require statement not followed by another require.","line":2,"column":1,"nodeType":null,"fix":{"range":[78,78],"text":"\n"}},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":10,"column":43,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":10,"endColumn":45},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":12,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[277,343],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":16,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":16,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[399,431],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":20,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[520,579],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":23,"column":63,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":23,"endColumn":65},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":25,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":25,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[719,774],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":28,"column":33,"nodeType":"Property","messageId":"missing","endLine":29,"endColumn":1,"fix":{"range":[883,900],"text":"message,\n        }"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":33,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":33,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[940,987],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":39,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":39,"endColumn":20,"fix":{"range":[1101,1107],"text":"(branch)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":40,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":40,"endColumn":23,"fix":{"range":[1142,1148],"text":"(branch)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":41,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":41,"endColumn":20,"fix":{"range":[1173,1179],"text":"(branch)"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":43,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":43,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1260,1319],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":47,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":47,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1382,1435],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":50,"column":29,"nodeType":"Property","messageId":"missing","endLine":51,"endColumn":1,"fix":{"range":[1522,1535],"text":"message,\n    }"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":55,"column":25,"nodeType":"Program","messageId":"trailingSpace","endLine":55,"endColumn":26,"fix":{"range":[1571,1572],"text":""}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":55,"column":26,"nodeType":"Program","messageId":"missing","fix":{"range":[1572,1572],"text":"\n"}}],"suppressedMessages":[],"errorCount":17,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"const express = require('express');\nconst { exec } = require('child_process');\nconst router = express.Router();\n\n// Simple health check endpoint\nrouter.get('/health', (req, res) => {\n  res.json({ status: 'ok' });\n});\n\nrouter.post('/branches', async (req, res) => {\n  try {\n    console.log('Received request for branches with body:', req.body);\n    const { path } = req.body;\n\n    if (!path) {\n      console.log('No path provided');\n      return res.status(400).json({ error: 'Repository path is required' });\n    }\n\n    console.log(`Executing git command in directory: ${path}`);\n\n    // Execute git command to list branches\n    exec('git branch', { cwd: path }, (error, stdout, stderr) => {\n      if (error) {\n        console.error(`Error executing git command: ${error}`);\n        return res.status(500).json({\n          error: 'Failed to fetch branches',\n          details: error.message\n        });\n      }\n\n      if (stderr) {\n        console.error(`Git command stderr: ${stderr}`);\n      }\n\n      // Parse branches from git output\n      const branches = stdout\n        .split('\\n')\n        .map(branch => branch.trim())\n        .filter(branch => branch)\n        .map(branch => branch.replace('* ', '')); // Remove the asterisk from current branch\n\n      console.log(`Found branches: ${JSON.stringify(branches)}`);\n      res.json({ branches });\n    });\n  } catch (error) {\n    console.error('Error in /branches endpoint:', error);\n    res.status(500).json({\n      error: 'Internal server error',\n      details: error.message\n    });\n  }\n});\n\nmodule.exports = router; ","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/routes/index.js","messages":[{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./secureGitRoutes.js\"","line":2,"column":33,"nodeType":"Literal","endLine":2,"endColumn":55},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./git.js\"","line":3,"column":27,"nodeType":"Literal","endLine":3,"endColumn":37},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./codeReviewRoutes.js\"","line":4,"column":34,"nodeType":"Literal","endLine":4,"endColumn":57}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const express = require('express');\nconst secureGitRoutes = require('./secureGitRoutes.js');\nconst gitRoutes = require('./git.js');\nconst codeReviewRoutes = require('./codeReviewRoutes.js');\n\nconst router = express.Router();\n\n// Register all route modules\nrouter.use('/git', secureGitRoutes); // For secure Git operations\nrouter.use('/git', gitRoutes); // For Git branch listing\nrouter.use('/code-review', codeReviewRoutes); // For AI code review\n\nmodule.exports = router;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/routes/projects.js","messages":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":164,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":164,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5097,5149],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found stat from package \"fs\" with non literal argument at index 0","line":55,"column":10,"nodeType":"CallExpression","endLine":55,"endColumn":42,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdir from package \"fs\" with non literal argument at index 0","line":87,"column":10,"nodeType":"CallExpression","endLine":87,"endColumn":54,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const express = require('express');\n\nconst router = express.Router();\nconst simpleGit = require('simple-git');\nconst path = require('path');\nconst fs = require('fs');\nconst os = require('os');\n\n// Store current project path\nlet currentProjectPath = '';\n\n// Helper function to validate path is within allowed directories\nconst isPathSafe = (pathToCheck) => {\n  const homeDir = os.homedir();\n  const allowedDirs = [\n    path.join(homeDir, 'Documents'),\n    path.join(homeDir, 'Projects'),\n    path.join(homeDir, 'Development'),\n    path.join(homeDir, 'Code'),\n    path.join(homeDir, 'Github'),\n  ];\n\n  return allowedDirs.some((dir) => pathToCheck.startsWith(dir));\n};\n\n// Safe wrapper for fs.promises.stat\nconst safeStat = async (pathToCheck) => {\n  // Use a whitelist approach - only allow specific paths\n  const homeDir = os.homedir();\n  const allowedDirs = [\n    path.join(homeDir, 'Documents'),\n    path.join(homeDir, 'Projects'),\n    path.join(homeDir, 'repos'),\n    path.join(homeDir, 'git'),\n    path.join(homeDir, 'code'),\n    path.join(homeDir, 'src'),\n    path.join(homeDir, 'workspace'),\n    path.join(homeDir, 'dev'),\n  ];\n\n  const normalizedPath = path.normalize(pathToCheck);\n\n  // Check if the path is in the whitelist\n  if (!allowedDirs.some((dir) => normalizedPath.startsWith(dir))) {\n    throw new Error('Path is not in allowed directories');\n  }\n\n  // Additional validation to prevent path traversal\n  if (normalizedPath.includes('..')) {\n    throw new Error('Path contains invalid sequences');\n  }\n\n  // Use a hardcoded path or a path from the whitelist\n  // eslint-disable-next-line security/detect-non-literal-fs-filename\n  return fs.promises.stat(normalizedPath);\n};\n\n// Safe wrapper for fs.promises.readdir\nconst safeReaddir = async (pathToCheck, options) => {\n  // Use a whitelist approach - only allow specific paths\n  const homeDir = os.homedir();\n  const allowedDirs = [\n    path.join(homeDir, 'Documents'),\n    path.join(homeDir, 'Projects'),\n    path.join(homeDir, 'repos'),\n    path.join(homeDir, 'git'),\n    path.join(homeDir, 'code'),\n    path.join(homeDir, 'src'),\n    path.join(homeDir, 'workspace'),\n    path.join(homeDir, 'dev'),\n  ];\n\n  const normalizedPath = path.normalize(pathToCheck);\n\n  // Check if the path is in the whitelist\n  if (!allowedDirs.some((dir) => normalizedPath.startsWith(dir))) {\n    throw new Error('Path is not in allowed directories');\n  }\n\n  // Additional validation to prevent path traversal\n  if (normalizedPath.includes('..')) {\n    throw new Error('Path contains invalid sequences');\n  }\n\n  // Use a hardcoded path or a path from the whitelist\n  // eslint-disable-next-line security/detect-non-literal-fs-filename\n  return fs.promises.readdir(normalizedPath, options);\n};\n\n// Helper function to find git repositories in common directories\nconst findGitRepositories = async () => {\n  try {\n    const homeDir = os.homedir();\n    // Define a whitelist of allowed directories\n    const commonDirs = [\n      path.join(homeDir, 'Documents'),\n      path.join(homeDir, 'Projects'),\n      path.join(homeDir, 'Development'),\n      path.join(homeDir, 'Code'),\n      path.join(homeDir, 'Github'),\n    ];\n\n    const repositories = [];\n\n    // Process common directories in parallel\n    await Promise.all(commonDirs.map(async (dir) => {\n      try {\n        // Validate path before using fs operations\n        if (!isPathSafe(dir)) {\n          return; // Skip if path is not in allowed directories\n        }\n\n        // Check if directory exists - using safe wrapper\n        const dirStat = await safeStat(dir);\n        if (!dirStat.isDirectory()) {\n          return; // Skip if not a directory\n        }\n\n        // Get subdirectories - using safe wrapper\n        const items = await safeReaddir(dir, { withFileTypes: true });\n        const subdirs = items\n          .filter((item) => item.isDirectory())\n          .map((item) => path.join(dir, item.name));\n\n        // Process subdirectories in parallel\n        const repoPromises = subdirs.map(async (subdir) => {\n          try {\n            // Validate path before using fs operations\n            if (!isPathSafe(subdir)) {\n              return; // Skip if path is not in allowed directories\n            }\n\n            const gitDir = path.join(subdir, '.git');\n            // Use safe wrapper\n            const gitDirStat = await safeStat(gitDir);\n            if (!gitDirStat.isDirectory()) {\n              return; // Skip if .git is not a directory\n            }\n\n            // It's a git repository\n            const git = simpleGit(subdir);\n            const isRepo = await git.checkIsRepo();\n\n            if (isRepo) {\n              repositories.push({\n                path: subdir,\n                name: path.basename(subdir),\n              });\n            }\n          } catch (err) {\n            // Not a git repository, continue\n          }\n        });\n\n        // Wait for all subdirectory checks to complete\n        await Promise.all(repoPromises);\n      } catch (err) {\n        // Directory doesn't exist, continue\n      }\n    }));\n\n    return repositories;\n  } catch (error) {\n    console.error('Error finding repositories:', error);\n    return [];\n  }\n};\n\n// Get list of repositories\nrouter.get('/api/repositories', async (req, res) => {\n  try {\n    const repositories = await findGitRepositories();\n    res.json(repositories);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\n// Set current repository\nrouter.post('/api/repository/set', async (req, res) => {\n  try {\n    const { path: repoPath } = req.body;\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'Repository path is required' });\n    }\n\n    // Verify it's a git repository\n    try {\n      const git = simpleGit(repoPath);\n      const isRepo = await git.checkIsRepo();\n\n      if (!isRepo) {\n        return res.status(400).json({ error: 'Not a valid git repository' });\n      }\n\n      // Get branches\n      const branches = await git.branchLocal();\n      currentProjectPath = repoPath;\n\n      return res.json({\n        path: repoPath,\n        name: path.basename(repoPath),\n        branches: branches.all,\n        current: branches.current,\n      });\n    } catch (error) {\n      return res.status(400).json({ error: 'Invalid repository path' });\n    }\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n// Get branches for current repository\nrouter.get('/api/repository/branches', async (req, res) => {\n  try {\n    if (!currentProjectPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    const git = simpleGit(currentProjectPath);\n    const branches = await git.branchLocal();\n\n    return res.json({\n      repository: path.basename(currentProjectPath),\n      branches: branches.all,\n      current: branches.current,\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n// Get diff between branches\nrouter.post('/api/diff', async (req, res) => {\n  try {\n    const { fromBranch, toBranch } = req.body;\n\n    if (!currentProjectPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!fromBranch || !toBranch) {\n      return res.status(400).json({ error: 'Both branches must be specified' });\n    }\n\n    const git = simpleGit(currentProjectPath);\n    const diff = await git.diff([fromBranch, toBranch]);\n\n    return res.json({\n      diff,\n      fromBranch,\n      toBranch,\n      repository: path.basename(currentProjectPath),\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\nmodule.exports = router;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/routes/secureGitRoutes.js","messages":[{"ruleId":"import/order","severity":2,"message":"`child_process` import should occur before import of `../src/services/SecureGitService`","line":4,"column":18,"nodeType":"CallExpression","endLine":4,"endColumn":42,"fix":{"range":[66,179],"text":"const { exec } = require('child_process');\nconst SecureGitService = require('../src/services/SecureGitService');\n"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":209,"column":47,"nodeType":"Program","messageId":"trailingSpace","endLine":209,"endColumn":48,"fix":{"range":[5733,5734],"text":""}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":220,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":220,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6010,6075],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":237,"column":32,"nodeType":"Property","messageId":"missing","endLine":238,"endColumn":1,"fix":{"range":[6581,6594],"text":"current,\n    }"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":240,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":240,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[6621,6680],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":254,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":254,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7030,7117],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":264,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":264,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7364,7427],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":268,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":268,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7537,7595],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":274,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":274,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7758,7811],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":277,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":277,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7952,7995],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'stderr' is defined but never used. Allowed unused args must match /^_/u.","line":280,"column":62,"nodeType":"Identifier","messageId":"unusedVar","endLine":280,"endColumn":68},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":280,"column":70,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":280,"endColumn":72},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":282,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":282,"endColumn":30,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[8185,8256],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":286,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":286,"endColumn":29,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"warn"},"fix":{"range":[8363,8417],"text":""},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":292,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":292,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[8506,8594],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":296,"column":24,"nodeType":"Property","messageId":"missing","endLine":297,"endColumn":1,"fix":{"range":[8650,8673],"text":"diffContent,\n          }"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":299,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":299,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[8715,8781],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":303,"column":37,"nodeType":"Property","messageId":"missing","endLine":304,"endColumn":1,"fix":{"range":[8882,8901],"text":"message,\n          }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":306,"column":9,"nodeType":"CallExpression","messageId":"missing","endLine":307,"endColumn":1,"fix":{"range":[8920,8927],"text":"),\n    )"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":310,"column":46,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":310,"endColumn":50,"fix":{"range":[9020,9024],"text":"(item)"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":311,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":311,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[9058,9130],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":320,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":320,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[9299,9352],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break after this opening brace.","line":331,"column":11,"nodeType":"ObjectPattern","messageId":"expectedLinebreakAfterOpeningBrace","endLine":331,"endColumn":12,"fix":{"range":[9600,9600],"text":"\n"}},{"ruleId":"object-curly-newline","severity":2,"message":"Expected a line break before this closing brace.","line":331,"column":52,"nodeType":"ObjectPattern","messageId":"expectedLinebreakBeforeClosingBrace","endLine":331,"endColumn":53,"fix":{"range":[9640,9640],"text":"\n"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":351,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":351,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10271,10375],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'stderr' is defined but never used. Allowed unused args must match /^_/u.","line":365,"column":69,"nodeType":"Identifier","messageId":"unusedVar","endLine":365,"endColumn":75},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":365,"column":77,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":365,"endColumn":79},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":367,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":367,"endColumn":30,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[11072,11143],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":376,"column":24,"nodeType":"Property","messageId":"missing","endLine":377,"endColumn":1,"fix":{"range":[11314,11337],"text":"diffContent,\n          }"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":379,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":379,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[11379,11445],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":383,"column":37,"nodeType":"Property","messageId":"missing","endLine":384,"endColumn":1,"fix":{"range":[11546,11565],"text":"message,\n          }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":386,"column":9,"nodeType":"CallExpression","messageId":"missing","endLine":387,"endColumn":1,"fix":{"range":[11584,11591],"text":"),\n    )"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":396,"column":83,"nodeType":"Literal","messageId":"missing","endLine":397,"endColumn":1,"fix":{"range":[11998,12080],"text":"'Some variable names could be more descriptive for better maintainability',\n      ]"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'Maintainability' found.","line":399,"column":9,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":399,"endColumn":123,"fix":{"range":[12111,12128],"text":"Maintainability"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'Performance' found.","line":400,"column":9,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":400,"endColumn":84,"fix":{"range":[12235,12248],"text":"Performance"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'Security' found.","line":401,"column":9,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":401,"endColumn":73,"fix":{"range":[12320,12330],"text":"Security"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":401,"column":73,"nodeType":"Property","messageId":"missing","endLine":402,"endColumn":1,"fix":{"range":[12332,12392],"text":"'No security issues identified in the code changes.',\n      }"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":403,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":403,"endColumn":42,"fix":{"range":[12431,12435],"text":"(file)"}},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":406,"column":60,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":408,"endColumn":54},{"ruleId":"operator-linebreak","severity":2,"message":"':' should be placed at the beginning of the line.","line":406,"column":110,"nodeType":"ConditionalExpression","messageId":"operatorAtBeginning","endLine":406,"endColumn":111,"fix":{"range":[12604,12617],"text":"\n          : "}},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":407,"column":11,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":408,"endColumn":54},{"ruleId":"operator-linebreak","severity":2,"message":"':' should be placed at the beginning of the line.","line":407,"column":63,"nodeType":"ConditionalExpression","messageId":"operatorAtBeginning","endLine":407,"endColumn":64,"fix":{"range":[12668,12683],"text":"\n            : "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":409,"column":1,"nodeType":"Template","messageId":"wrongIndentation","endLine":409,"endColumn":11,"fix":{"range":[12725,12735],"text":"        "}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":409,"column":28,"nodeType":"Property","messageId":"missing","endLine":410,"endColumn":1,"fix":{"range":[12735,12760],"text":"} the component.`,\n      }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":410,"column":10,"nodeType":"Property","messageId":"missing","endLine":411,"endColumn":1,"fix":{"range":[12761,12768],"text":"),\n    }"}},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":415,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":415,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[12826,12878],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":46,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":23,"fixableWarningCount":0,"source":"const express = require('express');\nconst path = require('path');\nconst SecureGitService = require('../src/services/SecureGitService');\nconst { exec } = require('child_process');\n\nconst router = express.Router();\nconst gitService = new SecureGitService();\n\n/**\n * Get list of Git repositories\n * This endpoint finds Git repositories in common directories\n */\nrouter.get('/repositories', async (req, res) => {\n  try {\n    const repositories = await SecureGitService.findRepositories();\n    res.json(repositories);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\n// For backward compatibility - direct API route\nrouter.get('/api/repositories', async (req, res) => {\n  try {\n    const repositories = await SecureGitService.findRepositories();\n    res.json(repositories);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Set current repository\n * This endpoint sets the current repository path for Git operations\n * It only stores the path and doesn't access or store any project files\n */\nrouter.post('/repository/set', async (req, res) => {\n  try {\n    const { path: repoPath } = req.body;\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'Repository path is required' });\n    }\n\n    // Verify it's a git repository\n    const isValidRepo = await gitService.isValidRepo(repoPath);\n    if (!isValidRepo) {\n      return res.status(400).json({ error: 'Not a valid git repository' });\n    }\n\n    // Set the repository path\n    const isSet = gitService.setRepositoryPath(repoPath);\n    if (!isSet) {\n      return res.status(400).json({ error: 'Invalid repository path' });\n    }\n\n    // Get branches\n    const branches = await gitService.getBranches();\n\n    return res.json({\n      path: repoPath,\n      name: path.basename(repoPath),\n      branches: branches.all,\n      current: branches.current,\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n// For backward compatibility - direct API route\nrouter.post('/api/repository/set', async (req, res) => {\n  try {\n    const { path: repoPath } = req.body;\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'Repository path is required' });\n    }\n\n    // Verify it's a git repository\n    const isValidRepo = await gitService.isValidRepo(repoPath);\n    if (!isValidRepo) {\n      return res.status(400).json({ error: 'Not a valid git repository' });\n    }\n\n    // Set the repository path\n    const isSet = gitService.setRepositoryPath(repoPath);\n    if (!isSet) {\n      return res.status(400).json({ error: 'Invalid repository path' });\n    }\n\n    // Get branches\n    const branches = await gitService.getBranches();\n\n    return res.json({\n      path: repoPath,\n      name: path.basename(repoPath),\n      branches: branches.all,\n      current: branches.current,\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Get branches for current repository\n * This endpoint gets the branches for the current repository\n * It only uses the path and doesn't access or store any project files\n */\nrouter.get('/repository/branches', async (req, res) => {\n  try {\n    const repoPath = gitService.getRepositoryPath();\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    const branches = await gitService.getBranches();\n\n    return res.json({\n      repository: path.basename(repoPath),\n      branches: branches.all,\n      current: branches.current,\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n// For backward compatibility - direct API route\nrouter.get('/api/repository/branches', async (req, res) => {\n  try {\n    const repoPath = gitService.getRepositoryPath();\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    const branches = await gitService.getBranches();\n\n    return res.json({\n      repository: path.basename(repoPath),\n      branches: branches.all,\n      current: branches.current,\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Get diff between branches\n * This endpoint gets the diff between two branches\n * It only uses Git commands and doesn't access or store any project files\n */\nrouter.post('/diff', async (req, res) => {\n  try {\n    const { fromBranch, toBranch } = req.body;\n    const repoPath = gitService.getRepositoryPath();\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!fromBranch || !toBranch) {\n      return res.status(400).json({ error: 'Both branches must be specified' });\n    }\n\n    const diff = await gitService.getDiff(fromBranch, toBranch);\n\n    return res.json({\n      diff,\n      fromBranch,\n      toBranch,\n      repository: path.basename(repoPath),\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n// For backward compatibility - direct API route\nrouter.post('/api/diff', async (req, res) => {\n  try {\n    const { fromBranch, toBranch } = req.body;\n    const repoPath = gitService.getRepositoryPath();\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!fromBranch || !toBranch) {\n      return res.status(400).json({ error: 'Both branches must be specified' });\n    }\n\n    const diff = await gitService.getDiff(fromBranch, toBranch);\n\n    return res.json({\n      diff,\n      fromBranch,\n      toBranch,\n      repository: path.basename(repoPath),\n    });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Get branches for a specific repository path \n * Direct POST method to fetch branches from any repository path\n */\nrouter.post('/branches', async (req, res) => {\n  try {\n    const { path: repoPath } = req.body;\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'Repository path is required' });\n    }\n\n    console.log(`Received request to get branches for: ${repoPath}`);\n\n    // Verify it's a git repository\n    const isValidRepo = await gitService.isValidRepo(repoPath);\n    if (!isValidRepo) {\n      return res.status(400).json({ error: 'Not a valid git repository' });\n    }\n\n    // Set the repository path temporarily\n    const tempGitService = new SecureGitService();\n    tempGitService.setRepositoryPath(repoPath);\n\n    // Get branches\n    const branches = await tempGitService.getBranches();\n\n    return res.json({\n      branches: branches.all,\n      current: branches.current\n    });\n  } catch (error) {\n    console.error(`Error fetching branches: ${error.message}`);\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * Get diff between branches (using query parameters)\n * This endpoint gets the diff between two branches using query parameters\n */\nrouter.get('/diff', async (req, res) => {\n  try {\n    const { from, to } = req.query;\n    const repoPath = gitService.getRepositoryPath();\n\n    console.log(`Diff request received - from: ${from}, to: ${to}, repoPath: ${repoPath}`);\n\n    if (!repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!from || !to) {\n      return res.status(400).json({ error: 'Both branches must be specified using from and to parameters' });\n    }\n\n    console.log(`Getting diff between branches ${from} and ${to}`);\n\n    // Get the list of changed files first\n    const changedFiles = await gitService.getDiff(from, to);\n    console.log(`Found ${changedFiles.length} changed files`);\n\n    // For each file, get the actual diff content\n    const detailedDiff = await Promise.all(\n      changedFiles.map(async (change) => {\n        try {\n          console.log(`Getting diff for file: ${change.file}`);\n          // Get the diff content for this specific file\n          const command = `git diff ${from}..${to} -- \"${change.file}\"`;\n          console.log(`Running command: ${command}`);\n\n          const diffContent = await new Promise((resolve, reject) => {\n            exec(command, { cwd: repoPath }, (error, stdout, stderr) => {\n              if (error) {\n                console.error(`Error getting diff content for ${change.file}:`, error);\n                return reject(error);\n              }\n              if (!stdout.trim()) {\n                console.warn(`Empty diff content for ${change.file}`);\n              }\n              resolve(stdout);\n            });\n          });\n\n          console.log(`Got diff content for ${change.file}: ${diffContent.substring(0, 100)}...`);\n\n          return {\n            ...change,\n            diffContent\n          };\n        } catch (fileError) {\n          console.error(`Error processing file ${change.file}:`, fileError);\n          return {\n            ...change,\n            diffContent: '',\n            error: fileError.message\n          };\n        }\n      })\n    );\n\n    // Filter out files with no diff content\n    const filteredDiff = detailedDiff.filter(item => item.diffContent.trim());\n    console.log(`Returning ${filteredDiff.length} files with diff content`);\n\n    return res.json({\n      diff: filteredDiff,\n      fromBranch: from,\n      toBranch: to,\n      repository: path.basename(repoPath),\n    });\n  } catch (error) {\n    console.error('Error in GET /diff endpoint:', error);\n    return res.status(500).json({ error: error.message });\n  }\n});\n\n/**\n * AI Analysis of diff between branches\n * This endpoint provides AI analysis of changes between branches\n */\nrouter.post('/analyze', async (req, res) => {\n  try {\n    const { fromBranch, toBranch, prompt, repoPath } = req.body;\n\n    // If repoPath is provided, set it; otherwise use the current one\n    if (repoPath) {\n      const isValidRepo = await gitService.isValidRepo(repoPath);\n      if (!isValidRepo) {\n        return res.status(400).json({ error: 'Not a valid git repository' });\n      }\n      gitService.setRepositoryPath(repoPath);\n    }\n\n    const currentRepoPath = gitService.getRepositoryPath();\n    if (!currentRepoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!fromBranch || !toBranch) {\n      return res.status(400).json({ error: 'Both branches must be specified' });\n    }\n\n    console.log(`Analyzing diff between ${fromBranch} and ${toBranch} with prompt: ${prompt || 'default'}`);\n\n    // Get the list of changed files first\n    const changedFiles = await gitService.getDiff(fromBranch, toBranch);\n\n    // For demo purposes, we're creating a mock analysis result\n    // In a real implementation, this would call an AI service with the diff data\n\n    // Get detailed diff for analysis\n    const detailedDiff = await Promise.all(\n      changedFiles.slice(0, 5).map(async (change) => {\n        try {\n          const command = `git diff ${fromBranch}..${toBranch} -- \"${change.file}\"`;\n          const diffContent = await new Promise((resolve, reject) => {\n            exec(command, { cwd: currentRepoPath }, (error, stdout, stderr) => {\n              if (error) {\n                console.error(`Error getting diff content for ${change.file}:`, error);\n                return reject(error);\n              }\n              resolve(stdout);\n            });\n          });\n\n          return {\n            ...change,\n            diffContent\n          };\n        } catch (fileError) {\n          console.error(`Error processing file ${change.file}:`, fileError);\n          return {\n            ...change,\n            diffContent: '',\n            error: fileError.message\n          };\n        }\n      })\n    );\n\n    // Generate mock analysis\n    const analysis = {\n      summary: `This change set includes modifications to ${changedFiles.length} files. \n        The main changes focus on ${prompt || 'functionality improvements and bug fixes'}.`,\n      suggestions: [\n        'Consider adding more unit tests for the changed components',\n        'Documentation should be updated to reflect the new changes',\n        'Some variable names could be more descriptive for better maintainability'\n      ],\n      codeQuality: {\n        'Maintainability': 'The changes generally improve code maintainability through better structure and organization.',\n        'Performance': 'No significant performance impact detected in the changes.',\n        'Security': 'No security issues identified in the code changes.'\n      },\n      fileAnalysis: detailedDiff.map(file => ({\n        file: file.file,\n        status: file.status,\n        analysis: `The changes to ${file.file} appear to ${file.status === 'A' ? 'add new functionality for' :\n          file.status === 'M' ? 'modify existing behavior of' :\n            file.status === 'D' ? 'remove' : 'change'\n          } the component.`\n      }))\n    };\n\n    return res.json(analysis);\n  } catch (error) {\n    console.error('Error in /analyze endpoint:', error);\n    return res.status(500).json({ error: error.message });\n  }\n});\n\nmodule.exports = router;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/scripts/cleanup-deprecated.js","messages":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":41,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":41,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1268,1346],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":44,"column":10,"nodeType":"CallExpression","endLine":44,"endColumn":29},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":48,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":48,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1440,1501],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":51,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":51,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1527,1590],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":52,"column":35,"nodeType":"MemberExpression","messageId":"unexpected","endLine":52,"endColumn":46},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found unlinkSync from package \"fs\" with non literal argument at index 0","line":61,"column":13,"nodeType":"CallExpression","endLine":61,"endColumn":32},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":62,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":62,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1987,2019],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":64,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":64,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2051,2135],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":67,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":67,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2184,2232],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":71,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":71,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2260,2326],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":72,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":72,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2333,2433],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":74,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":74,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2453,2512],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":82,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":82,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2570,2613],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":83,"column":3,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":83,"endColumn":18}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Cleanup script to remove deprecated files\n *\n * This script removes the old GitService implementation and projects.js routes\n * that have been deprecated in favor of the new SecureGitService implementation.\n *\n * Usage: node cleanup-deprecated.js\n */\n\nconst fs = require('fs');\nconst path = require('path');\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\n// Base directory for validation\nconst baseDir = path.resolve(__dirname, '..');\n\n// Function to validate if a path is within the allowed directory\nfunction isPathSafe(filePath) {\n  const normalizedPath = path.normalize(filePath);\n  const resolvedPath = path.resolve(normalizedPath);\n  return resolvedPath.startsWith(baseDir);\n}\n\n// Files to be removed\nconst filesToRemove = [\n  path.join(__dirname, '..', 'routes', 'projects.js'),\n  path.join(__dirname, '..', 'src', 'services', 'GitService.js'),\n  path.join(__dirname, '..', 'src', 'controllers', 'repositoryController.js'),\n  path.join(__dirname, '..', 'src', 'controllers', 'diffController.js'),\n];\n\n// Check if files exist and are safe\nconst existingFiles = filesToRemove.filter((file) => {\n  // Validate path before checking existence\n  if (!isPathSafe(file)) {\n    console.error(`Security warning: Path is outside allowed directory: ${file}`);\n    return false;\n  }\n  return fs.existsSync(file);\n});\n\nif (existingFiles.length === 0) {\n  console.log('No deprecated files found. Nothing to remove.');\n  rl.close();\n} else {\n  console.log('The following deprecated files will be removed:');\n  existingFiles.forEach((file) => console.log(`- ${file}`));\n\n  rl.question('\\nAre you sure you want to remove these files? (y/n) ', (answer) => {\n    if (answer.toLowerCase() === 'y') {\n      // Remove files\n      existingFiles.forEach((file) => {\n        try {\n          // Double-check path safety before deletion\n          if (isPathSafe(file)) {\n            fs.unlinkSync(file);\n            console.log(`Removed: ${file}`);\n          } else {\n            console.error(`Security warning: Skipping file outside allowed directory: ${file}`);\n          }\n        } catch (error) {\n          console.error(`Error removing ${file}:`, error);\n        }\n      });\n\n      console.log('\\nDeprecated files have been removed successfully.');\n      console.log('Please make sure to update any remaining references to these files in your codebase.');\n    } else {\n      console.log('Operation cancelled. No files were removed.');\n    }\n\n    rl.close();\n  });\n}\n\nrl.on('close', () => {\n  console.log('\\nCleanup script completed.');\n  process.exit(0);\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/scripts/coverage-summary.js","messages":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":7,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":7,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[209,281],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":8,"column":5,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":8,"endColumn":20},{"ruleId":"no-use-before-define","severity":2,"message":"'calculateTotalCoverage' was used before it was defined.","line":12,"column":10,"nodeType":"Identifier","messageId":"usedBeforeDefined","endLine":12,"endColumn":32},{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":36,"column":36,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":36,"endColumn":37},{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":36,"column":54,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":36,"endColumn":55},{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":37,"column":32,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":37,"endColumn":33},{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":37,"column":48,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":37,"endColumn":49},{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":38,"column":34,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":38,"endColumn":35},{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":38,"column":51,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":38,"endColumn":52},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":43,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":43,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1226,1266],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":44,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1267,1304],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":45,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":45,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1305,1357],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":46,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":46,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1358,1408],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":47,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":47,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1409,1460],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":14,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst path = require('path');\n\nfunction readCoverageData() {\n  const coveragePath = path.join(__dirname, '../coverage/coverage-final.json');\n  if (!fs.existsSync(coveragePath)) {\n    console.error('No coverage data found. Run tests with coverage first.');\n    process.exit(1);\n  }\n\n  const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));\n  return calculateTotalCoverage(coverage);\n}\n\nfunction calculateTotalCoverage(coverage) {\n  let totalStatements = 0;\n  let coveredStatements = 0;\n  let totalBranches = 0;\n  let coveredBranches = 0;\n  let totalFunctions = 0;\n  let coveredFunctions = 0;\n\n  Object.values(coverage).forEach((file) => {\n    // Statements\n    totalStatements += file.s.total;\n    coveredStatements += file.s.covered;\n    // Branches\n    totalBranches += file.b.total;\n    coveredBranches += file.b.covered;\n    // Functions\n    totalFunctions += file.f.total;\n    coveredFunctions += file.f.covered;\n  });\n\n  return {\n    statements: (coveredStatements / totalStatements * 100).toFixed(2),\n    branches: (coveredBranches / totalBranches * 100).toFixed(2),\n    functions: (coveredFunctions / totalFunctions * 100).toFixed(2),\n  };\n}\n\nconst coverage = readCoverageData();\nconsole.log('\\nTest Coverage Summary:');\nconsole.log('---------------------');\nconsole.log(`Statements : ${coverage.statements}%`);\nconsole.log(`Branches   : ${coverage.branches}%`);\nconsole.log(`Functions  : ${coverage.functions}%`);\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/scripts/generate-coverage-summary.js","messages":[{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":26,"column":5,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":42,"endColumn":6},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":76,"column":5,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":76,"endColumn":20}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs').promises;\nconst path = require('path');\nconst logger = require('../src/utils/logger');\n\nasync function generateCoverageSummary() {\n  try {\n    const coveragePath = path.join(__dirname, '../coverage/coverage-final.json');\n    const coverage = JSON.parse(await fs.readFile(coveragePath, 'utf8'));\n\n    const summary = {\n      timestamp: new Date().toISOString(),\n      overall: {\n        statements: 0,\n        branches: 0,\n        functions: 0,\n        lines: 0,\n      },\n      files: [],\n    };\n\n    let totalStatements = 0;\n    let totalBranches = 0;\n    let totalFunctions = 0;\n    let totalLines = 0;\n\n    for (const [filePath, metrics] of Object.entries(coverage)) {\n      const relativePath = path.relative(process.cwd(), filePath);\n      const fileSummary = {\n        file: relativePath,\n        statements: metrics.s.pct,\n        branches: metrics.b.pct,\n        functions: metrics.f.pct,\n        lines: metrics.l.pct,\n      };\n\n      summary.files.push(fileSummary);\n\n      totalStatements += metrics.s.pct || 0;\n      totalBranches += metrics.b.pct || 0;\n      totalFunctions += metrics.f.pct || 0;\n      totalLines += metrics.l.pct || 0;\n    }\n\n    const fileCount = summary.files.length;\n    summary.overall = {\n      statements: (totalStatements / fileCount).toFixed(2),\n      branches: (totalBranches / fileCount).toFixed(2),\n      functions: (totalFunctions / fileCount).toFixed(2),\n      lines: (totalLines / fileCount).toFixed(2),\n    };\n\n    // Save summary\n    const summaryPath = path.join(__dirname, '../coverage/summary.json');\n    await fs.writeFile(summaryPath, JSON.stringify(summary, null, 2));\n\n    // Log summary\n    logger.info('Coverage Summary:');\n    logger.info('Overall Coverage:', summary.overall);\n    logger.info('\\nFiles needing attention (below 85% coverage):');\n\n    summary.files\n      .filter((file) => file.statements < 85\n        || file.branches < 85\n        || file.functions < 85\n        || file.lines < 85)\n      .forEach((file) => {\n        logger.warn(`${file.file}:`, {\n          statements: `${file.statements}%`,\n          branches: `${file.branches}%`,\n          functions: `${file.functions}%`,\n          lines: `${file.lines}%`,\n        });\n      });\n  } catch (error) {\n    logger.error('Error generating coverage summary:', error);\n    process.exit(1);\n  }\n}\n\ngenerateCoverageSummary();\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/scripts/lint.js","messages":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":23,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":23,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[681,763],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":24,"column":3,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":24,"endColumn":18},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":50,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":50,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1479,1551],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":62,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":62,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1737,1783],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":114,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":114,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3090,3167],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":115,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":115,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3174,3219],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":129,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":129,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3523,3575],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":130,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":130,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3578,3636],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":133,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":133,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3734,3788],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":137,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":137,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3808,3867],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":138,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":138,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3870,3936],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":141,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":141,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3971,4027],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":162,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":162,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4594,4652],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":168,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":168,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4735,4782],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"max-len","severity":2,"message":"This line has a length of 119. Maximum allowed is 100.","line":169,"column":1,"nodeType":"Program","messageId":"max","endLine":169,"endColumn":120},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":169,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":169,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4787,4902],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":178,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":178,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5176,5255],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":190,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":190,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5549,5593],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":192,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":192,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5643,5700],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":198,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":198,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5797,5872],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":199,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":199,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5877,5933],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":204,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":204,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5959,6004],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":205,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":205,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6005,6076],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":206,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":206,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6077,6140],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":214,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":214,"endColumn":12,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6340,6403],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":217,"column":1,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":217,"endColumn":41}],"suppressedMessages":[],"errorCount":26,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Advanced linting script with detailed reporting\n * Run with: node scripts/lint.js [--fix] [--staged]\n */\n\nconst { execSync } = require('child_process');\nconst chalk = require('chalk');\nconst _ = require('lodash');\nconst path = require('path');\nconst fs = require('fs');\n\n// Parse command line arguments\nconst args = process.argv.slice(2);\nconst shouldFix = args.includes('--fix');\nconst stagedOnly = args.includes('--staged');\n\n// Configuration\nconst ESLINT_CONFIG_PATH = path.resolve(__dirname, '..', '.eslintrc.js');\nconst IGNORE_PATTERNS = ['node_modules', 'dist', 'build', 'coverage', '.git'];\n\n// Ensure ESLint config exists\nif (!fs.existsSync(ESLINT_CONFIG_PATH)) {\n  console.error(chalk.red('Error: ESLint config not found at', ESLINT_CONFIG_PATH));\n  process.exit(1);\n}\n\n/**\n * Get files to lint\n * @returns {string[]} Array of file paths\n */\nfunction getFilesToLint() {\n  try {\n    if (stagedOnly) {\n      // Get staged JS files\n      const output = execSync('git diff --cached --name-only --diff-filter=ACMR \"*.js\"', { encoding: 'utf8' });\n      return output\n        .split('\\n')\n        .filter(Boolean)\n        .filter((file) => !IGNORE_PATTERNS.some((pattern) => file.includes(pattern)));\n    }\n\n    // Get all JS files\n    const output = execSync(\n      `find . -type f -name \"*.js\" ${IGNORE_PATTERNS.map((p) => `-not -path \"*/${p}/*\"`).join(' ')}`,\n      { encoding: 'utf8' },\n    );\n\n    return output.split('\\n').filter(Boolean);\n  } catch (error) {\n    console.error(chalk.red('Error getting files to lint:'), error.message);\n    return [];\n  }\n}\n\n/**\n * Run ESLint on files\n * @param {string[]} files - Files to lint\n * @returns {Object} Lint results\n */\nfunction runEslint(files) {\n  if (!files.length) {\n    console.log(chalk.yellow('No files to lint'));\n    return {\n      success: true, output: '', errorCount: 0, warningCount: 0,\n    };\n  }\n\n  const fixFlag = shouldFix ? '--fix' : '';\n  const formatFlag = '--format json';\n  const command = `npx eslint ${fixFlag} ${formatFlag} ${files.join(' ')}`;\n\n  try {\n    const output = execSync(command, { encoding: 'utf8' });\n    const results = JSON.parse(output);\n\n    // Calculate total errors and warnings\n    const stats = results.reduce(\n      (acc, file) => {\n        acc.errorCount += file.errorCount;\n        acc.warningCount += file.warningCount;\n        return acc;\n      },\n      { errorCount: 0, warningCount: 0 },\n    );\n\n    return {\n      success: stats.errorCount === 0,\n      output,\n      results,\n      ...stats,\n    };\n  } catch (error) {\n    // ESLint returns non-zero exit code when there are errors\n    try {\n      const results = JSON.parse(error.stdout);\n\n      // Calculate total errors and warnings\n      const stats = results.reduce(\n        (acc, file) => {\n          acc.errorCount += file.errorCount;\n          acc.warningCount += file.warningCount;\n          return acc;\n        },\n        { errorCount: 0, warningCount: 0 },\n      );\n\n      return {\n        success: false,\n        output: error.stdout,\n        results,\n        ...stats,\n      };\n    } catch (parseError) {\n      console.error(chalk.red('Error parsing ESLint output:'), parseError.message);\n      console.error(error.stdout || error.message);\n      return {\n        success: false, output: error.message, errorCount: 1, warningCount: 0,\n      };\n    }\n  }\n}\n\n/**\n * Format and display lint results\n * @param {Object} lintResult - Lint results\n * @param {string[]} files - Files that were linted\n */\nfunction displayResults(lintResult, files) {\n  console.log(chalk.bold('\\n=== ESLint Results ==='));\n  console.log(`Files checked: ${chalk.cyan(files.length)}`);\n\n  if (lintResult.success && lintResult.errorCount === 0 && lintResult.warningCount === 0) {\n    console.log(chalk.green('✓ All files pass linting!'));\n    return;\n  }\n\n  console.log(`Errors: ${chalk.red(lintResult.errorCount)}`);\n  console.log(`Warnings: ${chalk.yellow(lintResult.warningCount)}`);\n\n  if (!lintResult.results) {\n    console.log(chalk.red('No detailed results available'));\n    return;\n  }\n\n  // Group issues by file\n  const fileIssues = lintResult.results\n    .filter((file) => file.messages.length > 0)\n    .map((file) => {\n      const relativePath = path.relative(process.cwd(), file.filePath);\n      const errors = file.messages.filter((msg) => msg.severity === 2);\n      const warnings = file.messages.filter((msg) => msg.severity === 1);\n\n      return {\n        path: relativePath,\n        errors,\n        warnings,\n        messages: _.sortBy(file.messages, ['line', 'column']),\n      };\n    });\n\n  if (fileIssues.length === 0) {\n    console.log(chalk.green('No issues found in any files!'));\n    return;\n  }\n\n  // Display issues by file\n  fileIssues.forEach((file) => {\n    console.log(`\\n${chalk.underline(file.path)}`);\n    console.log(`  ${chalk.red(`${file.errors.length} errors`)}, ${chalk.yellow(`${file.warnings.length} warnings`)}`);\n\n    file.messages.forEach((msg) => {\n      const location = `${msg.line}:${msg.column}`;\n      const severity = msg.severity === 2\n        ? chalk.red('error')\n        : chalk.yellow('warning');\n      const ruleId = msg.ruleId ? chalk.gray(`(${msg.ruleId})`) : '';\n\n      console.log(`  ${chalk.cyan(location)} ${severity}: ${msg.message} ${ruleId}`);\n    });\n  });\n\n  // Summary of most common issues\n  const allMessages = _.flatMap(fileIssues, 'messages');\n  const ruleStats = _.countBy(allMessages, 'ruleId');\n  const topIssues = Object.entries(ruleStats)\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 5);\n\n  if (topIssues.length > 0) {\n    console.log('\\n=== Most Common Issues ===');\n    topIssues.forEach(([rule, count]) => {\n      console.log(`${chalk.cyan(rule)}: ${count} occurrences`);\n    });\n  }\n\n  // Provide fix instructions\n  if (lintResult.errorCount > 0 && !shouldFix) {\n    console.log(chalk.bold.yellow('\\nTo automatically fix some issues, run:'));\n    console.log(chalk.cyan('  node scripts/lint.js --fix'));\n  }\n}\n\n// Main execution\nconsole.log(chalk.bold('Running ESLint...'));\nconsole.log(`Mode: ${stagedOnly ? 'Staged files only' : 'All files'}`);\nconsole.log(`Auto-fix: ${shouldFix ? 'Enabled' : 'Disabled'}`);\n\nconst startTime = Date.now();\nconst files = getFilesToLint();\nconst lintResult = runEslint(files);\nconst duration = ((Date.now() - startTime) / 1000).toFixed(2);\n\ndisplayResults(lintResult, files);\nconsole.log(chalk.gray(`\\nLinting completed in ${duration}s`));\n\n// Exit with appropriate code\nprocess.exit(lintResult.success ? 0 : 1);\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/scripts/show-coverage-trends.js","messages":[{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":54,"column":5,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":54,"endColumn":20}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs').promises;\nconst path = require('path');\nconst logger = require('../src/utils/logger');\n\nasync function showCoverageTrends() {\n  try {\n    const historyPath = path.join(__dirname, '../coverage/history.json');\n    const history = JSON.parse(await fs.readFile(historyPath, 'utf8'));\n\n    // Calculate trends\n    const trends = history.reduce((acc, entry, index) => {\n      if (index === 0) {\n        acc.push({\n          timestamp: entry.timestamp,\n          coverage: entry.coverage,\n          change: { statements: 0, branches: 0, functions: 0 },\n        });\n      } else {\n        const previous = history[index - 1].coverage;\n        acc.push({\n          timestamp: entry.timestamp,\n          coverage: entry.coverage,\n          change: {\n            statements: (entry.coverage.statements - previous.statements).toFixed(2),\n            branches: (entry.coverage.branches - previous.branches).toFixed(2),\n            functions: (entry.coverage.functions - previous.functions).toFixed(2),\n          },\n        });\n      }\n      return acc;\n    }, []);\n\n    // Log trends\n    logger.info('Coverage Trends:\\n');\n    trends.forEach((entry) => {\n      logger.info(`${new Date(entry.timestamp).toLocaleDateString()}:`, {\n        coverage: entry.coverage,\n        change: entry.change,\n      });\n    });\n\n    // Calculate overall trend\n    const firstEntry = history[0].coverage;\n    const lastEntry = history[history.length - 1].coverage;\n    const overallTrend = {\n      statements: (lastEntry.statements - firstEntry.statements).toFixed(2),\n      branches: (lastEntry.branches - firstEntry.branches).toFixed(2),\n      functions: (lastEntry.functions - firstEntry.functions).toFixed(2),\n    };\n\n    logger.info('\\nOverall Trend:', overallTrend);\n  } catch (error) {\n    logger.error('Error showing coverage trends:', error);\n    process.exit(1);\n  }\n}\n\nshowCoverageTrends();\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/scripts/test-runner.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'jest' should be listed in the project's dependencies, not devDependencies.","line":1,"column":14,"nodeType":"CallExpression","endLine":1,"endColumn":29},{"ruleId":"node/no-unpublished-require","severity":2,"message":"\"jest\" is not published.","line":1,"column":22,"nodeType":"Literal","endLine":1,"endColumn":28},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":34,"column":7,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":34,"endColumn":22},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":40,"column":5,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":40,"endColumn":20}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const jest = require('jest');\nconst path = require('path');\nconst setupTestEnv = require('../tests/helpers/setup');\nconst logger = require('../src/utils/logger');\n\nasync function runTests() {\n  try {\n    // Setup test environment\n    await setupTestEnv();\n\n    const config = {\n      rootDir: path.join(__dirname, '..'),\n      coverage: true,\n      verbose: true,\n      testEnvironment: 'node',\n      setupFilesAfterEnv: ['<rootDir>/tests/helpers/setup.js'],\n      collectCoverageFrom: [\n        'src/**/*.js',\n        '!src/**/*.test.js',\n        '!src/config/**',\n        '!**/node_modules/**',\n      ],\n      coverageReporters: ['json', 'lcov', 'text', 'json-summary'],\n      testMatch: [\n        '**/tests/**/*.test.js',\n        '**/src/**/*.test.js',\n      ],\n    };\n\n    const results = await jest.runCLI(config, [config.rootDir]);\n\n    if (!results.results.success) {\n      logger.error('Tests failed');\n      process.exit(1);\n    }\n\n    logger.success('Tests completed successfully');\n  } catch (error) {\n    logger.error('Error running tests:', error);\n    process.exit(1);\n  }\n}\n\nrunTests();\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/scripts/update-coverage-badge.js","messages":[{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":22,"column":17,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":26,"endColumn":18},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":23,"column":7,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":26,"endColumn":18},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions.","line":24,"column":9,"nodeType":"ConditionalExpression","messageId":"noNestedTernary","endLine":26,"endColumn":18},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":46,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":46,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1355,1406],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":48,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":48,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1431,1486],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":49,"column":5,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":49,"endColumn":20}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst path = require('path');\n\nfunction getFormattedCoverage() {\n  const coveragePath = path.join(__dirname, '../coverage/coverage-summary.json');\n  const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));\n  const { total } = coverage;\n\n  return {\n    statements: Math.floor(total.statements.pct),\n    branches: Math.floor(total.branches.pct),\n    functions: Math.floor(total.functions.pct),\n    lines: Math.floor(total.lines.pct),\n  };\n}\n\nfunction generateBadge(coverage) {\n  const avgCoverage = Math.floor(\n    (coverage.statements + coverage.branches + coverage.functions + coverage.lines) / 4,\n  );\n\n  const color = avgCoverage >= 90 ? 'brightgreen'\n    : avgCoverage >= 80 ? 'green'\n      : avgCoverage >= 70 ? 'yellowgreen'\n        : avgCoverage >= 60 ? 'yellow'\n          : 'red';\n\n  return `https://img.shields.io/badge/coverage-${avgCoverage}%25-${color}`;\n}\n\nfunction updateBadge() {\n  try {\n    const coverage = getFormattedCoverage();\n    const badgeUrl = generateBadge(coverage);\n    const badgeDir = path.join(__dirname, '../badges');\n\n    if (!fs.existsSync(badgeDir)) {\n      fs.mkdirSync(badgeDir);\n    }\n\n    const svgContent = `<svg xmlns=\"http://www.w3.org/2000/svg\">\n      <image href=\"${badgeUrl}\" />\n    </svg>`;\n\n    fs.writeFileSync(path.join(badgeDir, 'coverage-badge.svg'), svgContent);\n    console.log('Coverage badge updated successfully');\n  } catch (error) {\n    console.error('Error updating coverage badge:', error);\n    process.exit(1);\n  }\n}\n\nupdateBadge();\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/server.js","messages":[{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":28,"column":5,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":28,"endColumn":20},{"ruleId":"no-process-exit","severity":2,"message":"Don't use process.exit(); throw an error instead.","line":40,"column":3,"nodeType":"CallExpression","messageId":"noProcessExit","endLine":40,"endColumn":18}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Local CodeRabbit Server\n * Main entry point for the Express server\n */\n\n// Load environment variables\nrequire('dotenv').config();\n\nconst app = require('./src/app');\nconst config = require('./src/config');\nconst logger = require('./src/utils/logger');\n\nconst port = config.port || 3001;\n\n// Create HTTP server instance\nconst server = app.listen(port, () => {\n  logger.success(`Server is running on port ${port}`);\n  logger.info(`Environment: ${config.nodeEnv}`);\n  logger.info('Press CTRL-C to stop\\n');\n});\n\n// Handle graceful shutdown\nprocess.on('SIGTERM', () => {\n  logger.info('SIGTERM signal received.');\n  logger.info('Closing HTTP server...');\n  server.close(() => {\n    logger.info('HTTP server closed.');\n    process.exit(0);\n  });\n});\n\n// Handle unhandled rejections\nprocess.on('unhandledRejection', (err) => {\n  logger.error('Unhandled rejection:', err);\n});\n\n// Handle uncaught exceptions\nprocess.on('uncaughtException', (err) => {\n  logger.error('Uncaught exception:', err);\n  process.exit(1);\n});\n\nmodule.exports = server;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/app.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/config/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/controllers/diffController.js","messages":[{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":44,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":44,"endColumn":34,"fix":{"range":[1329,1333],"text":"(line)"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'Pragma' found.","line":67,"column":7,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":67,"endColumn":27,"fix":{"range":[2000,2008],"text":"Pragma"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'Expires' found.","line":68,"column":7,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":68,"endColumn":21,"fix":{"range":[2028,2037],"text":"Expires"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":68,"column":21,"nodeType":"Property","messageId":"missing","endLine":69,"endColumn":1,"fix":{"range":[2039,2048],"text":"'0',\n    }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":75,"column":38,"nodeType":"Property","messageId":"missing","endLine":76,"endColumn":1,"fix":{"range":[2150,2164],"text":"repoPath,\n    }"}}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"const GitService = require('../services/GitService');\nconst AnalyzerService = require('../services/AnalyzerService');\nconst logger = require('../utils/logger');\n\n// Create service instances\nconst gitService = new GitService();\nconst analyzerService = new AnalyzerService();\n\n// Load initial state\ngitService.loadState().then((repoPath) => {\n  if (repoPath) {\n    analyzerService.setRepoPath(repoPath);\n  }\n  return repoPath; // Return a value to satisfy promise/always-return\n}).catch((err) => {\n  logger.error('Failed to load initial state:', err);\n  throw err; // Re-throw to satisfy promise/always-return\n});\n\n/**\n * Get diff between two branches\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n */\nexports.getDiff = async (req, res) => {\n  try {\n    const { from: fromBranch, to: toBranch } = req.query;\n\n    if (!fromBranch || !toBranch) {\n      return res.status(400).json({ error: 'Both from and to branches are required' });\n    }\n\n    if (!gitService.repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    const diff = await gitService.getDiff(fromBranch, toBranch);\n\n    // Parse the diff output into a structured format\n    const files = [];\n    let currentFile = null;\n    let currentContent = [];\n\n    diff.split('\\n').forEach(line => {\n      if (line.startsWith('diff --git')) {\n        if (currentFile) {\n          currentFile.content = currentContent.join('\\n');\n          files.push(currentFile);\n        }\n        const filePath = line.split(' b/')[1];\n        currentFile = { path: filePath, content: '' };\n        currentContent = [];\n      } else if (currentFile) {\n        currentContent.push(line);\n      }\n    });\n\n    // Add the last file\n    if (currentFile) {\n      currentFile.content = currentContent.join('\\n');\n      files.push(currentFile);\n    }\n\n    // Set cache control headers to prevent 304s\n    res.set({\n      'Cache-Control': 'no-cache, no-store, must-revalidate',\n      'Pragma': 'no-cache',\n      'Expires': '0'\n    });\n\n    return res.json({\n      files,\n      fromBranch,\n      toBranch,\n      repository: gitService.repoPath\n    });\n  } catch (error) {\n    logger.error('Error getting diff:', error);\n    return res.status(500).json({ error: 'Failed to get diff' });\n  }\n};\n\n/**\n * Analyze diff between two branches\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n */\nexports.analyzeDiff = async (req, res) => {\n  try {\n    const { fromBranch, toBranch, prompt } = req.body;\n\n    if (!gitService.repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    if (!fromBranch || !toBranch) {\n      return res.status(400).json({ error: 'Both branches must be specified' });\n    }\n\n    // Get diff between branches\n    const diff = await gitService.getDiff(fromBranch, toBranch);\n\n    // Analyze the diff with the provided prompt\n    const analysis = await analyzerService.analyzeDiff(diff, prompt);\n\n    return res.json({\n      analysis,\n      fromBranch,\n      toBranch,\n      repository: gitService.repoPath,\n    });\n  } catch (error) {\n    logger.error('Error analyzing diff:', error);\n    return res.status(500).json({ error: 'Failed to analyze diff', details: error.message });\n  }\n};\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/controllers/repositoryController.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'expandTilde' is assigned a value but never used.","line":20,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":20,"endColumn":18},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":56,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":56,"endColumn":44},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":91,"column":40,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":91,"endColumn":42}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const path = require('path');\nconst os = require('os');\nconst GitService = require('../services/GitService');\nconst logger = require('../utils/logger');\n\n// Create a GitService instance\nconst gitService = new GitService();\n\n// Load initial state\ngitService.loadState().catch((err) => {\n  logger.error('Failed to load initial state:', err);\n  throw err; // Re-throw to satisfy promise/always-return\n});\n\n/**\n * Expand tilde in paths (e.g., \"~/Documents\" becomes \"/Users/username/Documents\")\n * @param {string} filePath - Path that may contain tilde\n * @returns {string} - Path with tilde expanded\n */\nconst expandTilde = (filePath) => {\n  if (!filePath) return filePath;\n\n  // If path starts with ~/ or ~\\, replace it with home directory\n  if (filePath.startsWith('~/') || filePath.startsWith('~\\\\')) {\n    return path.join(os.homedir(), filePath.substring(2));\n  }\n\n  // If path is just ~, return home directory\n  if (filePath === '~') {\n    return os.homedir();\n  }\n\n  return filePath;\n};\n\n/**\n * Get list of repositories\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n */\nexports.getRepositories = async (req, res) => {\n  try {\n    const repositories = await GitService.findRepositories();\n    res.json(repositories);\n  } catch (error) {\n    logger.error('Error getting repositories:', error);\n    res.status(500).json({ error: 'Failed to get repositories' });\n  }\n};\n\n/**\n * Set repository\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n */\nexports.setRepository = async (req, res) => {\n  const { path: repoPath } = req.body;\n\n  if (!repoPath) {\n    return res.status(400).json({ error: 'Repository path is required' });\n  }\n\n  try {\n    const isValid = await gitService.isValidRepo(repoPath);\n    if (!isValid) {\n      return res.status(400).json({ error: 'Not a valid git repository' });\n    }\n\n    gitService.setRepoPath(repoPath);\n    const branches = await gitService.getBranches();\n    const current = await gitService.getCurrentBranch();\n\n    await gitService.saveState();\n\n    res.json({\n      path: repoPath,\n      branches: branches.all,\n      current,\n    });\n  } catch (error) {\n    logger.error('Error setting repository:', error);\n    res.status(500).json({ error: 'Failed to set repository' });\n  }\n};\n\n/**\n * Get branches for current repository\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n */\nexports.getBranches = async (req, res) => {\n  if (!gitService.repoPath) {\n    return res.status(400).json({ error: 'No repository selected' });\n  }\n\n  try {\n    const branches = await gitService.getBranches();\n    const current = await gitService.getCurrentBranch();\n\n    res.json({\n      branches: branches.all,\n      current,\n    });\n  } catch (error) {\n    logger.error('Error getting branches:', error);\n    res.status(500).json({ error: 'Failed to get branches' });\n  }\n};\n\n/**\n * Get current repository info\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n */\nexports.getRepositoryInfo = async (req, res) => {\n  try {\n    if (!gitService.repoPath) {\n      return res.status(400).json({ error: 'No repository selected' });\n    }\n\n    const branches = await gitService.getBranches();\n    const currentBranch = await gitService.getCurrentBranch();\n\n    return res.json({\n      path: gitService.repoPath,\n      name: path.basename(gitService.repoPath),\n      branches: branches.all || [],\n      current: currentBranch,\n    });\n  } catch (error) {\n    logger.error('Error getting repository info:', error);\n    return res.status(500).json({ error: 'Failed to get repository info', details: error.message });\n  }\n};\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/middleware/cors.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/middleware/errorHandler.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'config' is assigned a value but never used.","line":2,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13},{"ruleId":"no-unused-vars","severity":2,"message":"'next' is defined but never used. Allowed unused args must match /^_/u.","line":11,"column":38,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":42}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const logger = require('../utils/logger');\nconst config = require('../config');\n\n/**\n * Error handling middleware\n * @param {Error} err - Error object\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n * @param {Function} next - Express next function\n */\nconst errorHandler = (err, req, res, next) => {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n\n  logger.error('Error:', {\n    message: err.message,\n    stack: err.stack,\n    path: req.path,\n    method: req.method,\n  });\n\n  const status = err.status || 500;\n  const response = {\n    error: 'Internal Server Error',\n    message: isDevelopment ? err.message : 'Something went wrong',\n  };\n\n  if (isDevelopment) {\n    response.stack = err.stack;\n  }\n\n  res.status(status).json(response);\n};\n\nmodule.exports = errorHandler;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/middleware/requestLogger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/routes/diffRoutes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/routes/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/routes/repositoryRoutes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/services/AnalyzerService.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token =","line":7,"column":32,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const path = require('path');\n// eslint-disable-next-line no-unused-vars\nconst fs = require('fs').promises;\nconst logger = require('../utils/logger');\n\nclass AnalyzerService {\n  static COMPLEXITY_THRESHOLDS = {\n    LOW: 10,\n    MEDIUM: 30,\n    HIGH: 50\n  };\n\n  constructor(repoPath = '') {\n    this.repoPath = repoPath;\n  }\n\n  /**\n   * Set the repository path\n   * @param {string} repoPath - Path to the repository\n   */\n  setRepoPath(repoPath) {\n    this.repoPath = repoPath;\n  }\n\n  /**\n   * Analyze a diff output\n   * @param {string} diffOutput - Git diff output\n   * @param {string} prompt - Custom prompt for analysis\n   * @returns {Promise<Object>} - Analyzed diff data\n   */\n  async analyzeDiff(diffOutput, prompt = '') {\n    try {\n      const files = AnalyzerService.parseDiff(diffOutput);\n\n      // If a custom prompt is provided, use it for AI analysis\n      if (prompt) {\n        const aiAnalysis = await this.geminiService.analyzeDiff(files, prompt);\n        return {\n          ...aiAnalysis,\n          files: files.map(file => ({\n            name: file.name,\n            type: AnalyzerService.getFileType(file.extension),\n            changes: file.changes\n          }))\n        };\n      }\n\n      // Default analysis without AI\n      const analysis = {\n        files: files.map(file => {\n          const complexity = AnalyzerService.calculateComplexity(file);\n          return {\n            name: file.name,\n            type: AnalyzerService.getFileType(file.extension),\n            complexity: complexity.score,\n            impact: AnalyzerService.calculateImpactLevel(file, complexity),\n            changes: complexity.changes\n          };\n        }),\n        summary: {\n          totalFiles: files.length,\n          complexityScore: files.reduce((sum, file) =>\n            sum + AnalyzerService.calculateComplexity(file).score, 0)\n        }\n      };\n\n      return analysis;\n    } catch (error) {\n      logger.error('Error analyzing diff:', error);\n      throw new Error('Failed to analyze diff');\n    }\n  }\n\n  /**\n   * Parse git diff output into structured file objects\n   * @param {string} diffOutput - Git diff output\n   * @returns {Array} - Array of file objects\n   */\n  static parseDiff(diffOutput) {\n    if (!diffOutput) return [];\n\n    const files = [];\n    let currentFile = null;\n\n    diffOutput.split('\\n').forEach(line => {\n      if (line.startsWith('diff --git')) {\n        if (currentFile) files.push(currentFile);\n        currentFile = { changes: [] };\n      } else if (currentFile) {\n        currentFile.changes.push(line);\n      }\n    });\n\n    if (currentFile) files.push(currentFile);\n    return files;\n  }\n\n  /**\n   * Get file type based on extension\n   * @param {string} extension - File extension\n   * @returns {string} - File type\n   */\n  static getFileType(extension) {\n    const fileTypes = {\n      js: 'JavaScript',\n      ts: 'TypeScript',\n      jsx: 'React',\n      tsx: 'React TypeScript',\n      py: 'Python',\n      java: 'Java',\n      rb: 'Ruby',\n      go: 'Go',\n      rs: 'Rust',\n      php: 'PHP'\n    };\n    return fileTypes[extension] || 'Unknown';\n  }\n\n  /**\n   * Calculate complexity metrics for a file\n   * @param {Object} file - File object\n   * @returns {Object} - Complexity metrics\n   */\n  static calculateComplexity(file) {\n    const totalChanges = file.additions + file.deletions;\n    let score = 1;\n\n    if (totalChanges > this.COMPLEXITY_THRESHOLDS.HIGH) {\n      score = 3;\n    } else if (totalChanges > this.COMPLEXITY_THRESHOLDS.MEDIUM) {\n      score = 2;\n    }\n\n    return {\n      score,\n      changes: totalChanges\n    };\n  }\n\n  /**\n   * Calculate impact level of changes\n   * @param {Object} file - File object\n   * @param {Object} complexity - Complexity metrics\n   * @returns {string} - Impact level\n   */\n  static calculateImpactLevel(file, complexity) {\n    if (complexity.score === 3) return 'high';\n    if (complexity.score === 2) return 'medium';\n    return 'low';\n  }\n\n  /**\n   * Analyze a file's changes\n   * @param {Object} file - File object\n   * @returns {Promise<Object>} - Analysis results\n   */\n  async analyzeFile(file) {\n    try {\n      // Determine file type based on extension\n      const fileType = this.getFileType(file.extension);\n\n      // Calculate complexity metrics\n      const complexity = this.calculateComplexity(file);\n\n      return {\n        fileType,\n        complexity,\n        impactLevel: this.calculateImpactLevel(file, complexity),\n      };\n    } catch (error) {\n      logger.error(`Error analyzing file ${file.path}:`, error);\n      return {\n        fileType: 'unknown',\n        complexity: { score: 0 },\n        impactLevel: 'unknown',\n      };\n    }\n  }\n\n  /**\n   * Generate a summary of the analyzed diff\n   * @param {Array} files - Array of analyzed file objects\n   * @returns {Object} - Summary object\n   */\n  static generateSummary(files) {\n    const totalFiles = files.length;\n    const totalAdditions = files.reduce((sum, file) => sum + file.additions, 0);\n    const totalDeletions = files.reduce((sum, file) => sum + file.deletions, 0);\n\n    // Count files by impact level\n    const impactCounts = {\n      high: 0,\n      medium: 0,\n      low: 0,\n      unknown: 0,\n    };\n\n    files.forEach((file) => {\n      if (file.analysis && file.analysis.impactLevel) {\n        impactCounts[file.analysis.impactLevel] += 1;\n      } else {\n        impactCounts.unknown += 1;\n      }\n    });\n\n    // Determine overall impact\n    let overallImpact;\n    if (impactCounts.high > 0) {\n      overallImpact = 'high';\n    } else if (impactCounts.medium > 0) {\n      overallImpact = 'medium';\n    } else {\n      overallImpact = 'low';\n    }\n\n    return {\n      totalFiles,\n      totalAdditions,\n      totalDeletions,\n      impactCounts,\n      overallImpact,\n    };\n  }\n}\n\nmodule.exports = AnalyzerService;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/services/CodeReviewService.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'fs' is assigned a value but never used.","line":2,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":9},{"ruleId":"import/order","severity":2,"message":"`axios` import should occur before import of `../utils/logger`","line":5,"column":15,"nodeType":"CallExpression","endLine":5,"endColumn":31,"fix":{"range":[112,187],"text":"const axios = require('axios');\nconst logger = require('../utils/logger');\n"}},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'axios'.","line":5,"column":23,"nodeType":"Literal","endLine":5,"endColumn":30},{"ruleId":"node/no-missing-require","severity":2,"message":"\"axios\" is not found.","line":5,"column":23,"nodeType":"Literal","endLine":5,"endColumn":30},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":12,"column":60,"nodeType":"Program","messageId":"trailingSpace","endLine":12,"endColumn":61,"fix":{"range":[467,468],"text":""}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":35,"column":29,"nodeType":"Property","messageId":"missing","endLine":36,"endColumn":1,"fix":{"range":[1277,1298],"text":"reviewResults,\n      }"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class async method 'getDiffBetweenBranches'.","line":50,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":50,"endColumn":31},{"ruleId":"max-len","severity":2,"message":"This line has a length of 106. Maximum allowed is 100.","line":53,"column":1,"nodeType":"Program","messageId":"max","endLine":53,"endColumn":107},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":70,"column":5,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":101,"endColumn":6},{"ruleId":"no-continue","severity":2,"message":"Unexpected use of continue statement.","line":73,"column":29,"nodeType":"ContinueStatement","messageId":"unexpected","endLine":73,"endColumn":38},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":83,"column":51,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":83,"endColumn":54},{"ruleId":"max-len","severity":2,"message":"This line has a length of 107. Maximum allowed is 100.","line":85,"column":1,"nodeType":"Program","messageId":"max","endLine":85,"endColumn":108},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":96,"column":44,"nodeType":"Property","messageId":"missing","endLine":97,"endColumn":1,"fix":{"range":[3436,3447],"text":"),\n        }"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'getFileType'.","line":111,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":111,"endColumn":14},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":135,"column":17,"nodeType":"Property","messageId":"missing","endLine":136,"endColumn":1,"fix":{"range":[4217,4228],"text":"'XML',\n    }"}},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":152,"column":5,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":174,"endColumn":6},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":156,"column":7,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":173,"endColumn":8},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":159,"column":32,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":159,"endColumn":75},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":164,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":164,"endColumn":29,"fix":{"range":[5293,5297],"text":"(file)"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":169,"column":75,"nodeType":"Property","messageId":"missing","endLine":170,"endColumn":1,"fix":{"range":[5536,5551],"text":"],\n            }"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'groupFilesByType'.","line":184,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":184,"endColumn":19},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":187,"column":5,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":192,"endColumn":6},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":207,"column":5,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":219,"endColumn":6},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'createTypeSpecificPrompt'.","line":251,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":251,"endColumn":27},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'JavaScript' found.","line":254,"column":7,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":254,"endColumn":115,"fix":{"range":[7792,7804],"text":"JavaScript"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'TypeScript' found.","line":255,"column":7,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":255,"endColumn":98,"fix":{"range":[7908,7920],"text":"TypeScript"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'Python' found.","line":256,"column":7,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":256,"endColumn":90,"fix":{"range":[8007,8015],"text":"Python"}},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'Java' found.","line":257,"column":7,"nodeType":"Property","messageId":"unnecessarilyQuotedProperty","endLine":257,"endColumn":100,"fix":{"range":[8098,8104],"text":"Java"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":264,"column":40,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":264,"endColumn":44,"fix":{"range":[8490,8494],"text":"(file)"}},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`.","line":264,"column":48,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedObjectBlock","endLine":269,"endColumn":6,"fix":{"range":[8498,8624],"text":"({\n        path: file.path,\n        hunks: file.hunks.length > 0 ? file.hunks : ['File changed'],\n      })"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":321,"column":27,"nodeType":"Property","messageId":"missing","endLine":322,"endColumn":1,"fix":{"range":[9788,9808],"text":"prompt,\n            }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":322,"column":14,"nodeType":"ObjectExpression","messageId":"missing","endLine":323,"endColumn":1,"fix":{"range":[9807,9820],"text":"},\n          ]"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":323,"column":12,"nodeType":"Property","messageId":"missing","endLine":324,"endColumn":1,"fix":{"range":[9819,9830],"text":"],\n        }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":324,"column":10,"nodeType":"ObjectExpression","messageId":"missing","endLine":325,"endColumn":1,"fix":{"range":[9829,9838],"text":"},\n      ]"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":331,"column":8,"nodeType":"Property","messageId":"missing","endLine":332,"endColumn":1,"fix":{"range":[9990,9997],"text":"},\n    }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":337,"column":45,"nodeType":"Property","messageId":"missing","endLine":338,"endColumn":1,"fix":{"range":[10115,10143],"text":"'application/json',\n        }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":338,"column":10,"nodeType":"Property","messageId":"missing","endLine":339,"endColumn":1,"fix":{"range":[10142,10151],"text":"},\n      }"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":379,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":379,"endColumn":36,"fix":{"range":[11545,11549],"text":"(file)"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":383,"column":54,"nodeType":"Property","messageId":"missing","endLine":384,"endColumn":1,"fix":{"range":[11678,11687],"text":"],\n      }"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'matchReviewsToOriginalFiles'.","line":394,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":394,"endColumn":30},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":398,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":398,"endColumn":31,"fix":{"range":[12072,12078],"text":"(review)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":405,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":405,"endColumn":34,"fix":{"range":[12246,12250],"text":"(file)"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":413,"column":48,"nodeType":"Property","messageId":"missing","endLine":414,"endColumn":1,"fix":{"range":[12480,12491],"text":"],\n        }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":422,"column":51,"nodeType":"Property","messageId":"missing","endLine":423,"endColumn":1,"fix":{"range":[12679,12688],"text":"],\n      }"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'generateSummary'.","line":432,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":432,"endColumn":18},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":436,"column":13,"nodeType":"Property","messageId":"missing","endLine":437,"endColumn":1,"fix":{"range":[12962,12969],"text":"0,\n    }"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":440,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":440,"endColumn":29,"fix":{"range":[13028,13032],"text":"(file)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":442,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":442,"endColumn":34,"fix":{"range":[13121,13126],"text":"(issue)"}},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":444,"column":13,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":444,"endColumn":47},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":459,"column":43,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":459,"endColumn":47,"fix":{"range":[13595,13599],"text":"(file)"}},{"ruleId":"implicit-arrow-linebreak","severity":2,"message":"Expected no linebreak before this expression.","line":460,"column":7,"nodeType":"Punctuator","messageId":"unexpected","endLine":460,"endColumn":8,"fix":{"range":[13602,13609],"text":" "}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":460,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":460,"endColumn":36,"fix":{"range":[13633,13638],"text":"(issue)"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":462,"column":24,"nodeType":"Property","messageId":"missing","endLine":463,"endColumn":1,"fix":{"range":[13682,13694],"text":"path,\n      }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":463,"column":10,"nodeType":"ArrowFunctionExpression","messageId":"missing","endLine":464,"endColumn":1,"fix":{"range":[13695,13702],"text":"),\n    )"}},{"ruleId":"function-paren-newline","severity":2,"message":"Unexpected newline before ')'.","line":464,"column":5,"nodeType":"Punctuator","messageId":"unexpectedBefore","endLine":464,"endColumn":6,"fix":{"range":[13696,13701],"text":""}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":467,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":467,"endColumn":20,"fix":{"range":[13760,13765],"text":"(issue)"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":474,"column":28,"nodeType":"SpreadElement","messageId":"missing","endLine":475,"endColumn":1,"fix":{"range":[13977,14001],"text":"issuesBySeverity,\n      }"}},{"ruleId":"comma-dangle","severity":2,"message":"Missing trailing comma.","line":478,"column":44,"nodeType":"Property","messageId":"missing","endLine":479,"endColumn":1,"fix":{"range":[14104,14111],"text":"),\n    }"}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":483,"column":36,"nodeType":"Program","messageId":"trailingSpace","endLine":483,"endColumn":37,"fix":{"range":[14155,14156],"text":""}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":483,"column":37,"nodeType":"Program","messageId":"missing","fix":{"range":[14156,14156],"text":"\n"}}],"suppressedMessages":[],"errorCount":60,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":40,"fixableWarningCount":0,"source":"const path = require('path');\nconst fs = require('fs').promises;\nconst { execSync } = require('child_process');\nconst logger = require('../utils/logger');\nconst axios = require('axios');\n\nclass CodeReviewService {\n  constructor() {\n    this.apiKey = process.env.GEMINI_API_KEY;\n    this.baseUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent';\n    this.maxRetries = 3;\n    this.maxTokensPerRequest = 4096; // Control token usage \n  }\n\n  /**\n   * Review code changes in a pull request\n   * @param {string} repoPath - Path to the repository\n   * @param {string} baseBranch - Base branch (e.g., main)\n   * @param {string} headBranch - Head branch (feature branch)\n   * @returns {Promise<Object>} - Review results\n   */\n  async reviewPullRequest(repoPath, baseBranch, headBranch) {\n    try {\n      // Get the diff between branches\n      const diffOutput = await this.getDiffBetweenBranches(repoPath, baseBranch, headBranch);\n\n      // Parse the diff into files\n      const files = await this.parseGitDiff(diffOutput);\n\n      // Analyze files in chunks to optimize token usage\n      const reviewResults = await this.analyzeFilesWithTokenOptimization(files);\n\n      return {\n        summary: this.generateSummary(reviewResults),\n        files: reviewResults\n      };\n    } catch (error) {\n      logger.error('Error reviewing pull request:', error);\n      throw new Error(`Failed to review pull request: ${error.message}`);\n    }\n  }\n\n  /**\n   * Get diff between two branches\n   * @param {string} repoPath - Repository path\n   * @param {string} baseBranch - Base branch\n   * @param {string} headBranch - Head branch\n   * @returns {Promise<string>} - Git diff output\n   */\n  async getDiffBetweenBranches(repoPath, baseBranch, headBranch) {\n    try {\n      const diffCommand = `git diff ${baseBranch}...${headBranch}`;\n      const diffOutput = execSync(diffCommand, { cwd: repoPath, maxBuffer: 10 * 1024 * 1024 }).toString();\n      return diffOutput;\n    } catch (error) {\n      logger.error('Error getting diff between branches:', error);\n      throw new Error(`Failed to get diff between branches: ${error.message}`);\n    }\n  }\n\n  /**\n   * Parse git diff output into structured file objects\n   * @param {string} diffOutput - Git diff output\n   * @returns {Promise<Array>} - Array of file objects\n   */\n  async parseGitDiff(diffOutput) {\n    const files = [];\n    const diffFiles = diffOutput.split('diff --git ').filter(Boolean);\n\n    for (const fileDiff of diffFiles) {\n      try {\n        const filePathMatch = fileDiff.match(/a\\/(.*) b\\/(.*)/);\n        if (!filePathMatch) continue;\n\n        const filePath = filePathMatch[2];\n        const extension = path.extname(filePath).substring(1);\n\n        // Extract changed lines\n        const hunkMatches = [...fileDiff.matchAll(/@@\\s-\\d+,\\d+\\s\\+\\d+,\\d+\\s@@/g)];\n        const hunks = [];\n\n        if (hunkMatches.length > 0) {\n          for (let i = 0; i < hunkMatches.length; i++) {\n            const currentMatchIndex = hunkMatches[i].index;\n            const nextMatchIndex = i < hunkMatches.length - 1 ? hunkMatches[i + 1].index : fileDiff.length;\n            const hunkContent = fileDiff.substring(currentMatchIndex, nextMatchIndex);\n            hunks.push(hunkContent);\n          }\n        }\n\n        files.push({\n          path: filePath,\n          extension,\n          hunks,\n          content: fileDiff,\n          type: this.getFileType(extension)\n        });\n      } catch (error) {\n        logger.warn(`Error parsing diff for a file: ${error.message}`);\n      }\n    }\n\n    return files;\n  }\n\n  /**\n   * Get file type based on extension\n   * @param {string} extension - File extension\n   * @returns {string} - File type\n   */\n  getFileType(extension) {\n    const fileTypes = {\n      js: 'JavaScript',\n      jsx: 'React',\n      ts: 'TypeScript',\n      tsx: 'React TypeScript',\n      py: 'Python',\n      java: 'Java',\n      rb: 'Ruby',\n      go: 'Go',\n      rs: 'Rust',\n      php: 'PHP',\n      cs: 'C#',\n      cpp: 'C++',\n      c: 'C',\n      swift: 'Swift',\n      kt: 'Kotlin',\n      md: 'Markdown',\n      json: 'JSON',\n      yml: 'YAML',\n      yaml: 'YAML',\n      css: 'CSS',\n      scss: 'SCSS',\n      html: 'HTML',\n      xml: 'XML'\n    };\n\n    return fileTypes[extension] || 'Unknown';\n  }\n\n  /**\n   * Analyze files with token optimization\n   * @param {Array} files - Array of file objects\n   * @returns {Promise<Array>} - Analysis results for each file\n   */\n  async analyzeFilesWithTokenOptimization(files) {\n    // Group files by type to enable domain-specific analysis\n    const filesByType = this.groupFilesByType(files);\n    const results = [];\n\n    // Process each file type group\n    for (const [type, typeFiles] of Object.entries(filesByType)) {\n      // Further chunk the files within each type to optimize token usage\n      const fileChunks = this.chunkFilesByTokenSize(typeFiles);\n\n      for (const chunk of fileChunks) {\n        try {\n          // Get language-specific review for this chunk\n          const chunkReviews = await this.getAIReviewForChunk(chunk, type);\n          results.push(...chunkReviews);\n        } catch (error) {\n          logger.error(`Error reviewing ${type} files chunk:`, error);\n          // Add basic info for files that failed analysis\n          chunk.forEach(file => {\n            results.push({\n              path: file.path,\n              type: file.type,\n              issues: [{ title: 'Analysis failed', severity: 'low' }],\n              suggestions: ['File could not be analyzed due to an error.']\n            });\n          });\n        }\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Group files by their type for more focused analysis\n   * @param {Array} files - Array of file objects\n   * @returns {Object} - Files grouped by type\n   */\n  groupFilesByType(files) {\n    const filesByType = {};\n\n    for (const file of files) {\n      if (!filesByType[file.type]) {\n        filesByType[file.type] = [];\n      }\n      filesByType[file.type].push(file);\n    }\n\n    return filesByType;\n  }\n\n  /**\n   * Chunk files based on estimated token size to optimize API calls\n   * @param {Array} files - Array of file objects\n   * @returns {Array} - Array of file chunks\n   */\n  chunkFilesByTokenSize(files) {\n    const chunks = [];\n    let currentChunk = [];\n    let currentTokens = 0;\n\n    for (const file of files) {\n      // Rough token estimation based on content length\n      const estimatedTokens = Math.ceil(file.content.length / 4);\n\n      if (currentTokens + estimatedTokens > this.maxTokensPerRequest && currentChunk.length > 0) {\n        chunks.push([...currentChunk]);\n        currentChunk = [];\n        currentTokens = 0;\n      }\n\n      currentChunk.push(file);\n      currentTokens += estimatedTokens;\n    }\n\n    if (currentChunk.length > 0) {\n      chunks.push(currentChunk);\n    }\n\n    return chunks;\n  }\n\n  /**\n   * Get AI review for a chunk of files\n   * @param {Array} files - Array of file objects\n   * @param {string} fileType - Type of files being reviewed\n   * @returns {Promise<Array>} - Review results\n   */\n  async getAIReviewForChunk(files, fileType) {\n    // Create optimized prompt that focuses analysis on the specific file type\n    const prompt = this.createTypeSpecificPrompt(files, fileType);\n\n    // Call Gemini API\n    const response = await this.callGeminiAPI(prompt);\n\n    // Parse and validate the response\n    return this.parseReviewResponse(response, files);\n  }\n\n  /**\n   * Create type-specific prompt for better analysis\n   * @param {Array} files - Array of file objects\n   * @param {string} fileType - Type of files being reviewed\n   * @returns {string} - Enhanced prompt\n   */\n  createTypeSpecificPrompt(files, fileType) {\n    // Language-specific guidelines based on file type\n    const languageGuidelines = {\n      'JavaScript': 'Focus on modern JS practices, ES6+ features, potential memory leaks, and performance issues.',\n      'TypeScript': 'Check for proper type usage, interface definitions, and type safety issues.',\n      'Python': 'Focus on PEP 8 compliance, Pythonic patterns, and common anti-patterns.',\n      'Java': 'Check for OOP best practices, thread safety issues, and performance considerations.',\n      // Add more language-specific guidelines as needed\n    };\n\n    const guidelines = languageGuidelines[fileType] || 'Focus on code quality, maintainability, and potential bugs.';\n\n    // Create compact diff representation with only essential information\n    const filesDiffSummary = files.map(file => {\n      return {\n        path: file.path,\n        hunks: file.hunks.length > 0 ? file.hunks : ['File changed'],\n      };\n    });\n\n    return `\nYou are a senior ${fileType} developer performing a code review. Review the following file changes.\n\n${guidelines}\n\nFor each file, identify:\n1. Potential bugs or errors\n2. Performance issues\n3. Security vulnerabilities\n4. Code style and maintainability concerns\n5. Suggested improvements\n\nFormat your response as JSON with the following structure for each file:\n{\n  \"files\": [\n    {\n      \"path\": \"file path\",\n      \"issues\": [\n        {\n          \"title\": \"Brief issue title\",\n          \"description\": \"Detailed description\",\n          \"severity\": \"high|medium|low\",\n          \"line\": \"line number or range (if applicable)\"\n        }\n      ],\n      \"suggestions\": [\n        \"Specific actionable suggestion\"\n      ]\n    }\n  ]\n}\n\nHere are the code changes to review:\n${JSON.stringify(filesDiffSummary, null, 2)}\n`;\n  }\n\n  /**\n   * Call the Gemini API\n   * @param {string} prompt - Enhanced prompt\n   * @returns {Promise<Object>} - Raw API response\n   */\n  async callGeminiAPI(prompt) {\n    const url = `${this.baseUrl}?key=${this.apiKey}`;\n\n    const requestBody = {\n      contents: [\n        {\n          parts: [\n            {\n              text: prompt\n            }\n          ]\n        }\n      ],\n      generationConfig: {\n        temperature: 0.2,\n        topK: 40,\n        topP: 0.95,\n        maxOutputTokens: 4096, // Limit output tokens\n      }\n    };\n\n    try {\n      const response = await axios.post(url, requestBody, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      return response.data;\n    } catch (error) {\n      logger.error('Error calling Gemini API:', error.response?.data || error.message);\n      throw new Error(`Gemini API error: ${error.message}`);\n    }\n  }\n\n  /**\n   * Parse the review response from Gemini API\n   * @param {Object} response - Raw API response\n   * @param {Array} originalFiles - Original files that were analyzed\n   * @returns {Array} - Parsed file reviews\n   */\n  parseReviewResponse(response, originalFiles) {\n    try {\n      // Extract text content from Gemini response\n      const textContent = response.candidates[0].content.parts[0].text;\n\n      // Find JSON in the response\n      const jsonMatch = textContent.match(/\\{[\\s\\S]*\\}/);\n\n      if (!jsonMatch) {\n        throw new Error('No JSON found in Gemini response');\n      }\n\n      // Parse the JSON\n      const jsonResponse = JSON.parse(jsonMatch[0]);\n\n      // Ensure we have file reviews\n      if (!jsonResponse.files || !Array.isArray(jsonResponse.files)) {\n        throw new Error('Invalid response format: missing files array');\n      }\n\n      // Match response to original files to ensure all files have reviews\n      return this.matchReviewsToOriginalFiles(jsonResponse.files, originalFiles);\n    } catch (error) {\n      logger.error('Error parsing Gemini response:', error);\n      // Return basic information for the files\n      return originalFiles.map(file => ({\n        path: file.path,\n        type: file.type,\n        issues: [],\n        suggestions: ['Failed to parse AI analysis.']\n      }));\n    }\n  }\n\n  /**\n   * Match reviews to original files\n   * @param {Array} fileReviews - Reviews returned by Gemini\n   * @param {Array} originalFiles - Original files that were analyzed\n   * @returns {Array} - Complete file reviews\n   */\n  matchReviewsToOriginalFiles(fileReviews, originalFiles) {\n    const reviewsByPath = {};\n\n    // Create lookup by path\n    fileReviews.forEach(review => {\n      if (review.path) {\n        reviewsByPath[review.path] = review;\n      }\n    });\n\n    // Ensure all original files have reviews\n    return originalFiles.map(file => {\n      const review = reviewsByPath[file.path];\n\n      if (review) {\n        return {\n          path: file.path,\n          type: file.type,\n          issues: review.issues || [],\n          suggestions: review.suggestions || []\n        };\n      }\n\n      // Default for files without reviews\n      return {\n        path: file.path,\n        type: file.type,\n        issues: [],\n        suggestions: ['No specific issues found.']\n      };\n    });\n  }\n\n  /**\n   * Generate a summary of all file reviews\n   * @param {Array} fileReviews - Reviews for all files\n   * @returns {Object} - Summary object\n   */\n  generateSummary(fileReviews) {\n    const issuesBySeverity = {\n      high: 0,\n      medium: 0,\n      low: 0\n    };\n\n    // Count issues by severity\n    fileReviews.forEach(file => {\n      if (file.issues && Array.isArray(file.issues)) {\n        file.issues.forEach(issue => {\n          if (issue.severity && issuesBySeverity[issue.severity] !== undefined) {\n            issuesBySeverity[issue.severity]++;\n          }\n        });\n      }\n    });\n\n    // Determine overall quality\n    let overallQuality = 'good';\n    if (issuesBySeverity.high > 0) {\n      overallQuality = 'needs work';\n    } else if (issuesBySeverity.medium > 3) {\n      overallQuality = 'fair';\n    }\n\n    // Extract top issues\n    const allIssues = fileReviews.flatMap(file =>\n      (file.issues || []).map(issue => ({\n        ...issue,\n        file: file.path\n      }))\n    );\n\n    const highPriorityIssues = allIssues\n      .filter(issue => issue.severity === 'high')\n      .slice(0, 3);\n\n    return {\n      filesAnalyzed: fileReviews.length,\n      issueCount: {\n        total: Object.values(issuesBySeverity).reduce((a, b) => a + b, 0),\n        ...issuesBySeverity\n      },\n      overallQuality,\n      topIssues: highPriorityIssues,\n      generatedAt: new Date().toISOString()\n    };\n  }\n}\n\nmodule.exports = CodeReviewService; ","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/services/GitService.js","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":41,"column":10,"nodeType":"CallExpression","endLine":41,"endColumn":37},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdirSync from package \"fs\" with non literal argument at index 0","line":42,"column":7,"nodeType":"CallExpression","endLine":42,"endColumn":54},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":126,"column":12,"nodeType":"CallExpression","endLine":126,"endColumn":49},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readFile from package \"fs\" with non literal argument at index 0","line":133,"column":34,"nodeType":"CallExpression","endLine":133,"endColumn":73},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":194,"column":7,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":206,"endColumn":8},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":198,"column":29,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":198,"endColumn":65},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":211,"column":7,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":256,"endColumn":8},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":215,"column":25,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":218,"endColumn":13},{"ruleId":"no-continue","severity":2,"message":"Unexpected use of continue statement.","line":220,"column":40,"nodeType":"ContinueStatement","messageId":"unexpected","endLine":220,"endColumn":49},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":230,"column":43,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":230,"endColumn":46},{"ruleId":"no-continue","severity":2,"message":"Unexpected use of continue statement.","line":234,"column":42,"nodeType":"ContinueStatement","messageId":"unexpected","endLine":234,"endColumn":51},{"ruleId":"no-continue","severity":2,"message":"Unexpected use of continue statement.","line":237,"column":42,"nodeType":"ContinueStatement","messageId":"unexpected","endLine":237,"endColumn":51},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":241,"column":34,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":241,"endColumn":73},{"ruleId":"no-continue","severity":2,"message":"Unexpected use of continue statement.","line":242,"column":61,"nodeType":"ContinueStatement","messageId":"unexpected","endLine":242,"endColumn":70},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class async method 'isGitRepository'.","line":271,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":271,"endColumn":24}],"suppressedMessages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":160,"column":13,"nodeType":"CallExpression","endLine":160,"endColumn":90,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found stat from package \"fs\" with non literal argument at index 0","line":198,"column":35,"nodeType":"CallExpression","endLine":198,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdir from package \"fs\" with non literal argument at index 0","line":215,"column":31,"nodeType":"CallExpression","endLine":215,"endColumn":71,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found stat from package \"fs\" with non literal argument at index 0","line":241,"column":40,"nodeType":"CallExpression","endLine":241,"endColumn":55,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":11,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const simpleGit = require('simple-git');\nconst path = require('path');\nconst fs = require('fs').promises;\nconst fsSync = require('fs');\nconst os = require('os');\nconst logger = require('../utils/logger');\nconst config = require('../config');\n\n// Helper function to validate paths before fs operations\nconst validatePath = (filePath, allowedPaths = []) => {\n  if (!filePath) return false;\n\n  const normalizedPath = path.normalize(filePath);\n\n  // Check for path traversal attempts\n  if (normalizedPath.includes('..')) return false;\n\n  // If allowedPaths is provided, check against the whitelist\n  if (allowedPaths.length > 0) {\n    return allowedPaths.some((allowedPath) => {\n      const normalizedAllowedPath = path.normalize(allowedPath);\n      return normalizedPath.startsWith(normalizedAllowedPath);\n    });\n  }\n\n  // Default validation - check if path is absolute and within safe directories\n  const safeDirectories = [\n    path.resolve(__dirname, '..', '..'), // Project root\n    os.homedir(),\n  ];\n\n  return safeDirectories.some((safeDir) => normalizedPath.startsWith(safeDir));\n};\n\nclass GitService {\n  constructor(repoPath = '') {\n    this.repoPath = repoPath;\n    this.git = simpleGit(repoPath);\n    // Ensure the state directory exists\n    const stateDir = path.join(__dirname, '..', '..', path.dirname(config.git.statePath));\n    if (!fsSync.existsSync(stateDir)) {\n      fsSync.mkdirSync(stateDir, { recursive: true });\n    }\n    this.stateFilePath = path.join(__dirname, '..', '..', config.git.statePath);\n  }\n\n  /**\n   * Set the repository path\n   * @param {string} repoPath - Path to the repository\n   */\n  setRepoPath(repoPath) {\n    this.repoPath = repoPath;\n    this.git = simpleGit(repoPath);\n  }\n\n  /**\n   * Check if the current path is a valid Git repository\n   * @returns {Promise<boolean>} - True if valid Git repository\n   */\n  async isValidRepo() {\n    try {\n      return await this.git.checkIsRepo();\n    } catch (error) {\n      logger.error('Error checking if valid repo:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get all branches in the repository\n   * @returns {Promise<Object>} - Object containing branch information\n   */\n  async getBranches() {\n    try {\n      return await this.git.branch();\n    } catch (error) {\n      logger.error('Error getting branches:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get the current branch\n   * @returns {Promise<string>} - Current branch name\n   */\n  async getCurrentBranch() {\n    try {\n      const { current } = await this.git.branch();\n      return current;\n    } catch (error) {\n      logger.error('Error getting current branch:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get diff between two branches\n   * @param {string} fromBranch - Source branch\n   * @param {string} toBranch - Target branch\n   * @returns {Promise<string>} - Diff output\n   */\n  async getDiff(fromBranch, toBranch) {\n    try {\n      return await this.git.diff([fromBranch, toBranch]);\n    } catch (error) {\n      logger.error('Error getting diff:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load repository path from state file\n   * @returns {Promise<string>} - Repository path\n   */\n  async loadState() {\n    try {\n      logger.info('Loading state from:', this.stateFilePath);\n\n      // Validate path before file operations\n      if (!validatePath(this.stateFilePath)) {\n        logger.error('Invalid state file path');\n        return '';\n      }\n\n      // Check if file exists\n      if (!fsSync.existsSync(this.stateFilePath)) {\n        logger.info('State file does not exist, creating empty state');\n        await this.saveState();\n        return '';\n      }\n\n      // Read and parse state file\n      const stateContent = await fs.readFile(this.stateFilePath, 'utf8');\n      const state = JSON.parse(stateContent);\n      if (state && state.repoPath) {\n        this.setRepoPath(state.repoPath);\n        return state.repoPath;\n      }\n      return '';\n    } catch (error) {\n      logger.error('Error loading state:', error);\n      return '';\n    }\n  }\n\n  /**\n   * Save repository path to state file\n   * @returns {Promise<void>}\n   */\n  async saveState() {\n    try {\n      logger.info('Saving state, repoPath:', this.repoPath);\n\n      // Validate path before file operations\n      if (!validatePath(this.stateFilePath)) {\n        throw new Error('Invalid state file path');\n      }\n\n      // eslint-disable-next-line security/detect-non-literal-fs-filename\n      await fs.writeFile(this.stateFilePath, JSON.stringify({ repoPath: this.repoPath }));\n      logger.info('State saved successfully');\n    } catch (error) {\n      logger.error('Error saving state:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Find Git repositories in common directories\n   * @returns {Promise<Array>} - Array of repository objects\n   */\n  static async findRepositories() {\n    try {\n      const homeDir = os.homedir();\n      // Common places to find repositories\n      const commonDirs = [\n        path.join(homeDir, 'Documents'),\n        path.join(homeDir, 'Projects'),\n        path.join(homeDir, 'Development'),\n        path.join(homeDir, 'Code'),\n        path.join(homeDir, 'Github'),\n      ];\n\n      // Add the current directory to the list for testing\n      const currentDir = process.cwd();\n      commonDirs.push(path.dirname(currentDir));\n\n      logger.info('Searching for repositories in directories:', commonDirs);\n\n      const repositories = [];\n      const validDirs = [];\n\n      // First validate all directories before attempting to search them\n      for (const dir of commonDirs) {\n        if (validatePath(dir)) {\n          try {\n            // eslint-disable-next-line security/detect-non-literal-fs-filename\n            const dirStat = await fs.stat(dir).catch(() => null);\n            if (dirStat && dirStat.isDirectory()) {\n              validDirs.push(dir);\n            }\n          } catch (error) {\n            logger.warn(`Error checking directory ${dir}:`, error.message);\n          }\n        }\n      }\n\n      logger.info('Valid directories to search:', validDirs);\n\n      // Process each directory one by one (safer than parallel)\n      for (const dir of validDirs) {\n        try {\n          // Get subdirectories\n          // eslint-disable-next-line security/detect-non-literal-fs-filename\n          const items = await fs.readdir(dir, { withFileTypes: true }).catch((err) => {\n            logger.warn(`Error reading directory ${dir}:`, err.message);\n            return [];\n          });\n\n          if (!items || !items.length) continue;\n\n          const subdirs = items\n            .filter((item) => item.isDirectory())\n            .map((item) => path.join(dir, item.name));\n\n          // Check each subdirectory for .git folder (with a reasonable limit)\n          const checkLimit = Math.min(subdirs.length, 25); // limit to 25 directories per parent\n          logger.info(`Checking ${checkLimit} subdirectories in ${dir}`);\n\n          for (let i = 0; i < checkLimit; i++) {\n            const subdir = subdirs[i];\n            try {\n              // Skip if path validation fails\n              if (!validatePath(subdir)) continue;\n\n              const gitDir = path.join(subdir, '.git');\n              if (!validatePath(gitDir)) continue;\n\n              // Check if .git directory exists\n              // eslint-disable-next-line security/detect-non-literal-fs-filename\n              const gitDirStat = await fs.stat(gitDir).catch(() => null);\n              if (!gitDirStat || !gitDirStat.isDirectory()) continue;\n\n              // It's a git repository - add it without doing any git operations that might hang\n              repositories.push({\n                path: subdir,\n                name: path.basename(subdir),\n              });\n            } catch (error) {\n              logger.warn(`Error checking repository ${subdir}:`, error.message);\n            }\n          }\n        } catch (error) {\n          logger.warn(`Error processing directory ${dir}:`, error.message);\n        }\n      }\n\n      logger.info(`Found ${repositories.length} repositories`);\n      return repositories;\n    } catch (error) {\n      logger.error('Error finding repositories:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Check if the given path is a valid Git repository\n   * @param {string} dirPath - Path to the directory\n   * @returns {Promise<boolean>} - True if valid Git repository\n   */\n  async isGitRepository(dirPath) {\n    try {\n      const git = simpleGit(dirPath);\n      return await git.checkIsRepo();\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Get the content of a file at a specific commit or branch\n   * @param {string} filePath - Path to the file\n   * @param {string} ref - Commit hash or branch name\n   * @returns {Promise<string>} - File content\n   */\n  async getFileContent(filePath, ref) {\n    try {\n      return await this.git.show([`${ref}:${filePath}`]);\n    } catch (error) {\n      logger.error(`Error getting file content for ${filePath} at ${ref}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get the commit history of a branch\n   * @param {string} branch - Branch name\n   * @param {number} [maxCount=100] - Maximum number of commits to retrieve\n   * @returns {Promise<Object>} - Commit history\n   */\n  async getCommitHistory(branch, maxCount = 100) {\n    try {\n      return await this.git.log({\n        maxCount,\n        branch,\n      });\n    } catch (error) {\n      logger.error('Error getting commit history:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get the status of the repository\n   * @returns {Promise<Object>} - Repository status\n   */\n  async getStatus() {\n    try {\n      return await this.git.status();\n    } catch (error) {\n      logger.error('Error getting git status:', error);\n      throw error;\n    }\n  }\n}\n\nmodule.exports = GitService;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/services/SecureGitService.js","messages":[{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class async method 'isValidRepo'.","line":42,"column":3,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":42,"endColumn":20},{"ruleId":"no-unused-vars","severity":2,"message":"'stderr' is defined but never used. Allowed unused args must match /^_/u.","line":59,"column":73,"nodeType":"Identifier","messageId":"unusedVar","endLine":59,"endColumn":79},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":59,"column":81,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":59,"endColumn":83},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":67,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":67,"endColumn":22,"fix":{"range":[1788,1794],"text":"(branch)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":68,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":68,"endColumn":25,"fix":{"range":[1831,1837],"text":"(branch)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":69,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":69,"endColumn":22,"fix":{"range":[1864,1870],"text":"(branch)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":73,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":73,"endColumn":23,"fix":{"range":[2015,2021],"text":"(branch)"}},{"ruleId":"no-unused-vars","severity":2,"message":"'stderr' is defined but never used. Allowed unused args must match /^_/u.","line":96,"column":64,"nodeType":"Identifier","messageId":"unusedVar","endLine":96,"endColumn":70},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":96,"column":72,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":96,"endColumn":74},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":104,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":104,"endColumn":23,"fix":{"range":[2864,2868],"text":"(line)"}},{"ruleId":"arrow-parens","severity":2,"message":"Expected parentheses around arrow function argument.","line":105,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"expectedParens","endLine":105,"endColumn":20,"fix":{"range":[2900,2904],"text":"(line)"}},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":122,"column":5,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":128,"endColumn":6},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":124,"column":9,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":124,"endColumn":47},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found readdir from package \"fs\" with non literal argument at index 0","line":137,"column":29,"nodeType":"CallExpression","endLine":137,"endColumn":69},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":147,"column":7,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":151,"endColumn":8},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":149,"column":11,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":149,"endColumn":83}],"suppressedMessages":[],"errorCount":15,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":6,"fixableWarningCount":0,"source":"const path = require('path');\nconst os = require('os');\nconst fs = require('fs').promises;\nconst { exec } = require('child_process');\nconst logger = require('../utils/logger');\n\nclass SecureGitService {\n  constructor() {\n    this.currentRepoPath = null;\n    this.allowedDirectories = [\n      'Documents', 'Projects', 'Development', 'Code',\n      'Github', 'repos', 'git', 'workspace', 'dev', 'Desktop',\n    ].map((dir) => path.join(os.homedir(), dir));\n  }\n\n  setRepositoryPath(repoPath) {\n    if (!repoPath) return false;\n\n    const expandedPath = repoPath.startsWith('~')\n      ? path.join(os.homedir(), repoPath.slice(1))\n      : repoPath;\n\n    const normalizedPath = path.normalize(expandedPath);\n\n    if (this.isPathAllowed(normalizedPath)) {\n      this.currentRepoPath = normalizedPath;\n      return true;\n    }\n\n    logger.warn(`Attempted access to unauthorized path: ${normalizedPath}`);\n    return false;\n  }\n\n  getRepositoryPath() {\n    return this.currentRepoPath;\n  }\n\n  isPathAllowed(pathToCheck) {\n    return this.allowedDirectories.some((dir) => pathToCheck.startsWith(dir) && !pathToCheck.includes('..'));\n  }\n\n  async isValidRepo(repoPath) {\n    if (!repoPath) return false;\n    try {\n      const gitDir = path.join(repoPath, '.git');\n      await fs.access(gitDir);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  async getBranches() {\n    if (!this.currentRepoPath) {\n      throw new Error('No repository selected');\n    }\n\n    return new Promise((resolve, reject) => {\n      exec('git branch', { cwd: this.currentRepoPath }, (error, stdout, stderr) => {\n        if (error) {\n          logger.error(`Error getting branches: ${error.message}`);\n          return reject(error);\n        }\n\n        const all = stdout\n          .split('\\n')\n          .map(branch => branch.trim())\n          .filter(branch => branch)\n          .map(branch => branch.replace('* ', '')); // Remove the asterisk from current branch\n\n        const current = stdout\n          .split('\\n')\n          .find(branch => branch.trim().startsWith('* '));\n\n        const currentBranch = current ? current.replace('* ', '').trim() : '';\n\n        resolve({\n          all,\n          current: currentBranch,\n        });\n      });\n    });\n  }\n\n  async getDiff(fromBranch, toBranch) {\n    if (!this.currentRepoPath) {\n      throw new Error('No repository selected');\n    }\n\n    if (!fromBranch || !toBranch) {\n      throw new Error('Both branches must be specified');\n    }\n\n    return new Promise((resolve, reject) => {\n      const cmd = `git diff --name-status ${fromBranch}..${toBranch}`;\n      exec(cmd, { cwd: this.currentRepoPath }, (error, stdout, stderr) => {\n        if (error) {\n          logger.error(`Error getting diff: ${error.message}`);\n          return reject(error);\n        }\n\n        const changes = stdout\n          .split('\\n')\n          .filter(line => line.trim())\n          .map(line => {\n            const [status, file] = line.split('\\t');\n            return { status, file };\n          });\n\n        resolve(changes);\n      });\n    });\n  }\n\n  static async findRepositories() {\n    const repos = [];\n    const searchDirs = [\n      'Documents', 'Projects', 'Development', 'Code',\n      'Github', 'repos', 'git', 'workspace', 'dev', 'Desktop',\n    ].map((dir) => path.join(os.homedir(), dir));\n\n    for (const dir of searchDirs) {\n      try {\n        await this.searchDirectory(dir, repos);\n      } catch (error) {\n        logger.error(`Error searching directory ${dir}:`, error);\n      }\n    }\n\n    return repos;\n  }\n\n  static async searchDirectory(dir, repos, depth = 0) {\n    if (depth > 3) return;\n\n    try {\n      const entries = await fs.readdir(dir, { withFileTypes: true });\n\n      if (entries.some((entry) => entry.name === '.git')) {\n        repos.push({\n          path: dir,\n          name: path.basename(dir),\n        });\n        return;\n      }\n\n      for (const entry of entries) {\n        if (entry.isDirectory() && !entry.name.startsWith('.')) {\n          await this.searchDirectory(path.join(dir, entry.name), repos, depth + 1);\n        }\n      }\n    } catch (error) {\n      logger.debug(`Skipping inaccessible directory ${dir}`);\n    }\n  }\n}\n\nmodule.exports = SecureGitService;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/utils/coverage-tracker.js","messages":[{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":20,"column":5,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":26,"endColumn":6},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":35,"column":13,"nodeType":"CallExpression","endLine":35,"endColumn":77},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found writeFile from package \"fs\" with non literal argument at index 0","line":46,"column":13,"nodeType":"CallExpression","endLine":46,"endColumn":77}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs').promises;\nconst path = require('path');\nconst logger = require('./logger');\n\nclass CoverageTracker {\n  constructor() {\n    this.coverageData = new Map();\n    this.summaryPath = path.join(__dirname, '../../coverage/summary.json');\n    this.historyPath = path.join(__dirname, '../../coverage/history.json');\n  }\n\n  async trackCoverage(testResults) {\n    const timestamp = new Date().toISOString();\n    const coverage = {\n      timestamp,\n      overall: testResults.coverageMap.getCoverageSummary(),\n      files: new Map(),\n    };\n\n    for (const [filePath, fileCoverage] of Object.entries(testResults.coverageMap.data)) {\n      coverage.files.set(filePath, {\n        statements: fileCoverage.getLineCoverage(),\n        branches: fileCoverage.getBranchCoverage(),\n        functions: fileCoverage.getFunctionCoverage(),\n      });\n    }\n\n    this.coverageData.set(timestamp, coverage);\n    await this.saveCoverageData();\n  }\n\n  async saveCoverageData() {\n    try {\n      const summary = this.generateSummary();\n      await fs.writeFile(this.summaryPath, JSON.stringify(summary, null, 2));\n\n      const history = Array.from(this.coverageData.entries()).map(([timestamp, data]) => ({\n        timestamp,\n        coverage: {\n          statements: data.overall.statements.pct,\n          branches: data.overall.branches.pct,\n          functions: data.overall.functions.pct,\n        },\n      }));\n\n      await fs.writeFile(this.historyPath, JSON.stringify(history, null, 2));\n    } catch (error) {\n      logger.error('Error saving coverage data:', error);\n    }\n  }\n\n  generateSummary() {\n    const latest = Array.from(this.coverageData.values()).pop();\n    if (!latest) return null;\n\n    return {\n      timestamp: new Date().toISOString(),\n      overall: {\n        statements: latest.overall.statements.pct,\n        branches: latest.overall.branches.pct,\n        functions: latest.overall.functions.pct,\n      },\n      files: Array.from(latest.files.entries()).map(([file, coverage]) => ({\n        file: path.relative(process.cwd(), file),\n        coverage,\n      })),\n    };\n  }\n\n  getFileCoverage(filePath) {\n    const latest = Array.from(this.coverageData.values()).pop();\n    return latest?.files.get(filePath) || null;\n  }\n\n  getOverallCoverage() {\n    const latest = Array.from(this.coverageData.values()).pop();\n    return latest?.overall || null;\n  }\n\n  getCoverageHistory() {\n    return Array.from(this.coverageData.entries())\n      .map(([timestamp, data]) => ({\n        timestamp,\n        coverage: {\n          statements: data.overall.statements.pct,\n          branches: data.overall.branches.pct,\n          functions: data.overall.functions.pct,\n        },\n      }));\n  }\n}\n\nmodule.exports = new CoverageTracker();\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/utils/logger.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'config' is assigned a value but never used.","line":4,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":13},{"ruleId":"no-unused-vars","severity":2,"message":"'consoleFormat' is assigned a value but never used.","line":16,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":20},{"ruleId":"no-unused-vars","severity":2,"message":"'machineFormat' is assigned a value but never used.","line":54,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":54,"endColumn":20}],"suppressedMessages":[{"ruleId":"no-unused-vars","severity":2,"message":"'logFormat' is assigned a value but never used.","line":8,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const winston = require('winston');\nconst path = require('path');\nconst chalk = require('chalk');\nconst config = require('../config');\n\n// Define log format\n// eslint-disable-next-line no-unused-vars\nconst logFormat = winston.format.combine(\n  winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),\n  winston.format.errors({ stack: true }),\n  winston.format.splat(),\n  winston.format.json(),\n);\n\n// Custom formatter for console with enhanced colors using chalk\nconst consoleFormat = winston.format.combine(\n  winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),\n  winston.format.printf(({\n    level, message, timestamp, ...meta\n  }) => {\n    // Define color scheme for different log levels\n    const colorize = (text, lvl) => {\n      switch (lvl) {\n        case 'error':\n          return chalk.bold.red(text);\n        case 'warn':\n          return chalk.keyword('orange')(text);\n        case 'info':\n          return chalk.bold.blue(text);\n        case 'http':\n          return chalk.magenta(text);\n        case 'verbose':\n          return chalk.cyan(text);\n        case 'debug':\n          return chalk.green(text);\n        case 'silly':\n          return chalk.grey(text);\n        default:\n          return text;\n      }\n    };\n\n    const colorizedLevel = colorize(level.toUpperCase(), level);\n    const colorizedTimestamp = chalk.gray(timestamp);\n    const metadata = Object.keys(meta).length\n      ? chalk.gray(JSON.stringify(meta, null, 2))\n      : '';\n\n    return `${colorizedTimestamp} ${colorizedLevel}: ${message} ${metadata}`;\n  }),\n);\n\n// Add a new format for machine-readable output\nconst machineFormat = winston.format.printf(({\n  level, message, _timestamp, file, line, column, ...meta\n}) => {\n  // Default to logger.js if no file is specified\n  const sourceFile = file || 'logger.js';\n  const sourceLine = line || '1';\n  const sourceColumn = column || '1';\n\n  return `${sourceFile}:${sourceLine}:${sourceColumn}: ${level} ${message} ${Object.keys(meta).length ? JSON.stringify(meta) : ''\n  }`;\n});\n\n// Create the logger\nconst logger = winston.createLogger({\n  level: process.env.LOG_LEVEL || 'info',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.splat(),\n    winston.format.json(),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: path.join('logs', 'error.log'),\n      level: 'error',\n    }),\n    new winston.transports.File({\n      filename: path.join('logs', 'combined.log'),\n    }),\n  ],\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  logger.add(new winston.transports.Console({\n    format: winston.format.combine(\n      winston.format.colorize(),\n      winston.format.simple(),\n    ),\n  }));\n}\n\n// Add source location tracking\nconst addSourceLocation = (file, line, column) => (message, meta = {}) => ({\n  ...meta,\n  file,\n  line,\n  column,\n  message,\n});\n\n// Enhance logging methods with source tracking\nconst enhanceLogger = (originalLogger) => {\n  const enhanced = { ...originalLogger };\n\n  ['error', 'warn', 'info', 'http', 'debug'].forEach((level) => {\n    enhanced[level] = (message, meta = {}) => {\n      const error = new Error();\n      const stack = error.stack.split('\\n')[2];\n      const match = stack.match(/\\((.+):(\\d+):(\\d+)\\)$/);\n      if (match) {\n        const [, file, line, column] = match;\n        const sourceLocation = addSourceLocation(file, line, column);\n        return originalLogger[level](message, sourceLocation(message, meta));\n      }\n      return originalLogger[level](message, meta);\n    };\n  });\n\n  return enhanced;\n};\n\n// Add convenience methods for styled logging\nlogger.success = (message, meta = {}) => {\n  logger.info(`✅ ${message}`, meta);\n};\n\nlogger.important = (message, meta = {}) => {\n  logger.info(`⚠️ ${message}`, meta);\n};\n\nlogger.highlight = (message, meta = {}) => {\n  logger.info(`🔍 ${message}`, meta);\n};\n\nlogger.section = (title, meta = {}) => {\n  logger.info(`\\n=== ${title} ===\\n`, meta);\n};\n\nlogger.table = (data, meta = {}) => {\n  if (Array.isArray(data)) {\n    logger.info(`\\n${JSON.stringify(data, null, 2)}`, meta);\n  } else {\n    logger.info(data, meta);\n  }\n};\n\n// Export the enhanced logger\nmodule.exports = enhanceLogger(logger);\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/utils/monitoring.js","messages":[{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":12,"column":48,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":12,"endColumn":49},{"ruleId":"no-mixed-operators","severity":2,"message":"Unexpected mix of '/' and '*'. Use parentheses to clarify the intended order of operations.","line":12,"column":64,"nodeType":"BinaryExpression","messageId":"unexpectedMixedOperator","endLine":12,"endColumn":65}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const os = require('os');\nconst logger = require('./logger');\n\nclass MonitoringUtils {\n  static getSystemMetrics() {\n    const metrics = {\n      timestamp: new Date().toISOString(),\n      memory: {\n        total: os.totalmem(),\n        free: os.freemem(),\n        used: os.totalmem() - os.freemem(),\n        usage: ((os.totalmem() - os.freemem()) / os.totalmem() * 100).toFixed(2),\n      },\n      cpu: {\n        loadAvg: os.loadavg(),\n        cpus: os.cpus().length,\n      },\n      uptime: os.uptime(),\n    };\n\n    // Add process-specific metrics\n    metrics.process = {\n      memory: process.memoryUsage(),\n      uptime: process.uptime(),\n      pid: process.pid,\n    };\n\n    return metrics;\n  }\n\n  static logSystemMetrics(interval = 300000) { // Default: 5 minutes\n    const logMetrics = () => {\n      const metrics = this.getSystemMetrics();\n      logger.info('System Metrics:', metrics);\n\n      // Alert on high memory usage\n      if (metrics.memory.usage > 90) {\n        logger.warn('High memory usage detected:', metrics.memory);\n      }\n\n      // Alert on high CPU load\n      if (metrics.cpu.loadAvg[0] > metrics.cpu.cpus * 0.8) {\n        logger.warn('High CPU load detected:', metrics.cpu);\n      }\n    };\n\n    logMetrics(); // Initial log\n    return setInterval(logMetrics, interval);\n  }\n\n  static getProcessMetrics() {\n    const usage = process.memoryUsage();\n    return {\n      heapTotal: usage.heapTotal,\n      heapUsed: usage.heapUsed,\n      rss: usage.rss,\n      external: usage.external,\n      uptime: process.uptime(),\n    };\n  }\n\n  static async checkHealth() {\n    const metrics = this.getSystemMetrics();\n    const health = {\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      metrics: {\n        memory: metrics.memory,\n        cpu: metrics.cpu,\n      },\n    };\n\n    // Check memory usage\n    if (metrics.memory.usage > 90) {\n      health.status = 'unhealthy';\n      health.issues = ['High memory usage'];\n    }\n\n    // Check CPU load\n    if (metrics.cpu.loadAvg[0] > metrics.cpu.cpus * 0.8) {\n      health.status = health.status === 'healthy' ? 'degraded' : 'unhealthy';\n      health.issues = health.issues || [];\n      health.issues.push('High CPU load');\n    }\n\n    return health;\n  }\n}\n\nmodule.exports = MonitoringUtils;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/utils/performance-analyzer.js","messages":[{"ruleId":"max-len","severity":2,"message":"This line has a length of 105. Maximum allowed is 100.","line":70,"column":1,"nodeType":"Program","messageId":"max","endLine":70,"endColumn":106},{"ruleId":"max-len","severity":2,"message":"This line has a length of 109. Maximum allowed is 100.","line":72,"column":1,"nodeType":"Program","messageId":"max","endLine":72,"endColumn":110},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":330,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":330,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[9161,9182],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Performance Analyzer\n *\n * This utility demonstrates the performance benefits of using Lodash and Async\n * by comparing standard JavaScript operations with optimized versions.\n */\n\nconst _ = require('lodash');\nconst async = require('async');\nconst chalk = require('chalk');\nconst fs = require('fs');\nconst path = require('path');\nconst { performance } = require('perf_hooks');\nconst winston = require('winston');\nconst logger = require('./logger');\n\n// Create reports directory if it doesn't exist\nconst reportsDir = path.join(__dirname, '..', '..', 'reports');\nif (!fs.existsSync(reportsDir)) {\n  fs.mkdirSync(reportsDir, { recursive: true });\n}\n\n// Logger setup\nconst log = {\n  info: (message) => winston.info(message),\n  success: (message) => winston.info(chalk.green(message)),\n  error: (message) => winston.error(message),\n  warn: (message) => winston.warn(message),\n  result: (message) => winston.info(chalk.cyan(message)),\n  header: (message) => winston.info(chalk.bold.white(`\\n=== ${message} ===`)),\n};\n\n/**\n * Run a performance test\n * @param {string} name - Test name\n * @param {Function} fn - Function to test\n * @param {number} iterations - Number of iterations\n * @returns {Object} Test results\n */\nconst runTest = async (name, fn, iterations = 1000) => {\n  log.info(`Running test: ${name} (${iterations} iterations)`);\n\n  const start = performance.now();\n  const result = await fn(iterations);\n  const end = performance.now();\n\n  const duration = end - start;\n  log.success(`Completed in ${duration.toFixed(2)}ms`);\n\n  return {\n    name,\n    duration,\n    iterations,\n    opsPerSecond: (iterations / (duration / 1000)).toFixed(2),\n    result,\n  };\n};\n\n/**\n * Compare standard vs optimized implementations\n * @param {string} testName - Test name\n * @param {Function} standardFn - Standard implementation\n * @param {Function} optimizedFn - Optimized implementation\n * @param {number} iterations - Number of iterations\n */\nconst compareImplementations = async (testName, standardFn, optimizedFn, iterations = 1000) => {\n  log.header(testName);\n\n  const standardResult = await runTest(`Standard ${testName}`, standardFn, iterations);\n  const optimizedResult = await runTest(`Optimized ${testName} (Lodash/Async)`, optimizedFn, iterations);\n\n  const improvement = ((standardResult.duration - optimizedResult.duration) / standardResult.duration) * 100;\n\n  log.result(`\\nPerformance improvement: ${improvement.toFixed(2)}%`);\n  log.result(`Standard: ${standardResult.opsPerSecond} ops/sec`);\n  log.result(`Optimized: ${optimizedResult.opsPerSecond} ops/sec`);\n\n  return {\n    testName,\n    standardResult,\n    optimizedResult,\n    improvement,\n  };\n};\n\n// Test 1: Array Manipulation\nconst arrayManipulationTest = async () => {\n  // Generate test data\n  const generateArray = (size) => Array.from({ length: size }, (unused, index) => ({\n    id: index,\n    value: Math.random() * 1000,\n    name: `Item ${index}`,\n    active: Math.random() > 0.5,\n  }));\n\n  const arraySize = 10000;\n  const testArray = generateArray(arraySize);\n\n  // Standard implementation\n  const standardArrayManipulation = async (iterations) => {\n    const results = [];\n\n    for (let i = 0; i < iterations; i += 1) {\n      // Filter, map, and sort operations\n      const filtered = testArray.filter((item) => item.active);\n      const mapped = filtered.map((item) => ({\n        id: item.id,\n        formattedValue: `$${item.value.toFixed(2)}`,\n      }));\n      const sorted = mapped.sort((a, b) => a.id - b.id);\n\n      // Group by ranges\n      const grouped = {};\n      sorted.forEach((item) => {\n        const range = Math.floor(item.id / 1000) * 1000;\n        if (!grouped[range]) {\n          grouped[range] = [];\n        }\n        grouped[range].push(item);\n      });\n\n      results.push(Object.keys(grouped).length);\n    }\n\n    return results.length;\n  };\n\n  // Optimized implementation with Lodash\n  const optimizedArrayManipulation = async (iterations) => {\n    const results = [];\n    const optimizedTestArray = generateArray(1000);\n\n    for (let i = 0; i < iterations; i += 1) {\n      // Chained operations with Lodash\n      const processed = _(optimizedTestArray)\n        .filter('active')\n        .map((item) => ({ ...item, score: item.value * 2 }))\n        .sortBy('score')\n        .value();\n\n      results.push(processed.length);\n    }\n\n    return results;\n  };\n\n  return compareImplementations(\n    'Array Manipulation',\n    standardArrayManipulation,\n    optimizedArrayManipulation,\n    50, // Fewer iterations for this intensive test\n  );\n};\n\n// Test 2: Parallel Processing\nconst parallelProcessingTest = async () => {\n  // Simulate an async operation\n  const simulateAsyncOperation = (id) => new Promise((resolve) => {\n    const delay = Math.random() * 20; // Random delay up to 20ms\n    setTimeout(() => {\n      resolve({ id, processedAt: Date.now() });\n    }, delay);\n  });\n\n  // Generate test data - IDs to process\n  const items = Array.from({ length: 100 }, (unused, i) => i);\n\n  // Standard implementation - sequential processing\n  const standardParallelProcessing = async () => {\n    const tasks = Array.from({ length: 10 }, (unused, i) => simulateAsyncOperation(i));\n    return Promise.all(tasks);\n  };\n\n  // Optimized implementation with Async\n  const optimizedParallelProcessing = async () => {\n    const results = await async.mapLimit(\n      items,\n      10, // Concurrency limit\n      async (item) => simulateAsyncOperation(item),\n    );\n\n    return results.length;\n  };\n\n  return compareImplementations(\n    'Parallel Processing',\n    standardParallelProcessing,\n    optimizedParallelProcessing,\n    5, // Fewer iterations due to the nature of the test\n  );\n};\n\n// Test 3: Object Manipulation\nconst objectManipulationTest = async () => {\n  // Generate test data\n  const generateNestedObject = (depth, breadth) => {\n    if (depth === 0) {\n      return { value: Math.random() * 1000 };\n    }\n\n    const obj = {};\n    for (let i = 0; i < breadth; i += 1) {\n      obj[`prop${i}`] = generateNestedObject(depth - 1, breadth);\n    }\n\n    return obj;\n  };\n\n  const testObject = generateNestedObject(3, 5);\n\n  // Standard implementation\n  const standardObjectManipulation = async (iterations) => {\n    const results = [];\n\n    for (let i = 0; i < iterations; i += 1) {\n      // Deep clone\n      const cloned = JSON.parse(JSON.stringify(testObject));\n\n      // Merge with another object\n      const merged = {\n        ...cloned,\n        additionalProp: {\n          name: 'test',\n          values: [1, 2, 3],\n        },\n      };\n\n      // Extract values\n      const extractValues = (obj, result = []) => {\n        if (obj.value !== undefined) {\n          result.push(obj.value);\n          return result;\n        }\n\n        Object.values(obj).forEach((val) => {\n          if (typeof val === 'object') {\n            extractValues(val, result);\n          }\n        });\n\n        return result;\n      };\n\n      const values = extractValues(merged);\n      results.push(values.length);\n    }\n\n    return results.length;\n  };\n\n  // Optimized implementation with Lodash\n  const optimizedObjectManipulation = async (iterations) => {\n    const results = [];\n\n    for (let i = 0; i < iterations; i += 1) {\n      // Deep clone with Lodash\n      const cloned = _.cloneDeep(testObject);\n\n      // Merge with Lodash\n      const merged = _.merge({}, cloned, {\n        additionalProp: {\n          name: 'test',\n          values: [1, 2, 3],\n        },\n      });\n\n      // Extract values with Lodash\n      const values = [];\n      _.forEach(merged, function iterateValues(val) {\n        if (_.has(val, 'value')) {\n          values.push(val.value);\n        } else if (_.isObject(val)) {\n          _.forEach(val, iterateValues);\n        }\n      });\n\n      results.push(values.length);\n    }\n\n    return results.length;\n  };\n\n  return compareImplementations(\n    'Object Manipulation',\n    standardObjectManipulation,\n    optimizedObjectManipulation,\n    100, // Fewer iterations for this intensive test\n  );\n};\n\n// Run all tests and generate report\nconst runAllTests = async () => {\n  log.header('PERFORMANCE ANALYSIS');\n  log.info('Comparing standard JavaScript vs Lodash/Async optimized implementations\\n');\n\n  const results = [];\n  let totalImprovement = 0;\n\n  try {\n    results.push(await arrayManipulationTest());\n    results.push(await parallelProcessingTest());\n    results.push(await objectManipulationTest());\n\n    // Generate summary\n    log.header('SUMMARY');\n\n    results.forEach((result) => {\n      log.result(`${result.testName}: ${result.improvement.toFixed(2)}% improvement`);\n      totalImprovement += result.improvement;\n    });\n\n    // Save report to file\n    const report = {\n      timestamp: new Date().toISOString(),\n      results,\n      summary: {\n        averageImprovement: (totalImprovement / results.length).toFixed(2),\n        tests: results.length,\n      },\n    };\n\n    fs.writeFileSync(\n      path.join(reportsDir, 'performance-report.json'),\n      JSON.stringify(report, null, 2),\n    );\n\n    log.success('\\nPerformance report saved to reports/performance-report.json');\n  } catch (error) {\n    log.error(`Error running tests: ${error.message}`);\n    console.error(error);\n  }\n};\n\n// Execute if run directly\nif (require.main === module) {\n  runAllTests();\n}\n\nmodule.exports = {\n  runTest,\n  compareImplementations,\n  runAllTests,\n};\n\nclass PerformanceAnalyzer {\n  constructor() {\n    this.measurements = new Map();\n  }\n\n  async measure(operation, fn) {\n    const start = process.hrtime.bigint();\n    try {\n      const result = await fn();\n      const end = process.hrtime.bigint();\n      this.recordMeasurement(operation, end - start);\n      return { result, duration: Number(end - start) / 1_000_000 };\n    } catch (error) {\n      logger.error(`Error in operation ${operation}:`, error);\n      throw error;\n    }\n  }\n\n  measureSync(operation, fn) {\n    const start = process.hrtime.bigint();\n    try {\n      const result = fn();\n      const end = process.hrtime.bigint();\n      this.recordMeasurement(operation, end - start);\n      return { result, duration: Number(end - start) / 1_000_000 };\n    } catch (error) {\n      logger.error(`Error in sync operation ${operation}:`, error);\n      throw error;\n    }\n  }\n\n  recordMeasurement(operation, duration) {\n    if (!this.measurements.has(operation)) {\n      this.measurements.set(operation, {\n        count: 0,\n        totalTime: BigInt(0),\n        durations: [],\n      });\n    }\n\n    const stats = this.measurements.get(operation);\n    stats.count += 1;\n    stats.totalTime += duration;\n    stats.durations.push(Number(duration));\n  }\n\n  getMetrics(operation) {\n    const stats = this.measurements.get(operation);\n    if (!stats) return null;\n\n    const durations = stats.durations.sort((a, b) => a - b);\n    const p95Index = Math.floor(durations.length * 0.95);\n    const p99Index = Math.floor(durations.length * 0.99);\n\n    return {\n      count: stats.count,\n      totalTime: Number(stats.totalTime) / 1_000_000,\n      avgTime: Number(stats.totalTime) / (stats.count * 1_000_000),\n      min: Math.min(...durations) / 1_000_000,\n      max: Math.max(...durations) / 1_000_000,\n      p95: durations[p95Index] / 1_000_000,\n      p99: durations[p99Index] / 1_000_000,\n    };\n  }\n\n  getStats() {\n    const stats = {};\n    this.measurements.forEach((value, key) => {\n      stats[key] = {\n        count: value.count,\n        totalTime: Number(value.totalTime) / 1_000_000,\n        avgTime: Number(value.totalTime) / (value.count * 1_000_000),\n      };\n    });\n    return stats;\n  }\n\n  reset(operation) {\n    if (operation) {\n      this.measurements.delete(operation);\n    } else {\n      this.measurements.clear();\n    }\n  }\n}\n\nmodule.exports = PerformanceAnalyzer;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/utils/performance.js","messages":[],"suppressedMessages":[{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":161,"column":26,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":161,"endColumn":53,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/src/utils/validation.js","messages":[{"ruleId":"no-control-regex","severity":2,"message":"Unexpected control character(s) in regular expression: \\x00.","line":20,"column":26,"nodeType":"Literal","messageId":"unexpected","endLine":20,"endColumn":53}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const path = require('path');\nconst os = require('os');\nconst config = require('../config');\n\nclass ValidationUtils {\n  static isValidPath(filePath) {\n    if (!filePath) return false;\n\n    const normalizedPath = path.normalize(filePath);\n    if (normalizedPath.includes('..')) return false;\n\n    const { allowedDirs } = config.git;\n    return allowedDirs.some((dir) => normalizedPath.startsWith(dir));\n  }\n\n  static isValidBranchName(branchName) {\n    if (!branchName || typeof branchName !== 'string') return false;\n\n    // Git branch naming rules\n    const invalidChars = /[\\x00-\\x20\\x7F~^:?*[\\\\\\]]/;\n    const reservedNames = /^[-@]|[.][.]|[.]$|^[/]|[/]$|[/]{2}|@{|^@$/;\n\n    return !invalidChars.test(branchName) && !reservedNames.test(branchName);\n  }\n\n  static sanitizePath(filePath) {\n    if (!filePath) return '';\n\n    // Expand tilde to home directory\n    const expandedPath = filePath.startsWith('~')\n      ? path.join(os.homedir(), filePath.slice(1))\n      : filePath;\n\n    return path.normalize(expandedPath);\n  }\n\n  static validateRepositoryRequest(req) {\n    const errors = [];\n\n    if (!req.body.path) {\n      errors.push('Repository path is required');\n    } else if (!this.isValidPath(req.body.path)) {\n      errors.push('Invalid repository path');\n    }\n\n    return errors;\n  }\n\n  static validateDiffRequest(req) {\n    const errors = [];\n\n    if (!req.body.fromBranch) {\n      errors.push('Source branch is required');\n    } else if (!this.isValidBranchName(req.body.fromBranch)) {\n      errors.push('Invalid source branch name');\n    }\n\n    if (!req.body.toBranch) {\n      errors.push('Target branch is required');\n    } else if (!this.isValidBranchName(req.body.toBranch)) {\n      errors.push('Invalid target branch name');\n    }\n\n    return errors;\n  }\n\n  static isValidGitOperation(operation) {\n    const allowedOperations = [\n      'status',\n      'branch',\n      'checkout',\n      'pull',\n      'fetch',\n      'diff',\n    ];\n    return allowedOperations.includes(operation);\n  }\n}\n\nmodule.exports = ValidationUtils;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/helpers/setup.js","messages":[{"ruleId":"node/no-unpublished-require","severity":2,"message":"\"fs-extra\" is not published.","line":2,"column":20,"nodeType":"Literal","endLine":2,"endColumn":30},{"ruleId":"no-restricted-syntax","severity":2,"message":"iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","line":13,"column":3,"nodeType":"ForOfStatement","messageId":"restrictedSyntax","endLine":15,"endColumn":4},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":14,"column":5,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":14,"endColumn":60}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const path = require('path');\nconst fs = require('fs-extra');\n\nconst setupTestEnv = async () => {\n  // Ensure test directories exist\n  const testDirs = [\n    'coverage',\n    'coverage/lcov-report',\n    'logs',\n    'tests/fixtures',\n  ];\n\n  for (const dir of testDirs) {\n    await fs.ensureDir(path.join(__dirname, '../../', dir));\n  }\n\n  // Set up test environment variables\n  process.env.NODE_ENV = 'test';\n  process.env.LOG_LEVEL = 'error';\n};\n\nmodule.exports = setupTestEnv;\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/integration/api.test.js","messages":[{"ruleId":"node/no-unpublished-require","severity":2,"message":"\"mocha\" is not published.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":20},{"ruleId":"node/no-unpublished-require","severity":2,"message":"\"chai\" is not published.","line":4,"column":28,"nodeType":"Literal","endLine":4,"endColumn":34},{"ruleId":"node/no-unpublished-require","severity":2,"message":"\"supertest\" is not published.","line":5,"column":25,"nodeType":"Literal","endLine":5,"endColumn":36},{"ruleId":"node/no-unpublished-require","severity":2,"message":"\"fs-extra\" is not published.","line":7,"column":20,"nodeType":"Literal","endLine":7,"endColumn":30}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, it, before, after,\n} = require('mocha');\nconst { expect } = require('chai');\nconst request = require('supertest');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst app = require('../../src/app');\nconst GitService = require('../../src/services/GitService');\n\njest.mock('../../src/services/GitService');\n\ndescribe('API Integration Tests', () => {\n  const TEST_REPO_PATH = path.join(__dirname, '../fixtures/test-repo');\n  const testRepoPath = path.join(__dirname, '../fixtures/mock-repo');\n\n  before(async () => {\n    // Set up test repository\n    await fs.ensureDir(TEST_REPO_PATH);\n    // Initialize git repo and add test files\n  });\n\n  after(async () => {\n    // Clean up test repository\n    await fs.remove(TEST_REPO_PATH);\n  });\n\n  describe('Repository Endpoints', () => {\n    describe('GET /api/repositories', () => {\n      it('should return list of repositories', async () => {\n        const mockRepos = [\n          { path: '/test/repo1', name: 'repo1' },\n          { path: '/test/repo2', name: 'repo2' },\n        ];\n\n        GitService.findRepositories.mockResolvedValue(mockRepos);\n\n        const response = await request(app)\n          .get('/api/repositories')\n          .expect('Content-Type', /json/)\n          .expect(200);\n\n        expect(response.body).toEqual(mockRepos);\n      });\n\n      it('should handle errors', async () => {\n        GitService.findRepositories.mockRejectedValue(new Error('Test error'));\n\n        await request(app)\n          .get('/api/repositories')\n          .expect('Content-Type', /json/)\n          .expect(500)\n          .then((response) => {\n            expect(response.body.error).toBeDefined();\n          });\n      });\n    });\n\n    describe('POST /api/repository/set', () => {\n      const validRepoPath = path.join(__dirname, '../../');\n\n      beforeEach(() => {\n        GitService.prototype.isValidRepo = jest.fn().mockResolvedValue(true);\n        GitService.prototype.getBranches = jest.fn().mockResolvedValue({ all: ['main'] });\n        GitService.prototype.getCurrentBranch = jest.fn().mockResolvedValue('main');\n      });\n\n      it('should set repository path', async () => {\n        await request(app)\n          .post('/api/repository/set')\n          .send({ path: validRepoPath })\n          .expect('Content-Type', /json/)\n          .expect(200)\n          .then((response) => {\n            expect(response.body.path).toBe(validRepoPath);\n            expect(response.body.branches).toEqual(['main']);\n            expect(response.body.current).toBe('main');\n          });\n      });\n\n      it('should reject invalid repository path', async () => {\n        GitService.prototype.isValidRepo.mockResolvedValue(false);\n\n        await request(app)\n          .post('/api/repository/set')\n          .send({ path: '/invalid/path' })\n          .expect('Content-Type', /json/)\n          .expect(400)\n          .then((response) => {\n            expect(response.body.error).toBe('Not a valid git repository');\n          });\n      });\n    });\n\n    describe('GET /api/repository/branches', () => {\n      it('should return branches for current repository', async () => {\n        // First set the repository\n        await request(app)\n          .post('/api/repository/set')\n          .send({ path: testRepoPath });\n\n        const response = await request(app)\n          .get('/api/repository/branches')\n          .expect(200);\n\n        expect(response.body).to.have.property('branches');\n        expect(response.body).to.have.property('current');\n      });\n    });\n\n    describe('POST /api/diff/analyze', () => {\n      it('should analyze diff between branches', async () => {\n        // First set the repository\n        await request(app)\n          .post('/api/repository/set')\n          .send({ path: testRepoPath });\n\n        const response = await request(app)\n          .post('/api/diff/analyze')\n          .send({\n            fromBranch: 'main',\n            toBranch: 'develop',\n          })\n          .expect(200);\n\n        expect(response.body).to.have.property('analysis');\n      });\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/integration/services.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, beforeEach,\n} = require('@jest/globals');\nconst GitService = require('../../src/services/GitService');\nconst AnalyzerService = require('../../src/services/AnalyzerService');\nconst SecureGitService = require('../../src/services/SecureGitService');\n\ndescribe('Services Integration', () => {\n  let gitService;\n  let analyzerService;\n  let secureGitService;\n\n  beforeEach(() => {\n    gitService = new GitService();\n    analyzerService = new AnalyzerService();\n    secureGitService = new SecureGitService();\n  });\n\n  describe('Git Operations', () => {\n    it('should handle repository operations', async () => {\n      const repoPath = '/test/path';\n      gitService.setRepoPath(repoPath);\n      expect(gitService.repoPath).toBe(repoPath);\n    });\n  });\n\n  describe('Analysis Operations', () => {\n    it('should analyze diff content', async () => {\n      const diffContent = 'test diff content';\n      const result = await analyzerService.analyzeDiff(diffContent);\n      expect(result).toBeDefined();\n    });\n  });\n\n  describe('Security Operations', () => {\n    it('should validate paths', () => {\n      const validPath = '/valid/path';\n      const result = secureGitService.isPathAllowed(validPath);\n      expect(result).toBeDefined();\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/setup.js","messages":[{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found existsSync from package \"fs\" with non literal argument at index 0","line":8,"column":8,"nodeType":"CallExpression","endLine":8,"endColumn":30},{"ruleId":"security/detect-non-literal-fs-filename","severity":1,"message":"Found mkdirSync from package \"fs\" with non literal argument at index 0","line":9,"column":5,"nodeType":"CallExpression","endLine":9,"endColumn":47}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const path = require('path');\nconst fs = require('fs');\n\n// Create test directories if they don't exist\nconst testDirs = ['logs', 'data', 'coverage'];\ntestDirs.forEach((dir) => {\n  const dirPath = path.join(__dirname, '..', dir);\n  if (!fs.existsSync(dirPath)) {\n    fs.mkdirSync(dirPath, { recursive: true });\n  }\n});\n\n// Mock environment variables\nprocess.env.NODE_ENV = 'test';\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/app.test.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'jest' is assigned a value but never used.","line":2,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"node/no-unpublished-require","severity":2,"message":"\"supertest\" is not published.","line":4,"column":25,"nodeType":"Literal","endLine":4,"endColumn":36}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst request = require('supertest');\nconst express = require('express');\nconst app = require('../../src/app');\n\ndescribe('Express App', () => {\n  describe('Middleware Setup', () => {\n    it('should use CORS middleware', async () => {\n      const response = await request(app)\n        .options('/api/health')\n        .set('Origin', 'http://localhost:3000');\n\n      expect(response.headers['access-control-allow-origin']).toBe('http://localhost:3000');\n    });\n\n    it('should parse JSON bodies', async () => {\n      const response = await request(app)\n        .post('/api/test')\n        .send({ test: true });\n\n      expect(response.status).not.toBe(400);\n    });\n\n    it('should handle invalid JSON', async () => {\n      const response = await request(app)\n        .post('/api/test')\n        .set('Content-Type', 'application/json')\n        .send('invalid json');\n\n      expect(response.status).toBe(400);\n    });\n  });\n\n  describe('Error Handling', () => {\n    it('should handle 404 errors', async () => {\n      const response = await request(app)\n        .get('/non-existent-path');\n\n      expect(response.status).toBe(404);\n      expect(response.body).toHaveProperty('error');\n    });\n\n    it('should handle internal server errors', async () => {\n      const mockRouter = express.Router();\n      mockRouter.get('/error', () => {\n        throw new Error('Test error');\n      });\n      app.use(mockRouter);\n\n      const response = await request(app)\n        .get('/error');\n\n      expect(response.status).toBe(500);\n      expect(response.body).toHaveProperty('error');\n    });\n  });\n\n  describe('Health Check', () => {\n    it('should respond to health check', async () => {\n      const response = await request(app)\n        .get('/api/health');\n\n      expect(response.status).toBe(200);\n      expect(response.body).toHaveProperty('status', 'ok');\n    });\n  });\n\n  describe('Security Headers', () => {\n    it('should set security headers', async () => {\n      const response = await request(app)\n        .get('/api/health');\n\n      expect(response.headers['x-content-type-options']).toBe('nosniff');\n      expect(response.headers['x-frame-options']).toBe('DENY');\n      expect(response.headers['x-xss-protection']).toBe('1; mode=block');\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/controllers/diffController.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"no-unused-vars","severity":2,"message":"'AnalyzerService' is assigned a value but never used.","line":6,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst diffController = require('../../../src/controllers/diffController');\nconst GitService = require('../../../src/services/GitService');\nconst AnalyzerService = require('../../../src/services/AnalyzerService');\n\njest.mock('../../../src/services/GitService');\njest.mock('../../../src/services/AnalyzerService');\njest.mock('../../../src/utils/logger');\n\ndescribe('Diff Controller', () => {\n  describe('getDiff', () => {\n    it('should return diff between branches', async () => {\n      const mockDiff = 'test diff content';\n      const mockGitService = {\n        repoPath: '/test/repo',\n        getDiff: jest.fn().mockResolvedValue(mockDiff),\n      };\n\n      GitService.mockImplementation(() => mockGitService);\n\n      const req = {\n        body: {\n          fromBranch: 'main',\n          toBranch: 'develop',\n        },\n      };\n      const res = {\n        json: jest.fn(),\n        status: jest.fn().mockReturnThis(),\n      };\n\n      await diffController.getDiff(req, res);\n      expect(res.json).toHaveBeenCalledWith(expect.objectContaining({\n        diff: mockDiff,\n        fromBranch: 'main',\n        toBranch: 'develop',\n      }));\n    });\n  });\n\n  describe('analyzeDiff', () => {\n    // ... similar test setup for analyzeDiff ...\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/controllers/repositoryController.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest, beforeEach,\n} = require('@jest/globals');\nconst repositoryController = require('../../../src/controllers/repositoryController');\nconst GitService = require('../../../src/services/GitService');\n\njest.mock('../../../src/services/GitService');\njest.mock('../../../src/utils/logger');\n\ndescribe('Repository Controller', () => {\n  let req;\n  let res;\n\n  beforeEach(() => {\n    req = {\n      body: {},\n      params: {},\n    };\n    res = {\n      json: jest.fn(),\n      status: jest.fn().mockReturnThis(),\n    };\n    GitService.mockClear();\n  });\n\n  describe('getRepositories', () => {\n    it('should return list of repositories', async () => {\n      const mockRepos = [{ path: '/test/repo', name: 'test-repo' }];\n      GitService.findRepositories.mockResolvedValue(mockRepos);\n\n      await repositoryController.getRepositories(req, res);\n      expect(res.json).toHaveBeenCalledWith(mockRepos);\n    });\n\n    it('should handle errors', async () => {\n      GitService.findRepositories.mockRejectedValue(new Error('Test error'));\n      await repositoryController.getRepositories(req, res);\n      expect(res.status).toHaveBeenCalledWith(500);\n    });\n  });\n\n  describe('setRepository', () => {\n    beforeEach(() => {\n      req.body.path = '/test/repo';\n    });\n\n    it('should set repository path successfully', async () => {\n      const mockGitService = {\n        setRepoPath: jest.fn(),\n        isValidRepo: jest.fn().mockResolvedValue(true),\n        getBranches: jest.fn().mockResolvedValue({ all: ['main'] }),\n        getCurrentBranch: jest.fn().mockResolvedValue('main'),\n        saveState: jest.fn(),\n      };\n\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.setRepository(req, res);\n      expect(res.json).toHaveBeenCalledWith({\n        path: '/test/repo',\n        branches: ['main'],\n        current: 'main',\n      });\n    });\n\n    it('should handle invalid repository paths', async () => {\n      const mockGitService = {\n        isValidRepo: jest.fn().mockResolvedValue(false),\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.setRepository(req, res);\n      expect(res.status).toHaveBeenCalledWith(400);\n    });\n\n    it('should handle missing path parameter', async () => {\n      req.body = {};\n      await repositoryController.setRepository(req, res);\n      expect(res.status).toHaveBeenCalledWith(400);\n    });\n  });\n\n  describe('getBranches', () => {\n    it('should return branches for current repository', async () => {\n      const mockGitService = {\n        repoPath: '/test/repo',\n        getBranches: jest.fn().mockResolvedValue({ all: ['main'] }),\n        getCurrentBranch: jest.fn().mockResolvedValue('main'),\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.getBranches(req, res);\n      expect(res.json).toHaveBeenCalledWith({\n        branches: ['main'],\n        current: 'main',\n      });\n    });\n\n    it('should handle no repository selected', async () => {\n      const mockGitService = {\n        repoPath: null,\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.getBranches(req, res);\n      expect(res.status).toHaveBeenCalledWith(400);\n    });\n  });\n\n  describe('getRepositoryInfo', () => {\n    it('should return repository info', async () => {\n      const mockGitService = {\n        repoPath: '/test/repo',\n        getBranches: jest.fn().mockResolvedValue({ all: ['main'] }),\n        getCurrentBranch: jest.fn().mockResolvedValue('main'),\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.getRepositoryInfo(req, res);\n      expect(res.json).toHaveBeenCalledWith({\n        path: '/test/repo',\n        name: 'repo',\n        branches: ['main'],\n        current: 'main',\n      });\n    });\n\n    it('should handle errors', async () => {\n      const mockGitService = {\n        repoPath: '/test/repo',\n        getBranches: jest.fn().mockRejectedValue(new Error('Test error')),\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.getRepositoryInfo(req, res);\n      expect(res.status).toHaveBeenCalledWith(500);\n    });\n  });\n\n  describe('error handling', () => {\n    it('should handle missing repository path', async () => {\n      req.body = {};\n      await repositoryController.setRepository(req, res);\n\n      expect(res.status).toHaveBeenCalledWith(400);\n      expect(res.json).toHaveBeenCalledWith(\n        expect.objectContaining({ error: 'Repository path is required' }),\n      );\n    });\n\n    it('should handle invalid repository path', async () => {\n      req.body.path = '/invalid/path';\n      const mockGitService = {\n        isValidRepo: jest.fn().mockResolvedValue(false),\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.setRepository(req, res);\n\n      expect(res.status).toHaveBeenCalledWith(400);\n      expect(res.json).toHaveBeenCalledWith(\n        expect.objectContaining({ error: 'Not a valid git repository' }),\n      );\n    });\n\n    it('should handle getBranches with no repository selected', async () => {\n      const mockGitService = {\n        repoPath: null,\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.getBranches(req, res);\n\n      expect(res.status).toHaveBeenCalledWith(400);\n      expect(res.json).toHaveBeenCalledWith(\n        expect.objectContaining({ error: 'No repository selected' }),\n      );\n    });\n  });\n\n  describe('tilde expansion', () => {\n    it('should handle tilde paths correctly', async () => {\n      req.body.path = '~/Documents/repo';\n      const mockGitService = {\n        isValidRepo: jest.fn().mockResolvedValue(true),\n        getBranches: jest.fn().mockResolvedValue({ all: ['main'] }),\n        getCurrentBranch: jest.fn().mockResolvedValue('main'),\n      };\n      GitService.mockImplementation(() => mockGitService);\n\n      await repositoryController.setRepository(req, res);\n\n      expect(mockGitService.setRepoPath).toHaveBeenCalledWith(\n        expect.stringContaining('/Documents/repo'),\n      );\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/middleware/cors.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst cors = require('cors');\nconst corsMiddleware = require('../../../src/middleware/cors');\nconst config = require('../../../src/config');\n\njest.mock('cors', () => jest.fn(() => (req, res, next) => next()));\n\ndescribe('CORS Middleware', () => {\n  it('should configure cors with correct options', () => {\n    expect(cors).toHaveBeenCalledWith({\n      origin: config.cors.origin,\n      methods: config.cors.methods,\n      allowedHeaders: config.cors.allowedHeaders,\n      credentials: config.cors.credentials,\n      optionsSuccessStatus: 200,\n    });\n  });\n\n  it('should be a function', () => {\n    expect(typeof corsMiddleware).toBe('function');\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/middleware/errorHandler.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"no-unused-vars","severity":2,"message":"'logger' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":13},{"ruleId":"no-shadow","severity":2,"message":"'logger' is already declared in the upper scope on line 5 column 7.","line":77,"column":11,"nodeType":"Identifier","messageId":"noShadow","endLine":77,"endColumn":17},{"ruleId":"global-require","severity":2,"message":"Unexpected require().","line":77,"column":20,"nodeType":"CallExpression","messageId":"unexpected","endLine":77,"endColumn":56},{"ruleId":"no-shadow","severity":2,"message":"'req' is already declared in the upper scope on line 12 column 7.","line":97,"column":13,"nodeType":"Identifier","messageId":"noShadow","endLine":97,"endColumn":16},{"ruleId":"no-shadow","severity":2,"message":"'res' is already declared in the upper scope on line 13 column 7.","line":98,"column":13,"nodeType":"Identifier","messageId":"noShadow","endLine":98,"endColumn":16},{"ruleId":"no-shadow","severity":2,"message":"'req' is already declared in the upper scope on line 12 column 7.","line":115,"column":13,"nodeType":"Identifier","messageId":"noShadow","endLine":115,"endColumn":16},{"ruleId":"no-shadow","severity":2,"message":"'res' is already declared in the upper scope on line 13 column 7.","line":116,"column":13,"nodeType":"Identifier","messageId":"noShadow","endLine":116,"endColumn":16}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst errorHandler = require('../../../src/middleware/errorHandler');\nconst logger = require('../../../src/utils/logger');\n\njest.mock('../../../src/utils/logger', () => ({\n  error: jest.fn(),\n}));\n\ndescribe('Error Handler Middleware', () => {\n  let req;\n  let res;\n  let next;\n\n  beforeEach(() => {\n    req = {\n      path: '/test',\n      method: 'GET',\n    };\n    res = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn(),\n    };\n    next = jest.fn();\n  });\n\n  it('should handle errors in development mode', () => {\n    const err = new Error('Test error');\n    err.status = 400;\n    process.env.NODE_ENV = 'development';\n\n    errorHandler(err, req, res, next);\n\n    expect(res.status).toHaveBeenCalledWith(400);\n    expect(res.json).toHaveBeenCalledWith({\n      error: 'Internal Server Error',\n      message: 'Test error',\n      stack: expect.any(String),\n    });\n  });\n\n  it('should handle errors in production mode', () => {\n    const err = new Error('Test error');\n    process.env.NODE_ENV = 'production';\n\n    errorHandler(err, req, res, next);\n\n    expect(res.status).toHaveBeenCalledWith(500);\n    expect(res.json).toHaveBeenCalledWith({\n      error: 'Internal Server Error',\n      message: 'Something went wrong',\n    });\n  });\n\n  it('should use custom status code if provided', () => {\n    const err = new Error('Test error');\n    err.status = 418;\n\n    errorHandler(err, req, res, next);\n\n    expect(res.status).toHaveBeenCalledWith(418);\n  });\n\n  it('should handle errors without message', () => {\n    const err = new Error();\n\n    errorHandler(err, req, res, next);\n\n    expect(res.json).toHaveBeenCalledWith(expect.objectContaining({\n      error: 'Internal Server Error',\n    }));\n  });\n\n  it('should include request details in log', () => {\n    const err = new Error('Test error');\n    const logger = require('../../../src/utils/logger');\n\n    errorHandler(err, req, res, next);\n\n    expect(logger.error).toHaveBeenCalledWith('Error:', expect.objectContaining({\n      path: '/test',\n      method: 'GET',\n    }));\n  });\n\n  describe('environment-specific behavior', () => {\n    const originalNodeEnv = process.env.NODE_ENV;\n\n    afterEach(() => {\n      process.env.NODE_ENV = originalNodeEnv;\n    });\n\n    it('should include stack trace in development', () => {\n      process.env.NODE_ENV = 'development';\n      const err = new Error('Test error');\n      const req = {};\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n\n      errorHandler(err, req, res);\n\n      expect(res.json).toHaveBeenCalledWith(\n        expect.objectContaining({\n          stack: expect.any(String),\n        }),\n      );\n    });\n\n    it('should exclude stack trace in production', () => {\n      process.env.NODE_ENV = 'production';\n      const err = new Error('Test error');\n      const req = {};\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n\n      errorHandler(err, req, res);\n\n      expect(res.json).toHaveBeenCalledWith(\n        expect.not.objectContaining({\n          stack: expect.any(String),\n        }),\n      );\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/middleware/requestLogger.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst requestLogger = require('../../../src/middleware/requestLogger');\nconst logger = require('../../../src/utils/logger');\n\njest.mock('../../../src/utils/logger', () => ({\n  info: jest.fn(),\n  warn: jest.fn(),\n}));\n\ndescribe('Request Logger Middleware', () => {\n  it('should log requests', () => {\n    const req = {\n      method: 'GET',\n      url: '/test',\n      ip: '127.0.0.1',\n      get: jest.fn().mockReturnValue('test-agent'),\n    };\n\n    const res = {\n      statusCode: 200,\n      on: jest.fn().mockImplementation((event, cb) => {\n        if (event === 'finish') {\n          cb();\n        }\n      }),\n    };\n\n    const next = jest.fn();\n\n    requestLogger(req, res, next);\n\n    expect(logger.info).toHaveBeenCalledWith('GET /test', expect.any(Object));\n    expect(next).toHaveBeenCalled();\n  });\n\n  it('should log response status and duration', () => {\n    jest.useFakeTimers();\n\n    const req = {\n      method: 'POST',\n      url: '/api/test',\n      ip: '127.0.0.1',\n      get: jest.fn().mockReturnValue('test-agent'),\n    };\n\n    const res = {\n      statusCode: 404,\n      on: jest.fn().mockImplementation((event, cb) => {\n        if (event === 'finish') {\n          jest.advanceTimersByTime(100);\n          cb();\n        }\n      }),\n    };\n\n    requestLogger(req, res, jest.fn());\n\n    expect(logger.warn).toHaveBeenCalledWith(\n      'POST /api/test 404 - 100ms',\n      expect.any(Object),\n    );\n\n    jest.useRealTimers();\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/middleware/validation.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module '../../../src/middleware/validation'.","line":4,"column":28,"nodeType":"Literal","endLine":4,"endColumn":64},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"../../../src/middleware/validation\"","line":4,"column":28,"nodeType":"Literal","endLine":4,"endColumn":64},{"ruleId":"node/no-missing-require","severity":2,"message":"\"../../../src/middleware/validation\" is not found.","line":4,"column":28,"nodeType":"Literal","endLine":4,"endColumn":64}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst validation = require('../../../src/middleware/validation');\n\ndescribe('Validation Middleware', () => {\n  describe('validateRepository', () => {\n    it('should validate repository path', () => {\n      const req = {\n        body: { path: '/valid/path' },\n      };\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n      const next = jest.fn();\n\n      validation.validateRepository(req, res, next);\n      expect(next).toHaveBeenCalled();\n    });\n\n    it('should reject invalid repository paths', () => {\n      const req = {\n        body: { path: '../invalid/path' },\n      };\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n      const next = jest.fn();\n\n      validation.validateRepository(req, res, next);\n      expect(res.status).toHaveBeenCalledWith(400);\n    });\n  });\n\n  describe('validateBranchNames', () => {\n    it('should validate branch names', () => {\n      const req = {\n        body: {\n          fromBranch: 'main',\n          toBranch: 'develop',\n        },\n      };\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n      const next = jest.fn();\n\n      validation.validateBranchNames(req, res, next);\n      expect(next).toHaveBeenCalled();\n    });\n\n    it('should reject invalid branch names', () => {\n      const req = {\n        body: {\n          fromBranch: 'main/../hack',\n          toBranch: 'develop',\n        },\n      };\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n      const next = jest.fn();\n\n      validation.validateBranchNames(req, res, next);\n      expect(res.status).toHaveBeenCalledWith(400);\n    });\n  });\n\n  describe('validateFilePath', () => {\n    it('should validate file paths', () => {\n      const req = {\n        params: { filePath: 'src/index.js' },\n      };\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n      const next = jest.fn();\n\n      validation.validateFilePath(req, res, next);\n      expect(next).toHaveBeenCalled();\n    });\n\n    it('should reject path traversal attempts', () => {\n      const req = {\n        params: { filePath: '../config/secrets.js' },\n      };\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn(),\n      };\n      const next = jest.fn();\n\n      validation.validateFilePath(req, res, next);\n      expect(res.status).toHaveBeenCalledWith(400);\n    });\n  });\n\n  describe('sanitizePath', () => {\n    it('should sanitize paths', () => {\n      expect(validation.sanitizePath('/test/../path')).toBe('/path');\n      expect(validation.sanitizePath('../../hack')).toBe('hack');\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/services/AiService.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module '../../../src/services/AiService'.","line":4,"column":27,"nodeType":"Literal","endLine":4,"endColumn":60},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"../../../src/services/AiService\"","line":4,"column":27,"nodeType":"Literal","endLine":4,"endColumn":60},{"ruleId":"node/no-missing-require","severity":2,"message":"\"../../../src/services/AiService\" is not found.","line":4,"column":27,"nodeType":"Literal","endLine":4,"endColumn":60}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest, beforeEach,\n} = require('@jest/globals');\nconst AiService = require('../../../src/services/AiService');\nconst config = require('../../../src/config');\n\njest.mock('@google/generative-ai');\njest.mock('../../../src/utils/logger');\n\ndescribe('AiService', () => {\n  let aiService;\n\n  beforeEach(() => {\n    aiService = new AiService();\n  });\n\n  describe('initialization', () => {\n    it('should initialize with API key from config', () => {\n      expect(aiService.apiKey).toBe(config.ai.geminiApiKey);\n    });\n\n    it('should handle missing API key gracefully', () => {\n      const originalApiKey = config.ai.geminiApiKey;\n      config.ai.geminiApiKey = '';\n      const newService = new AiService();\n      expect(newService.isEnabled).toBe(false);\n      config.ai.geminiApiKey = originalApiKey;\n    });\n  });\n\n  describe('analyzeDiff', () => {\n    it('should analyze diff content', async () => {\n      const mockDiff = 'diff --git a/file.js b/file.js\\n+new line\\n-old line';\n      const mockResponse = { text: () => 'Analysis result' };\n      aiService.model = { generateContent: jest.fn().mockResolvedValue(mockResponse) };\n\n      const result = await aiService.analyzeDiff(mockDiff);\n      expect(result).toBe('Analysis result');\n    });\n\n    it('should handle empty diff content', async () => {\n      const result = await aiService.analyzeDiff('');\n      expect(result).toBe('No changes to analyze');\n    });\n\n    it('should handle AI service errors', async () => {\n      aiService.model = {\n        generateContent: jest.fn().mockRejectedValue(new Error('AI error')),\n      };\n\n      await expect(aiService.analyzeDiff('test diff'))\n        .rejects.toThrow('Failed to analyze diff');\n    });\n  });\n\n  describe('suggestImprovements', () => {\n    it('should generate improvement suggestions', async () => {\n      const mockCode = 'function test() { var x = 1; }';\n      const mockResponse = { text: () => 'Use const instead of var' };\n      aiService.model = { generateContent: jest.fn().mockResolvedValue(mockResponse) };\n\n      const result = await aiService.suggestImprovements(mockCode);\n      expect(result).toContain('const');\n    });\n\n    it('should handle empty code input', async () => {\n      const result = await aiService.suggestImprovements('');\n      expect(result).toBe('No code provided for analysis');\n    });\n  });\n\n  describe('error handling', () => {\n    it('should handle network errors', async () => {\n      aiService.model = {\n        generateContent: jest.fn().mockRejectedValue(new Error('Network error')),\n      };\n\n      await expect(aiService.analyzeDiff('test'))\n        .rejects.toThrow('Failed to analyze diff');\n    });\n\n    it('should handle rate limiting', async () => {\n      aiService.model = {\n        generateContent: jest.fn().mockRejectedValue(new Error('Rate limit exceeded')),\n      };\n\n      await expect(aiService.analyzeDiff('test'))\n        .rejects.toThrow('Rate limit exceeded');\n    });\n  });\n\n  describe('feature flags', () => {\n    it('should respect AI feature flag', async () => {\n      const originalFlag = config.ai.enableAiFeatures;\n      config.ai.enableAiFeatures = false;\n\n      const service = new AiService();\n      const result = await service.analyzeDiff('test');\n\n      expect(result).toBe('AI features are disabled');\n      config.ai.enableAiFeatures = originalFlag;\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/services/AnalyzerService.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":1,"column":34,"nodeType":"CallExpression","endLine":1,"endColumn":58},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":1,"column":42,"nodeType":"Literal","endLine":1,"endColumn":57}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { describe, expect, it } = require('@jest/globals');\nconst AnalyzerService = require('../../../src/services/AnalyzerService');\n\ndescribe('AnalyzerService', () => {\n  const analyzerService = new AnalyzerService();\n\n  describe('parseDiff', () => {\n    it('should parse git diff output', () => {\n      const diffOutput = `diff --git a/file.js b/file.js\n@@ -1,4 +1,4 @@\n-old line\n+new line\n unchanged line`;\n\n      const result = AnalyzerService.parseDiff(diffOutput);\n      expect(result).toHaveLength(1);\n      expect(result[0].changes).toHaveLength(3);\n    });\n  });\n\n  describe('calculateComplexity', () => {\n    it('should calculate complexity correctly', () => {\n      const file = {\n        additions: 5,\n        deletions: 3,\n      };\n      const result = AnalyzerService.calculateComplexity(file);\n      expect(result.score).toBeDefined();\n      expect(result.changes).toBe(8);\n    });\n  });\n\n  describe('analyzeDiff', () => {\n    it('should analyze diff output', async () => {\n      const diffOutput = `diff --git a/file.js b/file.js\n@@ -1,4 +1,4 @@\n-old line\n+new line\n unchanged line`;\n\n      const result = await analyzerService.analyzeDiff(diffOutput);\n      expect(result.files).toBeDefined();\n      expect(result.summary).toBeDefined();\n    });\n  });\n\n  describe('getFileType', () => {\n    it('should identify file types correctly', () => {\n      expect(AnalyzerService.getFileType('js')).toBe('JavaScript');\n      expect(AnalyzerService.getFileType('ts')).toBe('TypeScript');\n      expect(AnalyzerService.getFileType('unknown')).toBe('Unknown');\n    });\n  });\n\n  describe('calculateImpactLevel', () => {\n    it('should calculate impact level correctly', () => {\n      expect(AnalyzerService.calculateImpactLevel({}, { score: 3 })).toBe('high');\n      expect(AnalyzerService.calculateImpactLevel({}, { score: 2 })).toBe('medium');\n      expect(AnalyzerService.calculateImpactLevel({}, { score: 1 })).toBe('low');\n    });\n  });\n\n  describe('edge cases', () => {\n    it('should handle empty diff output', async () => {\n      const result = await analyzerService.analyzeDiff('');\n      expect(result.files).toHaveLength(0);\n      expect(result.summary.totalFiles).toBe(0);\n    });\n\n    it('should handle malformed diff output', async () => {\n      const malformedDiff = 'invalid diff format';\n      const result = await analyzerService.analyzeDiff(malformedDiff);\n      expect(result.files).toHaveLength(0);\n    });\n\n    it('should handle unknown file types', () => {\n      const result = AnalyzerService.getFileType('xyz');\n      expect(result).toBe('Unknown');\n    });\n\n    it('should handle extremely large diffs', async () => {\n      const largeDiff = 'diff --git a/file b/file\\n'.repeat(1000);\n      const result = await analyzerService.analyzeDiff(largeDiff);\n      expect(result.summary).toBeDefined();\n    });\n  });\n\n  describe('complexity calculations', () => {\n    it('should calculate low complexity correctly', () => {\n      const result = AnalyzerService.calculateComplexity({\n        additions: 3,\n        deletions: 2,\n      });\n      expect(result.score).toBe(1);\n    });\n\n    it('should calculate medium complexity correctly', () => {\n      const result = AnalyzerService.calculateComplexity({\n        additions: 20,\n        deletions: 15,\n      });\n      expect(result.score).toBe(2);\n    });\n\n    it('should calculate high complexity correctly', () => {\n      const result = AnalyzerService.calculateComplexity({\n        additions: 30,\n        deletions: 25,\n      });\n      expect(result.score).toBe(3);\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/services/GitService.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"no-unused-vars","severity":2,"message":"'path' is assigned a value but never used.","line":4,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest, beforeEach,\n} = require('@jest/globals');\nconst path = require('path');\nconst fs = require('fs').promises;\nconst GitService = require('../../../src/services/GitService');\nconst logger = require('../../../src/utils/logger');\n\njest.mock('simple-git');\njest.mock('../../../src/utils/logger');\n\ndescribe('GitService', () => {\n  let gitService;\n\n  beforeEach(() => {\n    gitService = new GitService();\n  });\n\n  describe('initialization', () => {\n    it('should initialize with default values', () => {\n      expect(gitService.repoPath).toBeNull();\n      expect(gitService.git).toBeNull();\n    });\n\n    it('should load state from file', async () => {\n      const mockState = { repoPath: '/test/path' };\n      jest.spyOn(fs, 'readFile').mockResolvedValue(JSON.stringify(mockState));\n\n      await gitService.loadState();\n      expect(gitService.repoPath).toBe(mockState.repoPath);\n    });\n\n    it('should handle missing state file', async () => {\n      jest.spyOn(fs, 'readFile').mockRejectedValue(new Error('ENOENT'));\n\n      await gitService.loadState();\n      expect(gitService.repoPath).toBeNull();\n    });\n  });\n\n  describe('repository operations', () => {\n    it('should set repository path', () => {\n      const testPath = '/test/repo';\n      gitService.setRepoPath(testPath);\n      expect(gitService.repoPath).toBe(testPath);\n    });\n\n    it('should get branches', async () => {\n      gitService.git = {\n        branch: jest.fn().mockResolvedValue({\n          all: ['main', 'develop'],\n          current: 'main',\n        }),\n      };\n\n      const branches = await gitService.getBranches();\n      expect(branches.all).toContain('main');\n      expect(branches.all).toContain('develop');\n    });\n\n    it('should get current branch', async () => {\n      gitService.git = {\n        branch: jest.fn().mockResolvedValue({\n          current: 'main',\n        }),\n      };\n\n      const branch = await gitService.getCurrentBranch();\n      expect(branch).toBe('main');\n    });\n\n    it('should get diff between branches', async () => {\n      gitService.git = {\n        diff: jest.fn().mockResolvedValue('test diff output'),\n      };\n\n      const diff = await gitService.getDiff('main', 'develop');\n      expect(diff).toBe('test diff output');\n    });\n  });\n\n  describe('error handling', () => {\n    it('should handle git command errors', async () => {\n      gitService.git = {\n        branch: jest.fn().mockRejectedValue(new Error('Git error')),\n      };\n\n      await expect(gitService.getBranches()).rejects.toThrow('Git error');\n      expect(logger.error).toHaveBeenCalled();\n    });\n\n    it('should handle invalid repository paths', () => {\n      expect(() => gitService.setRepoPath('')).toThrow();\n      expect(() => gitService.setRepoPath(null)).toThrow();\n    });\n\n    it('should handle state save errors', async () => {\n      jest.spyOn(fs, 'writeFile').mockRejectedValue(new Error('Write error'));\n\n      await expect(gitService.saveState()).rejects.toThrow('Write error');\n      expect(logger.error).toHaveBeenCalled();\n    });\n  });\n\n  describe('state management', () => {\n    it('should save state to file', async () => {\n      const writeFile = jest.spyOn(fs, 'writeFile').mockResolvedValue();\n      gitService.repoPath = '/test/repo';\n\n      await gitService.saveState();\n      expect(writeFile).toHaveBeenCalledWith(\n        expect.any(String),\n        JSON.stringify({ repoPath: '/test/repo' }),\n        'utf8',\n      );\n    });\n\n    it('should handle state file corruption', async () => {\n      jest.spyOn(fs, 'readFile').mockResolvedValue('invalid json');\n\n      await gitService.loadState();\n      expect(logger.error).toHaveBeenCalled();\n      expect(gitService.repoPath).toBeNull();\n    });\n  });\n\n  describe('utility methods', () => {\n    it('should check if path is git repository', async () => {\n      gitService.git = {\n        checkIsRepo: jest.fn().mockResolvedValue(true),\n      };\n\n      const isRepo = await gitService.isGitRepository('/test/path');\n      expect(isRepo).toBe(true);\n    });\n\n    it('should handle non-git directories', async () => {\n      gitService.git = {\n        checkIsRepo: jest.fn().mockResolvedValue(false),\n      };\n\n      const isRepo = await gitService.isGitRepository('/test/path');\n      expect(isRepo).toBe(false);\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/services/SecureGitService.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"no-shadow","severity":2,"message":"'secureGitService' is already declared in the upper scope on line 10 column 7.","line":128,"column":9,"nodeType":"Identifier","messageId":"noShadow","endLine":128,"endColumn":25},{"ruleId":"no-shadow","severity":2,"message":"'secureGitService' is already declared in the upper scope on line 10 column 7.","line":156,"column":9,"nodeType":"Identifier","messageId":"noShadow","endLine":156,"endColumn":25},{"ruleId":"no-shadow","severity":2,"message":"'secureGitService' is already declared in the upper scope on line 10 column 7.","line":182,"column":9,"nodeType":"Identifier","messageId":"noShadow","endLine":182,"endColumn":25}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst path = require('path');\nconst os = require('os');\nconst fs = require('fs').promises;\nconst SecureGitService = require('../../../src/services/SecureGitService');\n\ndescribe('SecureGitService', () => {\n  let secureGitService;\n\n  beforeEach(() => {\n    secureGitService = new SecureGitService();\n  });\n\n  describe('setRepositoryPath', () => {\n    it('should set valid repository path', () => {\n      const validPath = path.join(os.homedir(), 'Documents/test-repo');\n      const result = secureGitService.setRepositoryPath(validPath);\n      expect(result).toBe(true);\n      expect(secureGitService.currentRepoPath).toBe(validPath);\n    });\n\n    it('should reject invalid repository path', () => {\n      const invalidPath = '/var/root/forbidden';\n      const result = secureGitService.setRepositoryPath(invalidPath);\n      expect(result).toBe(false);\n    });\n\n    it('should handle tilde expansion', () => {\n      const tildePath = '~/Documents/test-repo';\n      const expandedPath = path.join(os.homedir(), 'Documents/test-repo');\n      const result = secureGitService.setRepositoryPath(tildePath);\n      expect(result).toBe(true);\n      expect(secureGitService.currentRepoPath).toBe(expandedPath);\n    });\n\n    it('should reject path traversal attempts', () => {\n      const traversalPath = path.join(os.homedir(), 'Documents/../../../etc');\n      const result = secureGitService.setRepositoryPath(traversalPath);\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('isValidRepo', () => {\n    it('should return false for invalid path', async () => {\n      const result = await secureGitService.isValidRepo('/invalid/path');\n      expect(result).toBe(false);\n    });\n\n    it('should handle null/undefined paths', async () => {\n      expect(await secureGitService.isValidRepo(null)).toBe(false);\n      expect(await secureGitService.isValidRepo(undefined)).toBe(false);\n    });\n  });\n\n  describe('findRepositories', () => {\n    it('should only search in allowed directories', async () => {\n      const repos = await SecureGitService.findRepositories();\n      expect(Array.isArray(repos)).toBe(true);\n\n      // Verify all found repos are in allowed directories\n      const allowedDirs = [\n        'Documents', 'Projects', 'Development', 'Code',\n        'Github', 'repos', 'git', 'workspace', 'dev', 'Desktop',\n      ].map((dir) => path.join(os.homedir(), dir));\n\n      repos.forEach((repo) => {\n        const isInAllowedDir = allowedDirs.some((dir) => repo.path.startsWith(dir));\n        expect(isInAllowedDir).toBe(true);\n      });\n    });\n\n    it('should handle errors gracefully', async () => {\n      // Mock os.homedir to return invalid path\n      const originalHomedir = os.homedir;\n      os.homedir = jest.fn().mockReturnValue('/invalid/home');\n\n      const repos = await SecureGitService.findRepositories();\n      expect(Array.isArray(repos)).toBe(true);\n      expect(repos).toHaveLength(0);\n\n      os.homedir = originalHomedir;\n    });\n  });\n\n  describe('searchDirectory', () => {\n    it('should handle permission errors', async () => {\n      const mockFs = {\n        readdir: jest.fn().mockRejectedValue(new Error('Permission denied')),\n      };\n      jest.spyOn(fs, 'readdir').mockImplementation(mockFs.readdir);\n\n      const repos = [];\n      await SecureGitService.searchDirectory('/test/path', repos);\n      expect(repos).toHaveLength(0);\n    });\n\n    it('should respect max depth', async () => {\n      const mockFs = {\n        readdir: jest.fn().mockResolvedValue([\n          { name: 'subdir', isDirectory: () => true },\n        ]),\n      };\n      jest.spyOn(fs, 'readdir').mockImplementation(mockFs.readdir);\n\n      const repos = [];\n      await SecureGitService.searchDirectory('/test/path', repos, 4);\n      expect(mockFs.readdir).not.toHaveBeenCalled();\n    });\n\n    it('should skip hidden directories', async () => {\n      const mockFs = {\n        readdir: jest.fn().mockResolvedValue([\n          { name: '.hidden', isDirectory: () => true },\n          { name: 'visible', isDirectory: () => true },\n        ]),\n      };\n      jest.spyOn(fs, 'readdir').mockImplementation(mockFs.readdir);\n\n      const repos = [];\n      await SecureGitService.searchDirectory('/test/path', repos);\n      expect(mockFs.readdir).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('isPathAllowed', () => {\n    let secureGitService;\n\n    beforeEach(() => {\n      secureGitService = new SecureGitService();\n    });\n\n    it('should allow paths in allowed directories', () => {\n      const validPath = path.join(os.homedir(), 'Documents/repo');\n      expect(secureGitService.isPathAllowed(validPath)).toBe(true);\n    });\n\n    it('should reject paths outside allowed directories', () => {\n      const invalidPath = '/var/tmp/repo';\n      expect(secureGitService.isPathAllowed(invalidPath)).toBe(false);\n    });\n\n    it('should reject paths with directory traversal', () => {\n      const traversalPath = path.join(os.homedir(), 'Documents/../etc');\n      expect(secureGitService.isPathAllowed(traversalPath)).toBe(false);\n    });\n\n    it('should handle symlinks correctly', () => {\n      const symlinkPath = path.join(os.homedir(), 'Documents/link');\n      expect(secureGitService.isPathAllowed(symlinkPath)).toBe(true);\n    });\n  });\n\n  describe('error handling', () => {\n    let secureGitService;\n\n    beforeEach(() => {\n      secureGitService = new SecureGitService();\n    });\n\n    it('should handle null repository paths', () => {\n      expect(secureGitService.setRepositoryPath(null)).toBe(false);\n    });\n\n    it('should handle undefined repository paths', () => {\n      expect(secureGitService.setRepositoryPath(undefined)).toBe(false);\n    });\n\n    it('should handle empty repository paths', () => {\n      expect(secureGitService.setRepositoryPath('')).toBe(false);\n    });\n\n    it('should handle invalid path types', () => {\n      expect(secureGitService.setRepositoryPath(123)).toBe(false);\n      expect(secureGitService.setRepositoryPath({})).toBe(false);\n      expect(secureGitService.setRepositoryPath([])).toBe(false);\n    });\n  });\n\n  describe('repository validation', () => {\n    let secureGitService;\n\n    beforeEach(() => {\n      secureGitService = new SecureGitService();\n    });\n\n    it('should validate git repository existence', async () => {\n      const mockFs = {\n        access: jest.fn().mockResolvedValue(undefined),\n      };\n      jest.spyOn(fs, 'access').mockImplementation(mockFs.access);\n\n      const validPath = path.join(os.homedir(), 'Documents/repo');\n      const isValid = await secureGitService.isValidRepo(validPath);\n      expect(isValid).toBe(true);\n    });\n\n    it('should reject non-git directories', async () => {\n      const mockFs = {\n        access: jest.fn().mockRejectedValue(new Error('ENOENT')),\n      };\n      jest.spyOn(fs, 'access').mockImplementation(mockFs.access);\n\n      const nonGitPath = path.join(os.homedir(), 'Documents/non-git');\n      const isValid = await secureGitService.isValidRepo(nonGitPath);\n      expect(isValid).toBe(false);\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/utils/cache.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module '../../../src/utils/cache'.","line":4,"column":23,"nodeType":"Literal","endLine":4,"endColumn":49},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"../../../src/utils/cache\"","line":4,"column":23,"nodeType":"Literal","endLine":4,"endColumn":49},{"ruleId":"node/no-missing-require","severity":2,"message":"\"../../../src/utils/cache\" is not found.","line":4,"column":23,"nodeType":"Literal","endLine":4,"endColumn":49}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest, beforeEach,\n} = require('@jest/globals');\nconst Cache = require('../../../src/utils/cache');\n\ndescribe('Cache', () => {\n  let cache;\n\n  beforeEach(() => {\n    cache = new Cache();\n  });\n\n  describe('set and get', () => {\n    it('should store and retrieve values', () => {\n      cache.set('key1', 'value1');\n      expect(cache.get('key1')).toBe('value1');\n    });\n\n    it('should handle complex objects', () => {\n      const obj = { a: 1, b: { c: 2 } };\n      cache.set('key2', obj);\n      expect(cache.get('key2')).toEqual(obj);\n    });\n\n    it('should handle undefined and null values', () => {\n      cache.set('key3', undefined);\n      cache.set('key4', null);\n      expect(cache.get('key3')).toBeUndefined();\n      expect(cache.get('key4')).toBeNull();\n    });\n  });\n\n  describe('expiration', () => {\n    it('should expire items after ttl', async () => {\n      jest.useFakeTimers();\n      cache = new Cache({ ttl: 1000 }); // 1 second TTL\n\n      cache.set('key', 'value');\n      expect(cache.get('key')).toBe('value');\n\n      jest.advanceTimersByTime(1001);\n      expect(cache.get('key')).toBeNull();\n\n      jest.useRealTimers();\n    });\n\n    it('should not expire items before ttl', () => {\n      jest.useFakeTimers();\n      cache = new Cache({ ttl: 1000 });\n\n      cache.set('key', 'value');\n      jest.advanceTimersByTime(999);\n      expect(cache.get('key')).toBe('value');\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('clear', () => {\n    it('should remove all items', () => {\n      cache.set('key1', 'value1');\n      cache.set('key2', 'value2');\n      cache.clear();\n      expect(cache.get('key1')).toBeNull();\n      expect(cache.get('key2')).toBeNull();\n    });\n\n    it('should clear specific keys', () => {\n      cache.set('key1', 'value1');\n      cache.set('key2', 'value2');\n      cache.clear(['key1']);\n      expect(cache.get('key1')).toBeNull();\n      expect(cache.get('key2')).toBe('value2');\n    });\n  });\n\n  describe('has', () => {\n    it('should check if key exists', () => {\n      cache.set('key', 'value');\n      expect(cache.has('key')).toBe(true);\n      expect(cache.has('nonexistent')).toBe(false);\n    });\n\n    it('should handle expired items', () => {\n      jest.useFakeTimers();\n      cache = new Cache({ ttl: 1000 });\n\n      cache.set('key', 'value');\n      jest.advanceTimersByTime(1001);\n      expect(cache.has('key')).toBe(false);\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('size', () => {\n    it('should return correct cache size', () => {\n      expect(cache.size()).toBe(0);\n      cache.set('key1', 'value1');\n      cache.set('key2', 'value2');\n      expect(cache.size()).toBe(2);\n    });\n\n    it('should not count expired items', () => {\n      jest.useFakeTimers();\n      cache = new Cache({ ttl: 1000 });\n\n      cache.set('key1', 'value1');\n      cache.set('key2', 'value2');\n      jest.advanceTimersByTime(1001);\n      expect(cache.size()).toBe(0);\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('keys', () => {\n    it('should return all active keys', () => {\n      cache.set('key1', 'value1');\n      cache.set('key2', 'value2');\n      expect(cache.keys()).toEqual(['key1', 'key2']);\n    });\n\n    it('should not include expired keys', () => {\n      jest.useFakeTimers();\n      cache = new Cache({ ttl: 1000 });\n\n      cache.set('key1', 'value1');\n      cache.set('key2', 'value2');\n      jest.advanceTimersByTime(1001);\n      expect(cache.keys()).toEqual([]);\n\n      jest.useRealTimers();\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/utils/logger.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst winston = require('winston');\nconst logger = require('../../../src/utils/logger');\n\njest.mock('winston', () => ({\n  format: {\n    combine: jest.fn(),\n    timestamp: jest.fn(),\n    errors: jest.fn(),\n    splat: jest.fn(),\n    json: jest.fn(),\n    printf: jest.fn(),\n    colorize: jest.fn(),\n  },\n  createLogger: jest.fn(() => ({\n    error: jest.fn(),\n    warn: jest.fn(),\n    info: jest.fn(),\n    debug: jest.fn(),\n  })),\n  transports: {\n    File: jest.fn(),\n    Console: jest.fn(),\n  },\n}));\n\ndescribe('Logger', () => {\n  it('should have all logging methods', () => {\n    expect(logger.error).toBeDefined();\n    expect(logger.warn).toBeDefined();\n    expect(logger.info).toBeDefined();\n    expect(logger.debug).toBeDefined();\n    expect(logger.success).toBeDefined();\n    expect(logger.important).toBeDefined();\n    expect(logger.highlight).toBeDefined();\n    expect(logger.section).toBeDefined();\n    expect(logger.table).toBeDefined();\n  });\n\n  it('should create log files with correct options', () => {\n    expect(winston.transports.File).toHaveBeenCalledWith(\n      expect.objectContaining({\n        filename: 'logs/error.log',\n        level: 'error',\n      }),\n    );\n  });\n\n  it('should format messages with source location', () => {\n    logger.info('Test message');\n    expect(winston.createLogger).toHaveBeenCalled();\n  });\n\n  it('should add source tracking to log methods', () => {\n    const message = 'Test message';\n    const meta = { userId: 123 };\n\n    logger.error(message, meta);\n    logger.warn(message, meta);\n    logger.info(message, meta);\n    logger.debug(message, meta);\n  });\n\n  it('should handle convenience logging methods', () => {\n    logger.success('Success message');\n    logger.important('Important message');\n    logger.highlight('Highlighted message');\n    logger.section('Section title');\n    logger.table([{ id: 1, name: 'test' }]);\n  });\n\n  it('should create logger with correct configuration', () => {\n    expect(winston.createLogger).toHaveBeenCalled();\n  });\n\n  it('should log messages at different levels', () => {\n    logger.info('test info');\n    logger.error('test error');\n    logger.warn('test warning');\n    logger.debug('test debug');\n\n    expect(logger.info).toHaveBeenCalledWith('test info');\n    expect(logger.error).toHaveBeenCalledWith('test error');\n    expect(logger.warn).toHaveBeenCalledWith('test warning');\n    expect(logger.debug).toHaveBeenCalledWith('test debug');\n  });\n\n  it('should handle objects in log messages', () => {\n    const testObject = { key: 'value' };\n    logger.info('test', testObject);\n    expect(logger.info).toHaveBeenCalledWith('test', testObject);\n  });\n\n  it('should handle errors in log messages', () => {\n    const testError = new Error('test error');\n    logger.error('error occurred', testError);\n    expect(logger.error).toHaveBeenCalledWith('error occurred', testError);\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/utils/performance-analyzer.test.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'jest' is assigned a value but never used.","line":2,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29},{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":3,"column":5,"nodeType":"CallExpression","endLine":3,"endColumn":29},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":3,"column":13,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":11,"column":40,"nodeType":"CallExpression","messageId":"returnsValue","endLine":11,"endColumn":64,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[428,452],"text":"{setTimeout(resolve, 100)}"},"desc":"Wrap the expression in `{}`."}]},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":31,"column":40,"nodeType":"CallExpression","messageId":"returnsValue","endLine":31,"endColumn":64,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[1078,1102],"text":"{setTimeout(resolve, 100)}"},"desc":"Wrap the expression in `{}`."}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":47,"column":38,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":47,"endColumn":41},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":67,"column":30,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":67,"endColumn":33},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":68,"column":9,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":70,"endColumn":11},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":69,"column":42,"nodeType":"CallExpression","messageId":"returnsValue","endLine":69,"endColumn":75,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[2313,2346],"text":"{setTimeout(resolve, 10 * (i + 1))}"},"desc":"Wrap the expression in `{}`."}]},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":82,"column":31,"nodeType":"UpdateExpression","messageId":"unexpectedUnaryOp","endLine":82,"endColumn":34},{"ruleId":"no-await-in-loop","severity":2,"message":"Unexpected `await` inside a loop.","line":83,"column":9,"nodeType":"AwaitExpression","messageId":"unexpectedAwait","endLine":85,"endColumn":11},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":84,"column":42,"nodeType":"CallExpression","messageId":"returnsValue","endLine":84,"endColumn":65,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[2837,2860],"text":"{setTimeout(resolve, 10)}"},"desc":"Wrap the expression in `{}`."}]},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":100,"column":40,"nodeType":"CallExpression","messageId":"returnsValue","endLine":100,"endColumn":63,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[3318,3341],"text":"{setTimeout(resolve, 10)}"},"desc":"Wrap the expression in `{}`."}]},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":111,"column":40,"nodeType":"CallExpression","messageId":"returnsValue","endLine":111,"endColumn":63,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[3644,3667],"text":"{setTimeout(resolve, 10)}"},"desc":"Wrap the expression in `{}`."}]},{"ruleId":"no-promise-executor-return","severity":2,"message":"Return values from promise executor functions cannot be read.","line":114,"column":40,"nodeType":"CallExpression","messageId":"returnsValue","endLine":114,"endColumn":63,"suggestions":[{"messageId":"wrapBraces","fix":{"range":[3769,3792],"text":"{setTimeout(resolve, 10)}"},"desc":"Wrap the expression in `{}`."}]}],"suppressedMessages":[],"errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {\n  describe, expect, it, jest,\n} = require('@jest/globals');\nconst PerformanceAnalyzer = require('../../../src/utils/performance-analyzer');\n\ndescribe('PerformanceAnalyzer', () => {\n  describe('measure', () => {\n    it('should measure execution time', async () => {\n      const analyzer = new PerformanceAnalyzer();\n      const result = await analyzer.measure('test', async () => {\n        await new Promise((resolve) => setTimeout(resolve, 100));\n        return 'result';\n      });\n\n      expect(result.duration).toBeGreaterThanOrEqual(100);\n      expect(result.result).toBe('result');\n    });\n\n    it('should handle errors', async () => {\n      const analyzer = new PerformanceAnalyzer();\n      await expect(analyzer.measure('test', async () => {\n        throw new Error('Test error');\n      })).rejects.toThrow('Test error');\n    });\n  });\n\n  describe('getStats', () => {\n    it('should return performance stats', async () => {\n      const analyzer = new PerformanceAnalyzer();\n      await analyzer.measure('test', async () => {\n        await new Promise((resolve) => setTimeout(resolve, 100));\n      });\n\n      const stats = analyzer.getStats();\n      expect(stats).toHaveProperty('test');\n      expect(stats.test).toHaveProperty('count');\n      expect(stats.test).toHaveProperty('totalTime');\n      expect(stats.test).toHaveProperty('avgTime');\n    });\n  });\n\n  describe('measureSync', () => {\n    it('should measure synchronous function execution time', () => {\n      const analyzer = new PerformanceAnalyzer();\n      const result = analyzer.measureSync('test', () => {\n        let sum = 0;\n        for (let i = 0; i < 1000000; i++) sum += i;\n        return sum;\n      });\n\n      expect(result.duration).toBeGreaterThan(0);\n      expect(typeof result.result).toBe('number');\n    });\n\n    it('should handle sync errors', () => {\n      const analyzer = new PerformanceAnalyzer();\n      expect(() => analyzer.measureSync('test', () => {\n        throw new Error('Sync error');\n      })).toThrow('Sync error');\n    });\n  });\n\n  describe('getMetrics', () => {\n    it('should track min/max/avg execution times', async () => {\n      const analyzer = new PerformanceAnalyzer();\n\n      for (let i = 0; i < 3; i++) {\n        await analyzer.measure('test', async () => {\n          await new Promise((resolve) => setTimeout(resolve, 10 * (i + 1)));\n        });\n      }\n\n      const metrics = analyzer.getMetrics('test');\n      expect(metrics.min).toBeLessThan(metrics.max);\n      expect(metrics.avg).toBeGreaterThan(metrics.min);\n      expect(metrics.avg).toBeLessThan(metrics.max);\n    });\n\n    it('should calculate percentiles correctly', async () => {\n      const analyzer = new PerformanceAnalyzer();\n\n      for (let i = 0; i < 10; i++) {\n        await analyzer.measure('test', async () => {\n          await new Promise((resolve) => setTimeout(resolve, 10));\n        });\n      }\n\n      const metrics = analyzer.getMetrics('test');\n      expect(metrics.p95).toBeDefined();\n      expect(metrics.p99).toBeDefined();\n      expect(metrics.p99).toBeGreaterThanOrEqual(metrics.p95);\n    });\n  });\n\n  describe('reset', () => {\n    it('should clear all measurements', async () => {\n      const analyzer = new PerformanceAnalyzer();\n\n      await analyzer.measure('test', async () => {\n        await new Promise((resolve) => setTimeout(resolve, 10));\n      });\n\n      analyzer.reset();\n      expect(analyzer.getStats()).toEqual({});\n    });\n\n    it('should clear specific operation measurements', async () => {\n      const analyzer = new PerformanceAnalyzer();\n\n      await analyzer.measure('op1', async () => {\n        await new Promise((resolve) => setTimeout(resolve, 10));\n      });\n      await analyzer.measure('op2', async () => {\n        await new Promise((resolve) => setTimeout(resolve, 10));\n      });\n\n      analyzer.reset('op1');\n      const stats = analyzer.getStats();\n      expect(stats.op1).toBeUndefined();\n      expect(stats.op2).toBeDefined();\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/devang/Documents/local_rabbit/server/tests/unit/utils/sanitizer.test.js","messages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","line":1,"column":34,"nodeType":"CallExpression","endLine":1,"endColumn":58},{"ruleId":"node/no-extraneous-require","severity":2,"message":"\"@jest/globals\" is extraneous.","line":1,"column":42,"nodeType":"Literal","endLine":1,"endColumn":57},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module '../../../src/utils/sanitizer'.","line":2,"column":27,"nodeType":"Literal","endLine":2,"endColumn":57},{"ruleId":"import/extensions","severity":2,"message":"Missing file extension for \"../../../src/utils/sanitizer\"","line":2,"column":27,"nodeType":"Literal","endLine":2,"endColumn":57},{"ruleId":"node/no-missing-require","severity":2,"message":"\"../../../src/utils/sanitizer\" is not found.","line":2,"column":27,"nodeType":"Literal","endLine":2,"endColumn":57}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { describe, expect, it } = require('@jest/globals');\nconst sanitizer = require('../../../src/utils/sanitizer');\n\ndescribe('Sanitizer', () => {\n  describe('sanitizePath', () => {\n    it('should normalize paths', () => {\n      expect(sanitizer.sanitizePath('/test//path')).toBe('/test/path');\n      expect(sanitizer.sanitizePath('path/../file')).toBe('file');\n    });\n\n    it('should handle empty paths', () => {\n      expect(sanitizer.sanitizePath('')).toBe('');\n      expect(sanitizer.sanitizePath(null)).toBe('');\n    });\n\n    it('should remove dangerous characters', () => {\n      expect(sanitizer.sanitizePath('/test/;rm -rf;/path'))\n        .toBe('/test/path');\n    });\n  });\n\n  describe('sanitizeInput', () => {\n    it('should escape HTML', () => {\n      expect(sanitizer.sanitizeInput('<script>alert(\"xss\")</script>'))\n        .toBe('&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;');\n    });\n\n    it('should handle objects', () => {\n      const input = { key: '<script>alert(\"xss\")</script>' };\n      const result = sanitizer.sanitizeInput(input);\n      expect(result.key).toBe('&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;');\n    });\n\n    it('should handle arrays', () => {\n      const input = ['<script>alert(\"xss\")</script>'];\n      const result = sanitizer.sanitizeInput(input);\n      expect(result[0]).toBe('&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;');\n    });\n  });\n\n  describe('sanitizeBranchName', () => {\n    it('should clean branch names', () => {\n      expect(sanitizer.sanitizeBranchName('feature/test'))\n        .toBe('feature/test');\n      expect(sanitizer.sanitizeBranchName('main;rm -rf;'))\n        .toBe('main');\n    });\n\n    it('should handle invalid branch names', () => {\n      expect(sanitizer.sanitizeBranchName('')).toBe('');\n      expect(sanitizer.sanitizeBranchName('../hack')).toBe('hack');\n    });\n  });\n\n  describe('sanitizeJSON', () => {\n    it('should clean JSON objects', () => {\n      const input = {\n        key: '<script>alert(\"xss\")</script>',\n        nested: { key: '../hack' },\n      };\n      const result = sanitizer.sanitizeJSON(input);\n      expect(result.key).not.toContain('<script>');\n      expect(result.nested.key).toBe('hack');\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"max-len","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"indent","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]}]
