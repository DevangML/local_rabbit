{"version":3,"file":"Documentation-C9olH8au.js","sources":["../../../../node_modules/@mui/material/Divider/Divider.js","../../../../node_modules/@mui/material/ListItem/listItemClasses.js","../../../../node_modules/@mui/material/ListItemButton/listItemButtonClasses.js","../../../../node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js","../../../../node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js","../../../../node_modules/@mui/material/ListItem/ListItem.js","../../../../node_modules/@mui/material/ListItemText/ListItemText.js","../../../../node_modules/@mui/icons-material/esm/Article.js","../../../../node_modules/@mui/icons-material/esm/Build.js","../../../../node_modules/devlop/lib/development.js","../../../../node_modules/comma-separated-tokens/index.js","../../../../node_modules/estree-util-is-identifier-name/lib/index.js","../../../../node_modules/hast-util-whitespace/lib/index.js","../../../../node_modules/property-information/lib/util/schema.js","../../../../node_modules/property-information/lib/util/merge.js","../../../../node_modules/property-information/lib/normalize.js","../../../../node_modules/property-information/lib/util/info.js","../../../../node_modules/property-information/lib/util/types.js","../../../../node_modules/property-information/lib/util/defined-info.js","../../../../node_modules/property-information/lib/util/create.js","../../../../node_modules/property-information/lib/aria.js","../../../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../../../node_modules/property-information/lib/html.js","../../../../node_modules/property-information/lib/svg.js","../../../../node_modules/property-information/lib/xlink.js","../../../../node_modules/property-information/lib/xmlns.js","../../../../node_modules/property-information/lib/xml.js","../../../../node_modules/property-information/lib/hast-to-react.js","../../../../node_modules/property-information/lib/find.js","../../../../node_modules/property-information/index.js","../../../../node_modules/space-separated-tokens/index.js","../../../../node_modules/inline-style-parser/index.js","../../../../node_modules/style-to-object/cjs/index.js","../../../../node_modules/style-to-js/cjs/utilities.js","../../../../node_modules/style-to-js/cjs/index.js","../../../../node_modules/unist-util-position/lib/index.js","../../../../node_modules/unist-util-stringify-position/lib/index.js","../../../../node_modules/vfile-message/lib/index.js","../../../../node_modules/hast-util-to-jsx-runtime/lib/index.js","../../../../node_modules/html-url-attributes/lib/index.js","../../../../node_modules/mdast-util-to-string/lib/index.js","../../../../node_modules/decode-named-character-reference/index.dom.js","../../../../node_modules/micromark-util-symbol/lib/codes.js","../../../../node_modules/micromark-util-symbol/lib/constants.js","../../../../node_modules/micromark-util-symbol/lib/types.js","../../../../node_modules/micromark-util-symbol/lib/values.js","../../../../node_modules/micromark-util-chunked/dev/index.js","../../../../node_modules/micromark-util-combine-extensions/index.js","../../../../node_modules/micromark-util-decode-numeric-character-reference/dev/index.js","../../../../node_modules/micromark-util-normalize-identifier/dev/index.js","../../../../node_modules/micromark-util-character/dev/index.js","../../../../node_modules/micromark-util-sanitize-uri/dev/index.js","../../../../node_modules/micromark-factory-space/dev/index.js","../../../../node_modules/micromark/dev/lib/initialize/content.js","../../../../node_modules/micromark/dev/lib/initialize/document.js","../../../../node_modules/micromark-util-classify-character/dev/index.js","../../../../node_modules/micromark-util-resolve-all/index.js","../../../../node_modules/micromark-core-commonmark/dev/lib/attention.js","../../../../node_modules/micromark-core-commonmark/dev/lib/autolink.js","../../../../node_modules/micromark-core-commonmark/dev/lib/blank-line.js","../../../../node_modules/micromark-core-commonmark/dev/lib/block-quote.js","../../../../node_modules/micromark-core-commonmark/dev/lib/character-escape.js","../../../../node_modules/micromark-core-commonmark/dev/lib/character-reference.js","../../../../node_modules/micromark-core-commonmark/dev/lib/code-fenced.js","../../../../node_modules/micromark-core-commonmark/dev/lib/code-indented.js","../../../../node_modules/micromark-core-commonmark/dev/lib/code-text.js","../../../../node_modules/micromark-util-subtokenize/dev/lib/splice-buffer.js","../../../../node_modules/micromark-util-subtokenize/dev/index.js","../../../../node_modules/micromark-core-commonmark/dev/lib/content.js","../../../../node_modules/micromark-factory-destination/dev/index.js","../../../../node_modules/micromark-factory-label/dev/index.js","../../../../node_modules/micromark-factory-title/dev/index.js","../../../../node_modules/micromark-factory-whitespace/dev/index.js","../../../../node_modules/micromark-core-commonmark/dev/lib/definition.js","../../../../node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js","../../../../node_modules/micromark-core-commonmark/dev/lib/heading-atx.js","../../../../node_modules/micromark-util-html-tag-name/index.js","../../../../node_modules/micromark-core-commonmark/dev/lib/html-flow.js","../../../../node_modules/micromark-core-commonmark/dev/lib/html-text.js","../../../../node_modules/micromark-core-commonmark/dev/lib/label-end.js","../../../../node_modules/micromark-core-commonmark/dev/lib/label-start-image.js","../../../../node_modules/micromark-core-commonmark/dev/lib/label-start-link.js","../../../../node_modules/micromark-core-commonmark/dev/lib/line-ending.js","../../../../node_modules/micromark-core-commonmark/dev/lib/thematic-break.js","../../../../node_modules/micromark-core-commonmark/dev/lib/list.js","../../../../node_modules/micromark-core-commonmark/dev/lib/setext-underline.js","../../../../node_modules/micromark/dev/lib/initialize/flow.js","../../../../node_modules/micromark/dev/lib/initialize/text.js","../../../../node_modules/micromark/dev/lib/constructs.js","../../../../node_modules/ms/index.js","../../../../node_modules/debug/src/common.js","../../../../node_modules/debug/src/browser.js","../../../../node_modules/micromark/dev/lib/create-tokenizer.js","../../../../node_modules/micromark/dev/lib/parse.js","../../../../node_modules/micromark/dev/lib/postprocess.js","../../../../node_modules/micromark/dev/lib/preprocess.js","../../../../node_modules/micromark-util-decode-string/dev/index.js","../../../../node_modules/mdast-util-from-markdown/dev/lib/index.js","../../../../node_modules/remark-parse/lib/index.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../../../node_modules/mdast-util-to-hast/lib/revert.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../../../node_modules/trim-lines/index.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../../../node_modules/@ungap/structured-clone/esm/types.js","../../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../../node_modules/@ungap/structured-clone/esm/index.js","../../../../node_modules/mdast-util-to-hast/lib/footer.js","../../../../node_modules/unist-util-is/lib/index.js","../../../../node_modules/unist-util-visit-parents/lib/index.js","../../../../node_modules/unist-util-visit/lib/index.js","../../../../node_modules/mdast-util-to-hast/lib/state.js","../../../../node_modules/mdast-util-to-hast/lib/index.js","../../../../node_modules/remark-rehype/lib/index.js","../../../../node_modules/bail/index.js","../../../../node_modules/extend/index.js","../../../../node_modules/is-plain-obj/index.js","../../../../node_modules/trough/lib/index.js","../../../../node_modules/vfile/lib/minpath.browser.js","../../../../node_modules/vfile/lib/minproc.browser.js","../../../../node_modules/vfile/lib/minurl.shared.js","../../../../node_modules/vfile/lib/minurl.browser.js","../../../../node_modules/vfile/lib/index.js","../../../../node_modules/unified/lib/callable-instance.js","../../../../node_modules/unified/lib/index.js","../../../../node_modules/react-markdown/lib/index.js","../../../../node_modules/ccount/index.js","../../../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../../../node_modules/mdast-util-find-and-replace/lib/index.js","../../../../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../../../node_modules/mdast-util-gfm-footnote/lib/index.js","../../../../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../../../node_modules/markdown-table/index.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/break.js","../../../../node_modules/longest-streak/index.js","../../../../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/code.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../../../node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../../../../node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../../../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/html.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/image.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../../../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/link.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/list.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../../../node_modules/mdast-util-phrasing/lib/index.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/root.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/text.js","../../../../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../../../node_modules/mdast-util-to-markdown/lib/handle/index.js","../../../../node_modules/mdast-util-gfm-table/lib/index.js","../../../../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../../../node_modules/mdast-util-gfm/lib/index.js","../../../../node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js","../../../../node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js","../../../../node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js","../../../../node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js","../../../../node_modules/micromark-extension-gfm-table/dev/lib/infer.js","../../../../node_modules/micromark-extension-gfm-table/dev/lib/syntax.js","../../../../node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js","../../../../node_modules/micromark-extension-gfm/index.js","../../../../node_modules/remark-gfm/lib/index.js","../../../../node_modules/prismjs/prism.js","../../../../node_modules/prismjs/components/prism-javascript.js","../../../../node_modules/prismjs/components/prism-jsx.js","../../../../node_modules/prismjs/components/prism-typescript.js","../../../../node_modules/prismjs/components/prism-python.js","../../../../node_modules/prismjs/components/prism-bash.js","../../../../node_modules/prismjs/components/prism-json.js","../../src/components/Documentation/Documentation.jsx"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  borderTopStyle: 'solid',\n  borderLeftStyle: 'solid',\n  '&::before, &::after': {\n    content: '\"\"',\n    alignSelf: 'center'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation !== 'vertical' && {\n  '&::before, &::after': {\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    borderTopStyle: 'inherit'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    borderLeftStyle: 'inherit'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\n\n/**\n * The following flag is used to ensure that this component isn't tabbable i.e.\n * does not get highlight/focus inside of MUI List.\n */\nDivider.muiSkipListHighlight = true;\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/)\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiListItem', slot);\n}\nconst listItemClasses = generateUtilityClasses('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);\nexport default listItemClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemButton', slot);\n}\nconst listItemButtonClasses = generateUtilityClasses('MuiListItemButton', ['root', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'selected']);\nexport default listItemButtonClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemSecondaryActionClassesUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemSecondaryAction', slot);\n}\nconst listItemSecondaryActionClasses = generateUtilityClasses('MuiListItemSecondaryAction', ['root', 'disableGutters']);\nexport default listItemSecondaryActionClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ListContext from '../List/ListContext';\nimport { getListItemSecondaryActionClassesUtilityClass } from './listItemSecondaryActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disableGutters,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes);\n};\nconst ListItemSecondaryActionRoot = styled('div', {\n  name: 'MuiListItemSecondaryAction',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  right: 16,\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.disableGutters && {\n  right: 0\n}));\n\n/**\n * Must be used as the last child of ListItem to function properly.\n */\nconst ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemSecondaryAction'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    disableGutters: context.disableGutters\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemSecondaryActionRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default ListItemSecondaryAction;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"],\n  _excluded2 = [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"disablePadding\", \"divider\", \"focusVisibleClassName\", \"secondaryAction\", \"selected\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport { alpha } from '@mui/system/colorManipulator';\nimport isHostComponent from '@mui/utils/isHostComponent';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemClasses, { getListItemUtilityClass } from './listItemClasses';\nimport { listItemButtonClasses } from '../ListItemButton';\nimport ListItemSecondaryAction from '../ListItemSecondaryAction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    button,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],\n    container: ['container']\n  };\n  return composeClasses(slots, getListItemUtilityClass, classes);\n};\nexport const ListItemRoot = styled('div', {\n  name: 'MuiListItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  width: '100%',\n  boxSizing: 'border-box',\n  textAlign: 'left'\n}, !ownerState.disablePadding && _extends({\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, !!ownerState.secondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}), !!ownerState.secondaryAction && {\n  [`& > .${listItemButtonClasses.root}`]: {\n    paddingRight: 48\n  }\n}, {\n  [`&.${listItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.button && {\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  }\n}, ownerState.hasSecondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}));\nconst ListItemContainer = styled('li', {\n  name: 'MuiListItem',\n  slot: 'Container',\n  overridesResolver: (props, styles) => styles.container\n})({\n  position: 'relative'\n});\n\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItem'\n  });\n  const {\n      alignItems = 'center',\n      autoFocus = false,\n      button = false,\n      children: childrenProp,\n      className,\n      component: componentProp,\n      components = {},\n      componentsProps = {},\n      ContainerComponent = 'li',\n      ContainerProps: {\n        className: ContainerClassName\n      } = {},\n      dense = false,\n      disabled = false,\n      disableGutters = false,\n      disablePadding = false,\n      divider = false,\n      focusVisibleClassName,\n      secondaryAction,\n      selected = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  }), [alignItems, context.dense, dense, disableGutters]);\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp);\n\n  // v4 implementation, deprecated in v5, will be removed in v6\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  const ownerState = _extends({}, props, {\n    alignItems,\n    autoFocus,\n    button,\n    dense: childContext.dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  const Root = slots.root || components.Root || ListItemRoot;\n  const rootProps = slotProps.root || componentsProps.root || {};\n  const componentProps = _extends({\n    className: clsx(classes.root, rootProps.className, className),\n    disabled\n  }, other);\n  let Component = componentProp || 'li';\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(listItemClasses.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  // v4 implementation, deprecated in v5, will be removed in v6\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component;\n\n    // Avoid nesting of li > li.\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n    return /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: childContext,\n      children: /*#__PURE__*/_jsxs(ListItemContainer, _extends({\n        as: ContainerComponent,\n        className: clsx(classes.container, ContainerClassName),\n        ref: handleRef,\n        ownerState: ownerState\n      }, ContainerProps, {\n        children: [/*#__PURE__*/_jsx(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n          as: Component,\n          ownerState: _extends({}, ownerState, rootProps.ownerState)\n        }, componentProps, {\n          children: children\n        })), children.pop()]\n      }))\n    });\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      as: Component,\n      ref: handleRef\n    }, !isHostComponent(Root) && {\n      ownerState: _extends({}, ownerState, rootProps.ownerState)\n    }, componentProps, {\n      children: [children, secondaryAction && /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: secondaryAction\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the list item is a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  button: PropTypes.bool,\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children);\n\n    // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n    let secondaryActionIndex = -1;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    }\n\n    //  is ListItemSecondaryAction the last child of ListItem\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('MUI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   * @deprecated\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   * @deprecated\n   */\n  ContainerProps: PropTypes.object,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, all padding is removed.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The element to display at the end of ListItem.\n   */\n  secondaryAction: PropTypes.node,\n  /**\n   * Use to apply selected styling.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  selected: PropTypes.bool,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItem;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-5 14H7v-2h7zm3-4H7v-2h10zm0-4H7V7h10z\"\n}), 'Article');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m22.7 19-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4\"\n}), 'Build');","import {dequal} from 'dequal'\n\n/**\n * @type {Set<string>}\n */\nconst codesWarned = new Set()\n\nclass AssertionError extends Error {\n  name = /** @type {const} */ ('Assertion')\n  code = /** @type {const} */ ('ERR_ASSERTION')\n\n  /**\n   * Create an assertion error.\n   *\n   * @param {string} message\n   *   Message explaining error.\n   * @param {unknown} actual\n   *   Value.\n   * @param {unknown} expected\n   *   Baseline.\n   * @param {string} operator\n   *   Name of equality operation.\n   * @param {boolean} generated\n   *   Whether `message` is a custom message or not\n   * @returns\n   *   Instance.\n   */\n  // eslint-disable-next-line max-params\n  constructor(message, actual, expected, operator, generated) {\n    super(message)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n\n    /**\n     * @type {unknown}\n     */\n    this.actual = actual\n\n    /**\n     * @type {unknown}\n     */\n    this.expected = expected\n\n    /**\n     * @type {boolean}\n     */\n    this.generated = generated\n\n    /**\n     * @type {string}\n     */\n    this.operator = operator\n  }\n}\n\nclass DeprecationError extends Error {\n  name = /** @type {const} */ ('DeprecationWarning')\n\n  /**\n   * Create a deprecation message.\n   *\n   * @param {string} message\n   *   Message explaining deprecation.\n   * @param {string | undefined} code\n   *   Deprecation identifier; deprecation messages will be generated only once per code.\n   * @returns\n   *   Instance.\n   */\n  constructor(message, code) {\n    super(message)\n\n    /**\n     * @type {string | undefined}\n     */\n    this.code = code\n  }\n}\n\n/**\n * Wrap a function or class to show a deprecation message when first called.\n *\n * > 👉 **Important**: only shows a message when the `development` condition is\n * > used, does nothing in production.\n *\n * When the resulting wrapped `fn` is called, emits a warning once to\n * `console.error` (`stderr`).\n * If a code is given, one warning message will be emitted in total per code.\n *\n * @template {Function} T\n *   Function or class kind.\n * @param {T} fn\n *   Function or class.\n * @param {string} message\n *   Message explaining deprecation.\n * @param {string | null | undefined} [code]\n *   Deprecation identifier (optional); deprecation messages will be generated\n *   only once per code.\n * @returns {T}\n *   Wrapped `fn`.\n */\nexport function deprecate(fn, message, code) {\n  let warned = false\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  Object.setPrototypeOf(deprecated, fn)\n\n  // @ts-expect-error: it’s perfect, typescript…\n  return deprecated\n\n  /**\n   * @this {unknown}\n   * @param  {...Array<unknown>} args\n   * @returns {unknown}\n   */\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true\n\n      if (typeof code === 'string' && codesWarned.has(code)) {\n        // Empty.\n      } else {\n        console.error(new DeprecationError(message, code || undefined))\n\n        if (typeof code === 'string') codesWarned.add(code)\n      }\n    }\n\n    return new.target\n      ? Reflect.construct(fn, args, new.target)\n      : Reflect.apply(fn, this, args)\n  }\n}\n\n/**\n * Assert deep strict equivalence.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @template {unknown} T\n *   Expected kind.\n * @param {unknown} actual\n *   Value.\n * @param {T} expected\n *   Baseline.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected values to be deeply equal'`).\n * @returns {asserts actual is T}\n *   Nothing; throws when `actual` is not deep strict equal to `expected`.\n * @throws {AssertionError}\n *   Throws when `actual` is not deep strict equal to `expected`.\n */\nexport function equal(actual, expected, message) {\n  assert(\n    dequal(actual, expected),\n    actual,\n    expected,\n    'equal',\n    'Expected values to be deeply equal',\n    message\n  )\n}\n\n/**\n * Assert if `value` is truthy.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {unknown} value\n *   Value to assert.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected value to be truthy'`).\n * @returns {asserts value}\n *   Nothing; throws when `value` is falsey.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function ok(value, message) {\n  assert(\n    Boolean(value),\n    false,\n    true,\n    'ok',\n    'Expected value to be truthy',\n    message\n  )\n}\n\n/**\n * Assert that a code path never happens.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Unreachable'`).\n * @returns {never}\n *   Nothing; always throws.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function unreachable(message) {\n  assert(false, false, true, 'ok', 'Unreachable', message)\n}\n\n/**\n * @param {boolean} bool\n *   Whether to skip this operation.\n * @param {unknown} actual\n *   Actual value.\n * @param {unknown} expected\n *   Expected value.\n * @param {string} operator\n *   Operator.\n * @param {string} defaultMessage\n *   Default message for operation.\n * @param {Error | string | null | undefined} userMessage\n *   User-provided message.\n * @returns {asserts bool}\n *   Nothing; throws when falsey.\n */\n// eslint-disable-next-line max-params\nfunction assert(bool, actual, expected, operator, defaultMessage, userMessage) {\n  if (!bool) {\n    throw userMessage instanceof Error\n      ? userMessage\n      : new AssertionError(\n          userMessage || defaultMessage,\n          actual,\n          expected,\n          operator,\n          !userMessage\n        )\n  }\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65_279,\n  // Unicode Specials block.\n  replacementCharacter: 65_533 // `�`\n})\n","/**\n * This module is compiled away!\n *\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\n * sizes of certain sequences.\n * Additionally, there are a couple symbols used inside micromark.\n * These are all defined here, but compiled away by scripts.\n */\nexport const constants = /** @type {const} */ ({\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\n  contentTypeContent: 'content',\n  contentTypeDocument: 'document',\n  contentTypeFlow: 'flow',\n  contentTypeString: 'string',\n  contentTypeText: 'text',\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\n  htmlBasic: 6, // Symbol for `<div`\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\n  htmlComment: 2, // Symbol for `<!---->`\n  htmlComplete: 7, // Symbol for `<x>`\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\n  htmlInstruction: 3, // Symbol for `<?php?>`\n  htmlRawSizeMax: 8, // Length of `textarea`.\n  htmlRaw: 1, // Symbol for `<script>`\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\n  numericBaseDecimal: 10,\n  numericBaseHexadecimal: 0x10,\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\n  v8MaxSafeChunkSize: 10_000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\n})\n","/**\n * This module is compiled away!\n *\n * Here is the list of all types of tokens exposed by micromark, with a short\n * explanation of what they include and where they are found.\n * In picking names, generally, the rule is to be as explicit as possible\n * instead of reusing names.\n * For example, there is a `definitionDestination` and a `resourceDestination`,\n * instead of one shared name.\n */\n\n// Note: when changing the next record, you must also change `TokenTypeMap`\n// in `micromark-util-types/index.d.ts`.\nexport const types = /** @type {const} */ ({\n  // Generic type for data, such as in a title, a destination, etc.\n  data: 'data',\n\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\n  // Such as, between a fenced code fence and an info string.\n  whitespace: 'whitespace',\n\n  // Generic type for line endings (line feed, carriage return, carriage return +\n  // line feed).\n  lineEnding: 'lineEnding',\n\n  // A line ending, but ending a blank line.\n  lineEndingBlank: 'lineEndingBlank',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\n  // line.\n  linePrefix: 'linePrefix',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\n  // line.\n  lineSuffix: 'lineSuffix',\n\n  // Whole ATX heading:\n  //\n  // ```markdown\n  // #\n  // ## Alpha\n  // ### Bravo ###\n  // ```\n  //\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\n  atxHeading: 'atxHeading',\n\n  // Sequence of number signs in an ATX heading (`###`).\n  atxHeadingSequence: 'atxHeadingSequence',\n\n  // Content in an ATX heading (`alpha`).\n  // Includes text.\n  atxHeadingText: 'atxHeadingText',\n\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\n  autolink: 'autolink',\n\n  // Email autolink w/o markers (`admin@example.com`)\n  autolinkEmail: 'autolinkEmail',\n\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\n  autolinkMarker: 'autolinkMarker',\n\n  // Protocol autolink w/o markers (`https://example.com`)\n  autolinkProtocol: 'autolinkProtocol',\n\n  // A whole character escape (`\\-`).\n  // Includes `escapeMarker` and `characterEscapeValue`.\n  characterEscape: 'characterEscape',\n\n  // The escaped character (`-`).\n  characterEscapeValue: 'characterEscapeValue',\n\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\n  // Includes `characterReferenceMarker`, an optional\n  // `characterReferenceMarkerNumeric`, in which case an optional\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\n  characterReference: 'characterReference',\n\n  // The start or end marker (`&` or `;`).\n  characterReferenceMarker: 'characterReferenceMarker',\n\n  // Mark reference as numeric (`#`).\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\n\n  // Mark reference as numeric (`x` or `X`).\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\n\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\n  characterReferenceValue: 'characterReferenceValue',\n\n  // Whole fenced code:\n  //\n  // ````markdown\n  // ```js\n  // alert(1)\n  // ```\n  // ````\n  codeFenced: 'codeFenced',\n\n  // A fenced code fence, including whitespace, sequence, info, and meta\n  // (` ```js `).\n  codeFencedFence: 'codeFencedFence',\n\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\n\n  // Info word (`js`) in a fence.\n  // Includes string.\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\n\n  // Meta words (`highlight=\"1\"`) in a fence.\n  // Includes string.\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\n\n  // A line of code.\n  codeFlowValue: 'codeFlowValue',\n\n  // Whole indented code:\n  //\n  // ```markdown\n  //     alert(1)\n  // ```\n  //\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\n  codeIndented: 'codeIndented',\n\n  // A text code (``` `alpha` ```).\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\n  // `codeTextPadding`.\n  codeText: 'codeText',\n\n  codeTextData: 'codeTextData',\n\n  // A space or line ending right after or before a tick.\n  codeTextPadding: 'codeTextPadding',\n\n  // A text code fence (` `` `).\n  codeTextSequence: 'codeTextSequence',\n\n  // Whole content:\n  //\n  // ```markdown\n  // [a]: b\n  // c\n  // =\n  // d\n  // ```\n  //\n  // Includes `paragraph` and `definition`.\n  content: 'content',\n  // Whole definition:\n  //\n  // ```markdown\n  // [micromark]: https://github.com/micromark/micromark\n  // ```\n  //\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\n  definition: 'definition',\n\n  // Destination of a definition (`https://github.com/micromark/micromark` or\n  // `<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\n  definitionDestination: 'definitionDestination',\n\n  // Enclosed destination of a definition\n  // (`<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteralMarker` and optionally\n  // `definitionDestinationString`.\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\n\n  // Markers of an enclosed definition destination (`<` or `>`).\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\n\n  // Unenclosed destination of a definition\n  // (`https://github.com/micromark/micromark`).\n  // Includes `definitionDestinationString`.\n  definitionDestinationRaw: 'definitionDestinationRaw',\n\n  // Text in an destination (`https://github.com/micromark/micromark`).\n  // Includes string.\n  definitionDestinationString: 'definitionDestinationString',\n\n  // Label of a definition (`[micromark]`).\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\n  definitionLabel: 'definitionLabel',\n\n  // Markers of a definition label (`[` or `]`).\n  definitionLabelMarker: 'definitionLabelMarker',\n\n  // Value of a definition label (`micromark`).\n  // Includes string.\n  definitionLabelString: 'definitionLabelString',\n\n  // Marker between a label and a destination (`:`).\n  definitionMarker: 'definitionMarker',\n\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\n  definitionTitle: 'definitionTitle',\n\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\n  definitionTitleMarker: 'definitionTitleMarker',\n\n  // Data without markers in a title (`z`).\n  // Includes string.\n  definitionTitleString: 'definitionTitleString',\n\n  // Emphasis (`*alpha*`).\n  // Includes `emphasisSequence` and `emphasisText`.\n  emphasis: 'emphasis',\n\n  // Sequence of emphasis markers (`*` or `_`).\n  emphasisSequence: 'emphasisSequence',\n\n  // Emphasis text (`alpha`).\n  // Includes text.\n  emphasisText: 'emphasisText',\n\n  // The character escape marker (`\\`).\n  escapeMarker: 'escapeMarker',\n\n  // A hard break created with a backslash (`\\\\n`).\n  // Note: does not include the line ending.\n  hardBreakEscape: 'hardBreakEscape',\n\n  // A hard break created with trailing spaces (`  \\n`).\n  // Does not include the line ending.\n  hardBreakTrailing: 'hardBreakTrailing',\n\n  // Flow HTML:\n  //\n  // ```markdown\n  // <div\n  // ```\n  //\n  // Inlcudes `lineEnding`, `htmlFlowData`.\n  htmlFlow: 'htmlFlow',\n\n  htmlFlowData: 'htmlFlowData',\n\n  // HTML in text (the tag in `a <i> b`).\n  // Includes `lineEnding`, `htmlTextData`.\n  htmlText: 'htmlText',\n\n  htmlTextData: 'htmlTextData',\n\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\n  // `![alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  image: 'image',\n\n  // Whole link label (`[*alpha*]`).\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\n  label: 'label',\n\n  // Text in an label (`*alpha*`).\n  // Includes text.\n  labelText: 'labelText',\n\n  // Start a link label (`[`).\n  // Includes a `labelMarker`.\n  labelLink: 'labelLink',\n\n  // Start an image label (`![`).\n  // Includes `labelImageMarker` and `labelMarker`.\n  labelImage: 'labelImage',\n\n  // Marker of a label (`[` or `]`).\n  labelMarker: 'labelMarker',\n\n  // Marker to start an image (`!`).\n  labelImageMarker: 'labelImageMarker',\n\n  // End a label (`]`).\n  // Includes `labelMarker`.\n  labelEnd: 'labelEnd',\n\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  link: 'link',\n\n  // Whole paragraph:\n  //\n  // ```markdown\n  // alpha\n  // bravo.\n  // ```\n  //\n  // Includes text.\n  paragraph: 'paragraph',\n\n  // A reference (`[alpha]` or `[]`).\n  // Includes `referenceMarker` and an optional `referenceString`.\n  reference: 'reference',\n\n  // A reference marker (`[` or `]`).\n  referenceMarker: 'referenceMarker',\n\n  // Reference text (`alpha`).\n  // Includes string.\n  referenceString: 'referenceString',\n\n  // A resource (`(https://example.com \"alpha\")`).\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\n  // `whitespace` and `resourceTitle`.\n  resource: 'resource',\n\n  // A resource destination (`https://example.com`).\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\n  resourceDestination: 'resourceDestination',\n\n  // A literal resource destination (`<https://example.com>`).\n  // Includes `resourceDestinationLiteralMarker` and optionally\n  // `resourceDestinationString`.\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\n\n  // A resource destination marker (`<` or `>`).\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\n\n  // A raw resource destination (`https://example.com`).\n  // Includes `resourceDestinationString`.\n  resourceDestinationRaw: 'resourceDestinationRaw',\n\n  // Resource destination text (`https://example.com`).\n  // Includes string.\n  resourceDestinationString: 'resourceDestinationString',\n\n  // A resource marker (`(` or `)`).\n  resourceMarker: 'resourceMarker',\n\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\n  resourceTitle: 'resourceTitle',\n\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\n  resourceTitleMarker: 'resourceTitleMarker',\n\n  // Resource destination title (`alpha`).\n  // Includes string.\n  resourceTitleString: 'resourceTitleString',\n\n  // Whole setext heading:\n  //\n  // ```markdown\n  // alpha\n  // bravo\n  // =====\n  // ```\n  //\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\n  // `setextHeadingLine`.\n  setextHeading: 'setextHeading',\n\n  // Content in a setext heading (`alpha\\nbravo`).\n  // Includes text.\n  setextHeadingText: 'setextHeadingText',\n\n  // Underline in a setext heading, including whitespace suffix (`==`).\n  // Includes `setextHeadingLineSequence`.\n  setextHeadingLine: 'setextHeadingLine',\n\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\n\n  // Strong (`**alpha**`).\n  // Includes `strongSequence` and `strongText`.\n  strong: 'strong',\n\n  // Sequence of strong markers (`**` or `__`).\n  strongSequence: 'strongSequence',\n\n  // Strong text (`alpha`).\n  // Includes text.\n  strongText: 'strongText',\n\n  // Whole thematic break:\n  //\n  // ```markdown\n  // * * *\n  // ```\n  //\n  // Includes `thematicBreakSequence` and `whitespace`.\n  thematicBreak: 'thematicBreak',\n\n  // A sequence of one or more thematic break markers (`***`).\n  thematicBreakSequence: 'thematicBreakSequence',\n\n  // Whole block quote:\n  //\n  // ```markdown\n  // > a\n  // >\n  // > b\n  // ```\n  //\n  // Includes `blockQuotePrefix` and flow.\n  blockQuote: 'blockQuote',\n  // The `>` or `> ` of a block quote.\n  blockQuotePrefix: 'blockQuotePrefix',\n  // The `>` of a block quote prefix.\n  blockQuoteMarker: 'blockQuoteMarker',\n  // The optional ` ` of a block quote prefix.\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\n\n  // Whole ordered list:\n  //\n  // ```markdown\n  // 1. a\n  //    b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listOrdered: 'listOrdered',\n\n  // Whole unordered list:\n  //\n  // ```markdown\n  // - a\n  //   b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listUnordered: 'listUnordered',\n\n  // The indent of further list item lines.\n  listItemIndent: 'listItemIndent',\n\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\n  listItemMarker: 'listItemMarker',\n\n  // The thing that starts a list item, such as `1. `.\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\n  listItemPrefix: 'listItemPrefix',\n\n  // The whitespace after a marker.\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\n\n  // The numerical value of an ordered item.\n  listItemValue: 'listItemValue',\n\n  // Internal types used for subtokenizers, compiled away\n  chunkDocument: 'chunkDocument',\n  chunkContent: 'chunkContent',\n  chunkFlow: 'chunkFlow',\n  chunkText: 'chunkText',\n  chunkString: 'chunkString'\n})\n","/**\n * This module is compiled away!\n *\n * While micromark works based on character codes, this module includes the\n * string versions of ’em.\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n * are available here.\n */\nexport const values = /** @type {const} */ ({\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n})\n","import {constants} from 'micromark-util-symbol'\n\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < constants.v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(\n        chunkStart,\n        chunkStart + constants.v8MaxSafeChunkSize\n      )\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n\n      chunkStart += constants.v8MaxSafeChunkSize\n      start += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","import {codes, values} from 'micromark-util-symbol'\n\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < codes.ht ||\n    code === codes.vt ||\n    (code > codes.cr && code < codes.space) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > codes.tilde && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55_295 && code < 57_344) ||\n    // Noncharacters.\n    (code > 64_975 && code < 65_008) ||\n    /* eslint-disable no-bitwise */\n    (code & 65_535) === 65_535 ||\n    (code & 65_535) === 65_534 ||\n    /* eslint-enable no-bitwise */\n    // Out of range\n    code > 1_114_111\n  ) {\n    return values.replacementCharacter\n  }\n\n  return String.fromCodePoint(code)\n}\n","import {values} from 'micromark-util-symbol'\n\n/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport {codes} from 'micromark-util-symbol'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < codes.space || code === codes.del)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < codes.horizontalTab\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < codes.nul || code === codes.space)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return (\n    code === codes.horizontalTab ||\n    code === codes.virtualSpace ||\n    code === codes.space\n  )\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\nimport {codes, values} from 'micromark-util-symbol'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === codes.percentSign &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = values.replacementCharacter\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const content = {tokenize: initializeContent}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, contentStart, types.linePrefix)\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected anything other than a line ending or EOF'\n    )\n    effects.enter(types.paragraph)\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(types.chunkText, {\n      contentType: constants.contentTypeText,\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === codes.eof) {\n      effects.exit(types.chunkText)\n      effects.exit(types.paragraph)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit(types.chunkText)\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const document = {tokenize: initializeDocument}\n\n/** @type {Construct} */\nconst containerConstruct = {tokenize: tokenizeContainer}\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      assert(\n        item[0].continuation,\n        'expected `continuation` to be defined on container construct'\n      )\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined after continuation'\n    )\n\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = {...point}\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    assert(\n      self.currentConstruct,\n      'expected `currentConstruct` to be defined on tokenizer'\n    )\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined on tokenizer'\n    )\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === codes.eof) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter(types.chunkFlow, {\n      _tokenizer: childFlow,\n      contentType: constants.contentTypeFlow,\n      previous: childToken\n    })\n\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === codes.eof) {\n      writeToChild(effects.exit(types.chunkFlow), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit(types.chunkFlow))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    assert(childFlow, 'expected `childFlow` to be defined when continuing')\n    const stream = self.sliceStream(token)\n    if (endOfFile) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = {...point}\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      assert(\n        entry[0].exit,\n        'expected `exit` to be defined on container construct'\n      )\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined when closing flow'\n    )\n    assert(childFlow, 'expected `childFlow` to be defined when closing it')\n    childFlow.write([codes.eof])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n  assert(\n    this.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    types.linePrefix,\n    this.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize\n  )\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes, constants} from 'micromark-util-symbol'\n\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === codes.eof ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return constants.characterGroupWhitespace\n  }\n\n  if (unicodePunctuation(code)) {\n    return constants.characterGroupPunctuation\n  }\n}\n","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n\n          const start = {...events[open][1].end}\n          const end = {...events[index][1].start}\n          movePoint(start, -use)\n          movePoint(end, use)\n\n          openingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start,\n            end: {...events[open][1].end}\n          }\n          closingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start: {...events[index][1].start},\n            end\n          }\n          text = {\n            type: use > 1 ? types.strongText : types.emphasisText,\n            start: {...events[open][1].end},\n            end: {...events[index][1].start}\n          }\n          group = {\n            type: use > 1 ? types.strong : types.emphasis,\n            start: {...openingSequence.start},\n            end: {...closingSequence.end}\n          }\n\n          events[open][1].end = {...openingSequence.start}\n          events[index][1].start = {...closingSequence.end}\n\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.insideSpan.null,\n            'expected `insideSpan` to be populated'\n          )\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(\n      code === codes.asterisk || code === codes.underscore,\n      'expected asterisk or underscore'\n    )\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n    assert(attentionMarkers, 'expected `attentionMarkers` to be populated')\n\n    const open =\n      !after ||\n      (after === constants.characterGroupPunctuation && before) ||\n      attentionMarkers.includes(code)\n    const close =\n      !before ||\n      (before === constants.characterGroupPunctuation && after) ||\n      attentionMarkers.includes(previous)\n\n    token._open = Boolean(\n      marker === codes.asterisk ? open : open && (before || !close)\n    )\n    token._close = Boolean(\n      marker === codes.asterisk ? close : close && (after || !open)\n    )\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {\n  asciiAlphanumeric,\n  asciiAlpha,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const autolink = {name: 'autolink', tokenize: tokenizeAutolink}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.autolink)\n    effects.enter(types.autolinkMarker)\n    effects.consume(code)\n    effects.exit(types.autolinkMarker)\n    effects.enter(types.autolinkProtocol)\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    if (code === codes.atSign) {\n      return nok(code)\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      code === codes.plusSign ||\n      code === codes.dash ||\n      code === codes.dot ||\n      asciiAlphanumeric(code)\n    ) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === codes.colon) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === codes.plusSign ||\n        code === codes.dash ||\n        code === codes.dot ||\n        asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkSchemeSizeMax\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.autolinkProtocol)\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.lessThan ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === codes.atSign) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === codes.dot) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === codes.greaterThan) {\n      // Exit, then change the token type.\n      effects.exit(types.autolinkProtocol).type = types.autolinkEmail\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if (\n      (code === codes.dash || asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkDomainSizeMax\n    ) {\n      const next = code === codes.dash ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const blankLine = {partial: true, tokenize: tokenizeBlankLine}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.linePrefix)(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {tokenize: tokenizeBlockQuoteContinuation},\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.greaterThan) {\n      const state = self.containerState\n\n      assert(state, 'expected `containerState` to be defined in container')\n\n      if (!state.open) {\n        effects.enter(types.blockQuote, {_container: true})\n        state.open = true\n      }\n\n      effects.enter(types.blockQuotePrefix)\n      effects.enter(types.blockQuoteMarker)\n      effects.consume(code)\n      effects.exit(types.blockQuoteMarker)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.blockQuotePrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.blockQuotePrefixWhitespace)\n      effects.exit(types.blockQuotePrefix)\n      return ok\n    }\n\n    effects.exit(types.blockQuotePrefix)\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      return factorySpace(\n        effects,\n        contBefore,\n        types.linePrefix,\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : constants.tabSize\n      )(code)\n    }\n\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(types.blockQuote)\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {asciiPunctuation} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.characterEscape)\n    effects.enter(types.escapeMarker)\n    effects.consume(code)\n    effects.exit(types.escapeMarker)\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(types.characterEscapeValue)\n      effects.consume(code)\n      effects.exit(types.characterEscapeValue)\n      effects.exit(types.characterEscape)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.ampersand, 'expected `&`')\n    effects.enter(types.characterReference)\n    effects.enter(types.characterReferenceMarker)\n    effects.consume(code)\n    effects.exit(types.characterReferenceMarker)\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.characterReferenceMarkerNumeric)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerNumeric)\n      return numeric\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceNamedSizeMax\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === codes.uppercaseX || code === codes.lowercaseX) {\n      effects.enter(types.characterReferenceMarkerHexadecimal)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerHexadecimal)\n      effects.enter(types.characterReferenceValue)\n      max = constants.characterReferenceHexadecimalSizeMax\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceDecimalSizeMax\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === codes.semicolon && size) {\n      const token = effects.exit(types.characterReferenceValue)\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(types.characterReferenceMarker)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarker)\n      effects.exit(types.characterReference)\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {partial: true, tokenize: tokenizeCloseStart}\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    assert(\n      code === codes.graveAccent || code === codes.tilde,\n      'expected `` ` `` or `~`'\n    )\n\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === types.linePrefix\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n\n    marker = code\n    effects.enter(types.codeFenced)\n    effects.enter(types.codeFencedFence)\n    effects.enter(types.codeFencedFenceSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    if (sizeOpen < constants.codeFencedSequenceSizeMin) {\n      return nok(code)\n    }\n\n    effects.exit(types.codeFencedFenceSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, types.whitespace)(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFencedFence)\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFencedFenceInfo)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return infoBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return factorySpace(effects, metaBefore, types.whitespace)(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n\n    effects.enter(types.codeFencedFenceMeta)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceMeta)\n      return infoBefore(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          types.linePrefix,\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return beforeContentChunk(code)\n    }\n\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(types.codeFenced)\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      assert(markdownLineEnding(code), 'expected eol')\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      // To do: `enter` here or in next state?\n      effects.enter(types.codeFencedFence)\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            types.linePrefix,\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : constants.tabSize\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(types.codeFencedFenceSequence)\n        return sequenceClose(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n\n      if (size >= sizeOpen) {\n        effects.exit(types.codeFencedFenceSequence)\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, types.whitespace)(code)\n          : sequenceCloseAfter(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit(types.codeFencedFence)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {partial: true, tokenize: tokenizeFurtherStart}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n    assert(markdownSpace(code))\n    effects.enter(types.codeIndented)\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.eof) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(types.codeIndented)\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? ok(code)\n      : markdownLineEnding(code)\n        ? furtherStart(code)\n        : nok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === types.lineEnding ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === types.lineEnding ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === types.codeTextData) {\n        // Then we have padding.\n        events[headEnterIndex][1].type = types.codeTextPadding\n        events[tailExitIndex][1].type = types.codeTextPadding\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (\n        index !== tailExitIndex &&\n        events[index][1].type !== types.lineEnding\n      ) {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === types.lineEnding\n    ) {\n      events[enter][1].type = types.codeTextData\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== codes.graveAccent ||\n    this.events[this.events.length - 1][1].type === types.characterEscape\n  )\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.graveAccent, 'expected `` ` ``')\n    assert(previous.call(self, self.previous), 'expected correct previous')\n    effects.enter(types.codeText)\n    effects.enter(types.codeTextSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit(types.codeTextSequence)\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === codes.space) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === codes.graveAccent) {\n      token = effects.enter(types.codeTextSequence)\n      size = 0\n      return sequenceClose(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return between\n    }\n\n    // Data.\n    effects.enter(types.codeTextData)\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.graveAccent ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(types.codeTextData)\n      return between(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(types.codeTextSequence)\n      effects.exit(types.codeText)\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = types.codeTextData\n    return data(code)\n  }\n}\n","import {constants} from 'micromark-util-symbol'\n\n/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : []\n    /** @type {Array<T>} */\n    this.right = []\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError(\n        'Cannot access index `' +\n          index +\n          '` in a splice buffer of size `' +\n          (this.left.length + this.right.length) +\n          '`'\n      )\n    }\n\n    if (index < this.left.length) return this.left[index]\n    return this.right[this.right.length - index + this.left.length - 1]\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0)\n    return this.right.pop()\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop =\n      end === null || end === undefined ? Number.POSITIVE_INFINITY : end\n\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop)\n    }\n\n    if (start > this.left.length) {\n      return this.right\n        .slice(\n          this.right.length - stop + this.left.length,\n          this.right.length - start + this.left.length\n        )\n        .reverse()\n    }\n\n    return this.left\n      .slice(start)\n      .concat(\n        this.right.slice(this.right.length - stop + this.left.length).reverse()\n      )\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0\n\n    this.setCursor(Math.trunc(start))\n    const removed = this.right.splice(\n      this.right.length - count,\n      Number.POSITIVE_INFINITY\n    )\n    if (items) chunkedPush(this.left, items)\n    return removed.reverse()\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    return this.left.pop()\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    this.left.push(item)\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    chunkedPush(this.left, items)\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0)\n    this.right.push(item)\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0)\n    chunkedPush(this.right, items.reverse())\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (\n      n === this.left.length ||\n      (n > this.left.length && this.right.length === 0) ||\n      (n < 0 && this.left.length === 0)\n    )\n      return\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY)\n      chunkedPush(this.right, removed.reverse())\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(\n        this.left.length + this.right.length - n,\n        Number.POSITIVE_INFINITY\n      )\n      chunkedPush(this.left, removed.reverse())\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0\n\n  if (right.length < constants.v8MaxSafeChunkSize) {\n    list.push(...right)\n  } else {\n    while (chunkStart < right.length) {\n      list.push(\n        ...right.slice(chunkStart, chunkStart + constants.v8MaxSafeChunkSize)\n      )\n      chunkStart += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, types} from 'micromark-util-symbol'\nimport {SpliceBuffer} from './lib/splice-buffer.js'\n\n// Hidden API exposed for testing.\nexport {SpliceBuffer} from './lib/splice-buffer.js'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  const events = new SpliceBuffer(eventsArray)\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events.get(index)\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === types.chunkFlow &&\n      events.get(index - 1)[1].type === types.listItemPrefix\n    ) {\n      assert(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.lineEndingBlank\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.content\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === types.content) {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === types.chunkText) {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex)\n\n        if (\n          otherEvent[1].type === types.lineEnding ||\n          otherEvent[1].type === types.lineEndingBlank\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = types.lineEndingBlank\n            }\n\n            otherEvent[1].type = types.lineEnding\n            lineIndex = otherIndex\n          }\n        } else if (\n          otherEvent[1].type === types.linePrefix ||\n          otherEvent[1].type === types.listItemIndent\n        ) {\n          // Move past.\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {...events.get(lineIndex)[1].start}\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        events.splice(lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0))\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1]\n  const context = events.get(eventIndex)[2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  assert(token.contentType, 'expected `contentType` on subtokens')\n\n  let tokenizer = token._tokenizer\n\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start)\n\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true\n    }\n  }\n\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n\n    assert(\n      !previous || current.previous === previous,\n      'expected previous to match'\n    )\n    assert(!previous || previous.next === current, 'expected next to match')\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(codes.eof)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      assert(current, 'expected a current token')\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n    assert(!current.next, 'expected no next token')\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    assert(start !== undefined, 'expected a start position when splicing')\n    jumps.push([start, start + slice.length - 1])\n    events.splice(start, 2, slice)\n  }\n\n  jumps.reverse()\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {resolve: resolveContent, tokenize: tokenizeContent}\n\n/** @type {Construct} */\nconst continuationConstruct = {partial: true, tokenize: tokenizeContinuation}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected no eof or eol'\n    )\n\n    effects.enter(types.content)\n    previous = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === codes.eof) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(types.chunkContent)\n    effects.exit(types.content)\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.consume(code)\n    effects.exit(types.chunkContent)\n    assert(previous, 'expected previous token')\n    previous.next = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent,\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.exit(types.chunkContent)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, prefixed, types.linePrefix)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return enclosed\n    }\n\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === codes.eof ||\n        code === codes.rightParenthesis ||\n        markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (balance < limit && code === codes.leftParenthesis) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n\n    if (code === codes.rightParenthesis) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.leftParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return raw\n    }\n\n    return raw(code)\n  }\n}\n","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > constants.linkReferenceSizeMax ||\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      (code === codes.rightSquareBracket && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === codes.caret &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return atBreak\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      code === codes.rightSquareBracket ||\n      markdownLineEnding(code) ||\n      size++ > constants.linkReferenceSizeMax\n    ) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n}\n","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === codes.leftParenthesis ? codes.rightParenthesis : code\n      return begin\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return factorySpace(effects, atBreak, types.linePrefix)\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === codes.backslash) {\n      effects.consume(code)\n      return inside\n    }\n\n    return inside(code)\n  }\n}\n","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol'\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? types.linePrefix : types.lineSuffix\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const definition = {name: 'definition', tokenize: tokenizeDefinition}\n\n/** @type {Construct} */\nconst titleBefore = {partial: true, tokenize: tokenizeTitleBefore}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(types.definition)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionLabel,\n      types.definitionLabelMarker,\n      types.definitionLabelString\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === codes.colon) {\n      effects.enter(types.definitionMarker)\n      effects.consume(code)\n      effects.exit(types.definitionMarker)\n      return markerAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionDestination,\n      types.definitionDestinationLiteral,\n      types.definitionDestinationLiteralMarker,\n      types.definitionDestinationRaw,\n      types.definitionDestinationString\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, types.whitespace)(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.definition)\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      types.definitionTitle,\n      types.definitionTitleMarker,\n      types.definitionTitleString\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          titleAfterOptionalWhitespace,\n          types.whitespace\n        )(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.hardBreakEscape)\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(types.hardBreakEscape)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === types.whitespace) {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === types.whitespace\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === types.atxHeadingSequence &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === types.whitespace))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: types.atxHeadingText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: types.chunkText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: constants.contentTypeText\n    }\n\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(types.atxHeading)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.numberSign, 'expected `#`')\n    effects.enter(types.atxHeadingSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (\n      code === codes.numberSign &&\n      size++ < constants.atxHeadingOpeningFenceSizeMax\n    ) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\n      effects.exit(types.atxHeadingSequence)\n      return atBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.atxHeadingSequence)\n      return sequenceFurther(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.atxHeading)\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, types.whitespace)(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(types.atxHeadingText)\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === codes.numberSign) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n\n    effects.exit(types.atxHeadingSequence)\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.numberSign ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.atxHeadingText)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {\n  asciiAlphanumeric,\n  asciiAlpha,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {partial: true, tokenize: tokenizeBlankLineBefore}\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === types.htmlFlow\n    ) {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === types.linePrefix) {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlFlow)\n    effects.enter(types.htmlFlowData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      marker = constants.htmlInstruction\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      assert(code !== null) // Always the case.\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      marker = constants.htmlComment\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      marker = constants.htmlCdata\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = constants.htmlDeclaration\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n\n      return cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      assert(code !== null) // Always the case.\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === codes.eof ||\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === codes.slash\n      const name = buffer.toLowerCase()\n\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = constants.htmlRaw\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = constants.htmlBasic\n\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      marker = constants.htmlComplete\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n          ? completeClosingTagAfter(code)\n          : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.slash ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownSpace(code)\n    ) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === codes.lessThan && marker === constants.htmlRaw) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === codes.greaterThan && marker === constants.htmlDeclaration) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === codes.questionMark && marker === constants.htmlInstruction) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === codes.rightSquareBracket && marker === constants.htmlCdata) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n\n    if (\n      markdownLineEnding(code) &&\n      (marker === constants.htmlBasic || marker === constants.htmlComplete)\n    ) {\n      effects.exit(types.htmlFlowData)\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationStart(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    assert(markdownLineEnding(code))\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n\n    effects.enter(types.htmlFlowData)\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === codes.greaterThan) {\n      const name = buffer.toLowerCase()\n\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n\n      return continuation(code)\n    }\n\n    if (asciiAlpha(code) && buffer.length < constants.htmlRawSizeMax) {\n      assert(code !== null) // Always the case.\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationAfter(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(types.htmlFlow)\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlphanumeric,\n  asciiAlpha,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const htmlText = {name: 'htmlText', tokenize: tokenizeHtmlText}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlText)\n    effects.enter(types.htmlTextData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === codes.greaterThan\n      ? end(code)\n      : code === codes.dash\n        ? commentClose(code)\n        : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === codes.eof || code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === codes.greaterThan ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      effects.exit(types.htmlTextData)\n      effects.exit(types.htmlText)\n      return ok\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    assert(returnState, 'expected return state')\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.exit(types.htmlTextData)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          types.linePrefix,\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : constants.tabSize\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(types.htmlTextData)\n    return returnState(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {tokenize: tokenizeResource}\n/** @type {Construct} */\nconst referenceFullConstruct = {tokenize: tokenizeReferenceFull}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {tokenize: tokenizeReferenceCollapsed}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Array<Event>} */\n  const newEvents = []\n  while (++index < events.length) {\n    const token = events[index][1]\n    newEvents.push(events[index])\n\n    if (\n      token.type === types.labelImage ||\n      token.type === types.labelLink ||\n      token.type === types.labelEnd\n    ) {\n      // Remove the marker.\n      const offset = token.type === types.labelImage ? 4 : 2\n      token.type = types.data\n      index += offset\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents)\n  }\n\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === types.link ||\n        (token.type === types.labelLink && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === types.labelLink) {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === types.labelImage || token.type === types.labelLink) &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== types.labelLink) {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === types.labelEnd) {\n      close = index\n    }\n  }\n\n  assert(open !== undefined, '`open` is supposed to be found')\n  assert(close !== undefined, '`close` is supposed to be found')\n\n  const group = {\n    type: events[open][1].type === types.labelLink ? types.link : types.image,\n    start: {...events[open][1].start},\n    end: {...events[events.length - 1][1].end}\n  }\n\n  const label = {\n    type: types.label,\n    start: {...events[open][1].start},\n    end: {...events[close][1].end}\n  }\n\n  const text = {\n    type: types.labelText,\n    start: {...events[open + offset + 2][1].end},\n    end: {...events[close - 2][1].start}\n  }\n\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n  assert(\n    context.parser.constructs.insideSpan.null,\n    'expected `insideSpan.null` to be populated'\n  )\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n\n  splice(events, open, events.length, media)\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === types.labelImage ||\n        self.events[index][1].type === types.labelLink) &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.rightSquareBracket, 'expected `]`')\n\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({start: labelStart.end, end: self.now()})\n      )\n    )\n    effects.enter(types.labelEnd)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelEnd)\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === codes.leftParenthesis) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === codes.leftSquareBracket) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    assert(code === codes.leftParenthesis, 'expected left paren')\n    effects.enter(types.resource)\n    effects.enter(types.resourceMarker)\n    effects.consume(code)\n    effects.exit(types.resourceMarker)\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === codes.rightParenthesis) {\n      return resourceEnd(code)\n    }\n\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      types.resourceDestination,\n      types.resourceDestinationLiteral,\n      types.resourceDestinationLiteralMarker,\n      types.resourceDestinationRaw,\n      types.resourceDestinationString,\n      constants.linkResourceDestinationBalanceMax\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        types.resourceTitle,\n        types.resourceTitleMarker,\n        types.resourceTitleString\n      )(code)\n    }\n\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === codes.rightParenthesis) {\n      effects.enter(types.resourceMarker)\n      effects.consume(code)\n      effects.exit(types.resourceMarker)\n      effects.exit(types.resource)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      types.reference,\n      types.referenceMarker,\n      types.referenceString\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    effects.enter(types.reference)\n    effects.enter(types.referenceMarker)\n    effects.consume(code)\n    effects.exit(types.referenceMarker)\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.enter(types.referenceMarker)\n      effects.consume(code)\n      effects.exit(types.referenceMarker)\n      effects.exit(types.reference)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {codes, types} from 'micromark-util-symbol'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.exclamationMark, 'expected `!`')\n    effects.enter(types.labelImage)\n    effects.enter(types.labelImageMarker)\n    effects.consume(code)\n    effects.exit(types.labelImageMarker)\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.leftSquareBracket) {\n      effects.enter(types.labelMarker)\n      effects.consume(code)\n      effects.exit(types.labelMarker)\n      effects.exit(types.labelImage)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {codes, types} from 'micromark-util-symbol'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(types.labelLink)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelLink)\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const lineEnding = {name: 'lineEnding', tokenize: tokenizeLineEnding}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, ok, types.linePrefix)\n  }\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(types.thematicBreak)\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(\n      code === codes.asterisk ||\n        code === codes.dash ||\n        code === codes.underscore,\n      'expected `*`, `-`, or `_`'\n    )\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(types.thematicBreakSequence)\n      return sequence(code)\n    }\n\n    if (\n      size >= constants.thematicBreakMarkerCountMin &&\n      (code === codes.eof || markdownLineEnding(code))\n    ) {\n      effects.exit(types.thematicBreak)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit(types.thematicBreakSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, types.whitespace)(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {tokenize: tokenizeListContinuation},\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n}\n\n/** @type {Construct} */\nconst indentConstruct = {partial: true, tokenize: tokenizeIndent}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === types.linePrefix\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(self.containerState, 'expected state')\n    const kind =\n      self.containerState.type ||\n      (code === codes.asterisk || code === codes.plusSign || code === codes.dash\n        ? types.listUnordered\n        : types.listOrdered)\n\n    if (\n      kind === types.listUnordered\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {_container: true})\n      }\n\n      if (kind === types.listUnordered) {\n        effects.enter(types.listItemPrefix)\n        return code === codes.asterisk || code === codes.dash\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === codes.digit1) {\n        effects.enter(types.listItemPrefix)\n        effects.enter(types.listItemValue)\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    assert(self.containerState, 'expected state')\n    if (asciiDigit(code) && ++size < constants.listItemValueSizeMax) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === codes.rightParenthesis || code === codes.dot)\n    ) {\n      effects.exit(types.listItemValue)\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    assert(self.containerState, 'expected state')\n    assert(code !== codes.eof, 'eof (`null`) is not a marker')\n    effects.enter(types.listItemMarker)\n    effects.consume(code)\n    effects.exit(types.listItemMarker)\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.listItemPrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.listItemPrefixWhitespace)\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit(types.listItemPrefix), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  self.containerState._closeFlow = undefined\n\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    assert(typeof self.containerState.size === 'number', 'expected size')\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      types.listItemIndent,\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    assert(self.containerState, 'expected state')\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    assert(self.containerState, 'expected state')\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      types.linePrefix,\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : constants.tabSize\n    )(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  assert(typeof self.containerState.size === 'number', 'expected size')\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemIndent,\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    assert(self.containerState, 'expected state')\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.listItemIndent &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  assert(this.containerState, 'expected state')\n  assert(typeof this.containerState.type === 'string', 'expected type')\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n  assert(\n    self.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemPrefixWhitespace,\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === types.listItemPrefixWhitespace\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === types.content) {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === types.paragraph) {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === types.content) {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === types.definition) {\n        definition = index\n      }\n    }\n  }\n\n  assert(text !== undefined, 'expected a `text` index to be found')\n  assert(content !== undefined, 'expected a `text` index to be found')\n  assert(events[content][2] === context, 'enter context should be same')\n  assert(\n    events[events.length - 1][2] === context,\n    'enter context should be same'\n  )\n  const heading = {\n    type: types.setextHeading,\n    start: {...events[content][1].start},\n    end: {...events[events.length - 1][1].end}\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = types.setextHeadingText\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = {...events[definition][1].end}\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n\n    assert(\n      code === codes.dash || code === codes.equalsTo,\n      'expected `=` or `-`'\n    )\n\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== types.lineEnding &&\n        self.events[index][1].type !== types.linePrefix &&\n        self.events[index][1].type !== types.content\n      ) {\n        paragraph = self.events[index][1].type === types.paragraph\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(types.setextHeadingLine)\n      marker = code\n      return before(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(types.setextHeadingLineSequence)\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    effects.exit(types.setextHeadingLineSequence)\n\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.lineSuffix)(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.setextHeadingLine)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const flow = {tokenize: initializeFlow}\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        types.linePrefix\n      )\n    )\n  )\n\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\nexport const resolver = {resolveAll: createResolver()}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    ),\n    tokenize: initializeText\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === codes.eof) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter(types.data)\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(types.data)\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === codes.eof) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        // Always populated by defaults.\n        assert(Array.isArray(list), 'expected `disable.null` to be populated')\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === types.data) {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== types.data) {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === types.lineEnding) &&\n      events[eventIndex - 1][1].type === types.data\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === codes.space) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === codes.horizontalTab) {\n          tabs = true\n          size++\n        } else if (chunk === codes.virtualSpace) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length ||\n            tabs ||\n            size < constants.hardBreakPrefixSizeMin\n              ? types.lineSuffix\n              : types.hardBreakTrailing,\n          start: {\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {...data.end}\n        }\n\n        data.end = {...token.start}\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {codes} from 'micromark-util-symbol'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [codes.asterisk]: list,\n  [codes.plusSign]: list,\n  [codes.dash]: list,\n  [codes.digit0]: list,\n  [codes.digit1]: list,\n  [codes.digit2]: list,\n  [codes.digit3]: list,\n  [codes.digit4]: list,\n  [codes.digit5]: list,\n  [codes.digit6]: list,\n  [codes.digit7]: list,\n  [codes.digit8]: list,\n  [codes.digit9]: list,\n  [codes.greaterThan]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [codes.leftSquareBracket]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [codes.horizontalTab]: codeIndented,\n  [codes.virtualSpace]: codeIndented,\n  [codes.space]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [codes.numberSign]: headingAtx,\n  [codes.asterisk]: thematicBreak,\n  [codes.dash]: [setextUnderline, thematicBreak],\n  [codes.lessThan]: htmlFlow,\n  [codes.equalsTo]: setextUnderline,\n  [codes.underscore]: thematicBreak,\n  [codes.graveAccent]: codeFenced,\n  [codes.tilde]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [codes.ampersand]: characterReference,\n  [codes.backslash]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [codes.carriageReturn]: lineEnding,\n  [codes.lineFeed]: lineEnding,\n  [codes.carriageReturnLineFeed]: lineEnding,\n  [codes.exclamationMark]: labelStartImage,\n  [codes.ampersand]: characterReference,\n  [codes.asterisk]: attention,\n  [codes.lessThan]: [autolink, htmlText],\n  [codes.leftSquareBracket]: labelStartLink,\n  [codes.backslash]: [hardBreakEscape, characterEscape],\n  [codes.rightSquareBracket]: labelEnd,\n  [codes.underscore]: attention,\n  [codes.graveAccent]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {null: [attention, resolveText]}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {null: [codes.asterisk, codes.underscore]}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {null: []}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport createDebug from 'debug'\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, values} from 'micromark-util-symbol'\n\nconst debug = createDebug('micromark')\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: (from && from.line) || 1,\n    column: (from && from.column) || 1,\n    offset: (from && from.offset) || 0\n  }\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {interrupt: true})\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: codes.eof,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: codes.eof,\n    sliceSerialize,\n    sliceStream,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== codes.eof) {\n      return []\n    }\n\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {_bufferIndex, _index, line, column, offset} = point\n    return {_bufferIndex, _index, line, column, offset}\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n    debug('position: define skip: `%j`', point)\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    assert(consumed === true, 'expected character to be consumed')\n    consumed = undefined\n    debug('main: passing `%s` to %s', code, state && state.name)\n    expectedCode = code\n    assert(typeof state === 'function', 'expected state')\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    assert(code === expectedCode, 'expected given code to equal expected code')\n\n    debug('consume: `%s`', code)\n\n    assert(\n      consumed === undefined,\n      'expected code to not have been consumed: this might be because `return x(code)` instead of `return x` was used'\n    )\n    assert(\n      code === null\n        ? context.events.length === 0 ||\n            context.events[context.events.length - 1][0] === 'exit'\n        : context.events[context.events.length - 1][0] === 'enter',\n      'expected last token to be open'\n    )\n\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === codes.carriageReturnLineFeed ? 2 : 1\n      accountForPotentialSkip()\n      debug('position: after eol: `%j`', point)\n    } else if (code !== codes.virtualSpace) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      if (\n        point._bufferIndex ===\n        // Points w/ non-negative `_bufferIndex` reference\n        // strings.\n        /** @type {string} */ (chunks[point._index]).length\n      ) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n    debug('enter: `%s`', type)\n\n    context.events.push(['enter', token, context])\n\n    stack.push(token)\n\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n\n    const token = stack.pop()\n    assert(token, 'cannot close w/o open tokens')\n    token.end = now()\n\n    assert(type === token.type, 'expected exit token to match current token')\n\n    assert(\n      !(\n        token.start._index === token.end._index &&\n        token.start._bufferIndex === token.end._bufferIndex\n      ),\n      'expected non-empty token (`' + type + '`)'\n    )\n\n    debug('exit: `%s`', token.type)\n    context.events.push(['exit', token, context])\n\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n          ? // Looks like a construct.\n            handleListOfConstructs([/** @type {Construct} */ (constructs)])\n          : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(left) ? left : left ? [left] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          assert(bogusState, 'expected `bogusState` to be given')\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.disable.null,\n            'expected `disable.null` to be populated'\n          )\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n\n    assert(\n      construct.partial ||\n        context.events.length === 0 ||\n        context.events[context.events.length - 1][0] === 'exit',\n      'expected last token to end'\n    )\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n\n    return {from: startEventsIndex, restore}\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n      debug('position: restore: `%j`', point)\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n\n  if (startIndex === endIndex) {\n    assert(endBufferIndex > -1, 'expected non-negative end buffer index')\n    assert(startBufferIndex > -1, 'expected non-negative start buffer index')\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        assert(startBufferIndex === 0, 'expected `startBufferIndex` to be `0`')\n        view.shift()\n      }\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = expandTabs ? values.space : values.ht\n\n          break\n        }\n\n        case codes.virtualSpace: {\n          if (!expandTabs && atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport * as defaultConstructs from './constructs.js'\nimport {createTokenizer} from './create-tokenizer.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs = /** @type {FullNormalizedExtension} */ (\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n  )\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  }\n\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nimport {codes, constants} from 'micromark-util-symbol'\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === codes.byteOrderMarker) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (\n        code === codes.lf &&\n        startPosition === endPosition &&\n        atCarriageReturn\n      ) {\n        chunks.push(codes.carriageReturnLineFeed)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(codes.carriageReturn)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case codes.nul: {\n            chunks.push(codes.replacementCharacter)\n            column++\n\n            break\n          }\n\n          case codes.ht: {\n            next = Math.ceil(column / constants.tabSize) * constants.tabSize\n            chunks.push(codes.horizontalTab)\n            while (column++ < next) chunks.push(codes.virtualSpace)\n\n            break\n          }\n\n          case codes.lf: {\n            chunks.push(codes.lineFeed)\n            column = 1\n\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(codes.carriageReturn)\n      if (buffer) chunks.push(buffer)\n      chunks.push(codes.eof)\n    }\n\n    return chunks\n  }\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {codes, constants} from 'micromark-util-symbol'\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n\n  if (head === codes.numberSign) {\n    const head = $2.charCodeAt(1)\n    const hex = head === codes.lowercaseX || head === codes.uppercaseX\n    return decodeNumericCharacterReference(\n      $2.slice(hex ? 2 : 1),\n      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal\n    )\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parse(options)\n        .document()\n        .write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {type: 'root', children: []}\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === types.listOrdered ||\n        events[index][1].type === types.listUnordered\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          assert(typeof tail === 'number', 'expected list ot be open')\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {sliceSerialize: events[index][2].sliceSerialize},\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0 ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      switch (event[1].type) {\n        case types.listUnordered:\n        case types.listOrdered:\n        case types.blockQuote: {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n\n          atMarker = undefined\n\n          break\n        }\n\n        case types.lineEndingBlank: {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n\n            atMarker = undefined\n          }\n\n          break\n        }\n\n        case types.linePrefix:\n        case types.listItemValue:\n        case types.listItemMarker:\n        case types.listItemPrefix:\n        case types.listItemPrefixWhitespace: {\n          // Empty.\n\n          break\n        }\n\n        default: {\n          atMarker = undefined\n        }\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === types.listItemPrefix) ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === types.listUnordered ||\n            event[1].type === types.listOrdered))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === types.lineEnding ||\n              tailEvent[1].type === types.lineEndingBlank\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = types.lineEndingBlank\n                listSpread = true\n              }\n\n              tailEvent[1].type = types.lineEnding\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === types.linePrefix ||\n              tailEvent[1].type === types.blockQuotePrefix ||\n              tailEvent[1].type === types.blockQuotePrefixWhitespace ||\n              tailEvent[1].type === types.blockQuoteMarker ||\n              tailEvent[1].type === types.listItemIndent\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === types.listItemPrefix) {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    assert(parent, 'expected `parent`')\n    assert('children' in parent, 'expected `parent`')\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler || undefined])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    assert(node, 'expected `node`')\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    assert(node.type !== 'fragment', 'unexpected fragment `exit`ed')\n    assert(node.position, 'expected `position` to be defined')\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      assert(ancestor, 'expected nodes on stack')\n      assert(ancestor.type === 'list', 'expected list on stack')\n      ancestor.start = Number.parseInt(\n        this.sliceSerialize(token),\n        constants.numericBaseDecimal\n      )\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n\n      assert(\n        depth === 1 ||\n          depth === 2 ||\n          depth === 3 ||\n          depth === 4 ||\n          depth === 5 ||\n          depth === 6,\n        'expected `depth` between `1` and `6`'\n      )\n\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    node.depth =\n      this.sliceSerialize(token).codePointAt(0) === codes.equalsTo ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert('children' in node, 'expected parent on stack')\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n\n    let tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected a `node` to be on the stack')\n    assert('value' in tail, 'expected a `literal` to be on the stack')\n    assert(tail.position, 'expected `node` to have an open position')\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    assert(context, 'expected `node`')\n\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      assert('children' in context, 'expected `parent`')\n      const tail = context.children[context.children.length - 1]\n      assert(tail.position, 'expected tail to have a starting position')\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'inlineCode', 'expected inline code on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'image', 'expected image on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    assert(ancestor, 'expected ancestor on stack')\n    assert(\n      ancestor.type === 'image' || ancestor.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    assert(fragment, 'expected node on stack')\n    assert(fragment.type === 'fragment', 'expected fragment on stack')\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // Assume a reference.\n    this.data.inReference = true\n\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image reference or link reference on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    assert(\n      token.type === 'characterReferenceMarkerNumeric' ||\n        token.type === 'characterReferenceMarkerHexadecimal'\n    )\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === types.characterReferenceMarkerNumeric\n          ? constants.numericBaseDecimal\n          : constants.numericBaseHexadecimal\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      assert(result !== false, 'expected reference to decode')\n      value = result\n    }\n\n    const tail = this.stack[this.stack.length - 1]\n    assert(tail, 'expected `node`')\n    assert('value' in tail, 'expected `node.value`')\n    tail.value += value\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected `node`')\n    assert(tail.position, 'expected `node.position`')\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {line: d.line, column: d.column, offset: d.offset}\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n\n          break\n        }\n\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n\n          break\n        }\n\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({start: left.start, end: left.end}) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {createElement, useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    /* c8 ignore next 7 -- hooks are client-only. */\n    function () {\n      const file = createFile(options)\n      processor.run(processor.parse(file), file, function (error, tree) {\n        setError(error)\n        setTree(tree)\n      })\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  /* c8 ignore next -- hooks are client-only. */\n  if (error) throw error\n\n  /* c8 ignore next -- hooks are client-only. */\n  return tree ? post(tree, options) : createElement(Fragment)\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol'\n\nconst wwwPrefix = {tokenize: tokenizeWwwPrefix, partial: true}\nconst domain = {tokenize: tokenizeDomain, partial: true}\nconst path = {tokenize: tokenizePath, partial: true}\nconst trail = {tokenize: tokenizeTrail, partial: true}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\n\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\n\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\n\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {text}\n}\n\n/** @type {Code} */\nlet code = codes.digit0\n\n// Add alphanumerics.\nwhile (code < codes.leftCurlyBrace) {\n  text[code] = emailAutolink\n  code++\n  if (code === codes.colon) code = codes.uppercaseA\n  else if (code === codes.leftSquareBracket) code = codes.lowercaseA\n}\n\ntext[codes.plusSign] = emailAutolink\ntext[codes.dash] = emailAutolink\ntext[codes.dot] = emailAutolink\ntext[codes.underscore] = emailAutolink\ntext[codes.uppercaseH] = [emailAutolink, protocolAutolink]\ntext[codes.lowercaseH] = [emailAutolink, protocolAutolink]\ntext[codes.uppercaseW] = [emailAutolink, wwwAutolink]\ntext[codes.lowercaseW] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === codes.atSign) {\n      effects.consume(code)\n      return emailDomain\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === codes.dot) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== codes.uppercaseW && code !== codes.lowercaseW) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === codes.uppercaseH || code === codes.lowercaseH) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n\n    if (code === codes.colon) {\n      const protocol = buffer.toLowerCase()\n\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n\n      if (seen) {\n        return afterProtocol\n      }\n\n      seen = true\n      return protocolSlashesInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === codes.eof ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === codes.uppercaseW || code === codes.lowercaseW) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n\n    if (code === codes.dot && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === codes.eof ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === codes.dot || code === codes.underscore) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== codes.dash && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === codes.underscore) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === codes.leftParenthesis) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === codes.rightParenthesis && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === codes.exclamationMark ||\n      code === codes.quotationMark ||\n      code === codes.ampersand ||\n      code === codes.apostrophe ||\n      code === codes.rightParenthesis ||\n      code === codes.asterisk ||\n      code === codes.comma ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.semicolon ||\n      code === codes.lessThan ||\n      code === codes.questionMark ||\n      code === codes.rightSquareBracket ||\n      code === codes.underscore ||\n      code === codes.tilde\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n\n    if (\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === codes.rightParenthesis) {\n      sizeClose++\n    }\n\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === codes.exclamationMark ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.rightParenthesis ||\n      code === codes.asterisk ||\n      code === codes.comma ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.semicolon ||\n      code === codes.questionMark ||\n      code === codes.underscore ||\n      code === codes.tilde\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === codes.ampersand) {\n      effects.consume(code)\n      return trailCharacterReferenceStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n\n    if (\n      // `<` is an end.\n      code === codes.lessThan ||\n      // So is whitespace.\n      code === codes.eof ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === codes.eof ||\n      code === codes.leftParenthesis ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === codes.semicolon) {\n      effects.consume(code)\n      return trail\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharacterReferenceInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === codes.eof ||\n    code === codes.leftParenthesis ||\n    code === codes.asterisk ||\n    code === codes.underscore ||\n    code === codes.leftSquareBracket ||\n    code === codes.rightSquareBracket ||\n    code === codes.tilde ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === codes.slash || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === codes.plusSign ||\n    code === codes.dash ||\n    code === codes.dot ||\n    code === codes.underscore ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\nconst indent = {tokenize: tokenizeIndent, partial: true}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [codes.leftSquareBracket]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {tokenize: tokenizeDefinitionContinuation},\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [codes.leftSquareBracket]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [codes.rightSquareBracket]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === types.labelImage) {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === types.labelLink ||\n      token.type === types.label ||\n      token.type === types.image ||\n      token.type === types.link\n    ) {\n      break\n    }\n  }\n\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.rightSquareBracket, 'expected `]`')\n\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({start: labelStart.end, end: self.now()})\n    )\n\n    if (id.codePointAt(0) !== codes.caret || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === types.labelImage &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  assert(labelStart, 'expected `labelStart` to resolve')\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = types.data\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: types.chunkString,\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n\n  events.splice(index, events.length - index + 1, ...replacement)\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== codes.caret) return nok(code)\n\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > constants.linkReferenceSizeMax ||\n      // Closing brace with nothing.\n      (code === codes.rightSquareBracket && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === codes.backslash ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === codes.caret) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > constants.linkReferenceSizeMax ||\n      // Closing brace with nothing.\n      (code === codes.rightSquareBracket && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === codes.colon) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    constants.tabSize + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === constants.tabSize\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {[codes.tilde]: tokenizer},\n    insideSpan: {null: [tokenizer]},\n    attentionMarkers: {null: [codes.tilde]}\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n\n            const insideSpan = context.parser.constructs.insideSpan.null\n\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n\n            splice(events, open - 1, index - open + 3, nextEvents)\n\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = types.data\n      }\n    }\n\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      assert(code === codes.tilde, 'expected `~`')\n\n      if (\n        previous === codes.tilde &&\n        events[events.length - 1][1].type !== types.characterEscape\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === codes.tilde) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open =\n        !after || (after === constants.attentionSideAfter && Boolean(before))\n      token._close =\n        !before || (before === constants.attentionSideAfter && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n\n    vecs.push(events.slice())\n    events.length = 0\n\n    let slice = vecs.pop()\n\n    while (slice) {\n      for (const element of slice) {\n        events.push(element)\n      }\n\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n\n    index += 1\n  }\n\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\nimport {ok as assert} from 'devlop'\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  assert(events[index][1].type === 'table', 'expected table')\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n\n  while (index < events.length) {\n    const event = events[index]\n\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n\n    index += 1\n  }\n\n  return align\n}\n","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {name: 'table', tokenize: tokenizeTable, resolveAll: resolveTable}\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === types.lineEnding ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === types.linePrefix\n      )\n        index--\n      else break\n    }\n\n    const tail = index > -1 ? self.events[index][1].type : null\n\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === codes.verticalBar) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === codes.eof) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter(types.lineEnding)\n        effects.consume(code)\n        effects.exit(types.lineEnding)\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, types.whitespace)(code)\n    }\n\n    sizeB += 1\n\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n\n    if (code === codes.verticalBar) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter(types.data)\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (\n      code === codes.eof ||\n      code === codes.verticalBar ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.data)\n      return headRowBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === codes.backslash || code === codes.verticalBar) {\n      effects.consume(code)\n      return headRowData\n    }\n\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n\n    if (markdownSpace(code)) {\n      assert(self.parser.constructs.disable.null, 'expected `disabled.null`')\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        types.linePrefix,\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : constants.tabSize\n      )(code)\n    }\n\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === codes.dash || code === codes.colon) {\n      return headDelimiterValueBefore(code)\n    }\n\n    if (code === codes.verticalBar) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterValueBefore,\n        types.whitespace\n      )(code)\n    }\n\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === codes.colon) {\n      sizeB += 1\n      seen = true\n\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === codes.dash) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === codes.dash) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === codes.colon) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterCellAfter,\n        types.whitespace\n      )(code)\n    }\n\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === codes.verticalBar) {\n      return headDelimiterBefore(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === codes.verticalBar) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, types.whitespace)(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter(types.data)\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (\n      code === codes.eof ||\n      code === codes.verticalBar ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.data)\n      return bodyRowBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === codes.backslash || code === codes.verticalBar) {\n      effects.consume(code)\n      return bodyRowData\n    }\n\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n\n  const map = new EditMap()\n\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          assert(currentTable, 'there should be a table opening')\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === types.data ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === types.data ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n\n  if (lastTableEnd !== 0) {\n    assert(currentTable, 'expected table opening')\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n        ? 'tableDelimiter'\n        : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    assert(previousCell, 'expected previous cell enter')\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    assert(range[3] !== 0)\n\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = types.chunkText\n      start[1].contentType = constants.contentTypeText\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\nconst tasklistCheck = {name: 'tasklistCheck', tokenize: tokenizeTasklistCheck}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {[codes.leftSquareBracket]: tasklistCheck}\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== codes.eof ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === codes.uppercaseX || code === codes.lowercaseX) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, types.whitespace)\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === codes.eof ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","(function (Prism) {\n\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\talias: 'language-javascript',\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?=\\{)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n}(Prism));\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:False|None|True)\\b/,\n\t'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n\t'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n","(function (Prism) {\n\t// $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n\t// + LC_ALL, RANDOM, REPLY, SECONDS.\n\t// + make sure PS1..4 are here as they are not always set,\n\t// - some useless things.\n\tvar envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n\n\tvar commandAfterHeredoc = {\n\t\tpattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n\t\tlookbehind: true,\n\t\talias: 'punctuation', // this looks reasonably well in all themes\n\t\tinside: null // see below\n\t};\n\n\tvar insideString = {\n\t\t'bash': commandAfterHeredoc,\n\t\t'environment': {\n\t\t\tpattern: RegExp('\\\\$' + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': [\n\t\t\t// [0]: Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/^\\$\\(\\(/\n\t\t\t\t\t],\n\t\t\t\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\t'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\t'punctuation': /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [1]: Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [2]: Brace expansion\n\t\t\t{\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n\t\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t\t'environment': {\n\t\t\t\t\t\tpattern: RegExp('(\\\\{)' + envVars),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'constant'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\$(?:\\w+|[#?*!@$])/\n\t\t],\n\t\t// Escape sequences from echo and printf's manuals, and escaped quotes.\n\t\t'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n\t};\n\n\tPrism.languages.bash = {\n\t\t'shebang': {\n\t\t\tpattern: /^#!\\s*\\/.*/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\"{\\\\$])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function-name': [\n\t\t\t// a) function foo {\n\t\t\t// b) foo() {\n\t\t\t// c) function foo() {\n\t\t\t// but not “foo {”\n\t\t\t{\n\t\t\t\t// a) and c)\n\t\t\t\tpattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// b)\n\t\t\t\tpattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n\t\t\t\talias: 'function'\n\t\t\t}\n\t\t],\n\t\t// Highlight variable names as variables in for and select beginnings.\n\t\t'for-or-select': {\n\t\t\tpattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight variable names as variables in the left-hand part\n\t\t// of assignments (“=” and “+=”).\n\t\t'assign-left': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n\t\t\tinside: {\n\t\t\t\t'environment': {\n\t\t\t\t\tpattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'constant'\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight parameter names as variables\n\t\t'parameter': {\n\t\t\tpattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': [\n\t\t\t// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t// Here-document with quotes around the tag\n\t\t\t// → No expansion (so no “inside”).\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'bash': commandAfterHeredoc\n\t\t\t\t}\n\t\t\t},\n\t\t\t// “Normal” string\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n\t\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n\t\t\t\tpattern: /(^|[^$\\\\])'[^']*'/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n\t\t\t\tpattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'entity': insideString.entity\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'environment': {\n\t\t\tpattern: RegExp('\\\\$?' + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': insideString.variable,\n\t\t'function': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t// https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t\t'builtin': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true,\n\t\t\t// Alias added to make those easier to distinguish from strings.\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'file-descriptor': {\n\t\t\tpattern: /\\B&\\d\\b/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'operator': {\n\t\t\t// Lots of redirections here, but not just that.\n\t\t\tpattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n\t\t\tinside: {\n\t\t\t\t'file-descriptor': {\n\t\t\t\t\tpattern: /^\\d/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n\t\t'number': {\n\t\t\tpattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\tcommandAfterHeredoc.inside = Prism.languages.bash;\n\n\t/* Patterns in command substitution. */\n\tvar toBeCopied = [\n\t\t'comment',\n\t\t'function-name',\n\t\t'for-or-select',\n\t\t'assign-left',\n\t\t'parameter',\n\t\t'string',\n\t\t'environment',\n\t\t'function',\n\t\t'keyword',\n\t\t'builtin',\n\t\t'boolean',\n\t\t'file-descriptor',\n\t\t'operator',\n\t\t'punctuation',\n\t\t'number'\n\t];\n\tvar inside = insideString.variable[1].inside;\n\tfor (var i = 0; i < toBeCopied.length; i++) {\n\t\tinside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n\t}\n\n\tPrism.languages.sh = Prism.languages.bash;\n\tPrism.languages.shell = Prism.languages.bash;\n}(Prism));\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","/* global console */\n/* global fetch */\n/* global document */\n/* global console */\n/* global fetch */\n/* global document */\n/* global console */\n/* global fetch */\n/* global document */\n/* global document, fetch, console */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  CircularProgress,\n  useTheme,\n} from \"@mui/material\";\nimport {\n  Article as ArticleIcon,\n  Code as CodeIcon,\n  Build as BuildIcon,\n} from \"@mui/icons-material\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-python\";\nimport \"prismjs/components/prism-bash\";\nimport \"prismjs/components/prism-json\";\n\nconst Documentation = () => {\n  const theme = useTheme();\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [markdownContent, setMarkdownContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Highlight code blocks after render\n  useEffect(() => {\n    if (markdownContent) {\n      Prism.highlightAll();\n    }\n  }, [markdownContent]);\n\n  const sections = [\n    {\n      title: \"Getting Started\",\n      icon: <ArticleIcon color=\"primary\" />,\n      items: [\n        { title: \"Introduction\", path: \"/docs/README.md\" },\n        { title: \"Installation\", path: \"/docs/INSTALL.md\" },\n        { title: \"Configuration\", path: \"/docs/CONFIG.md\" },\n      ],\n    },\n    {\n      title: \"Features\",\n      icon: <CodeIcon color=\"primary\" />,\n      items: [\n        { title: \"Diff Viewer\", path: \"/docs/features/diff-viewer.md\" },\n        { title: \"AI Analysis\", path: \"/docs/features/ai-analysis.md\" },\n        { title: \"Impact Analysis\", path: \"/docs/features/impact-analysis.md\" },\n      ],\n    },\n    {\n      title: \"Advanced\",\n      icon: <BuildIcon color=\"primary\" />,\n      items: [\n        { title: \"API Reference\", path: \"/docs/api/README.md\" },\n        { title: \"Contributing\", path: \"/docs/CONTRIBUTING.md\" },\n        { title: \"Architecture\", path: \"/docs/ARCHITECTURE.md\" },\n      ],\n    },\n  ];\n\n  useEffect(() => {\n    const fetchMarkdown = async (path) => {\n      if (!path) {\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await fetch(path);\n        if (!response.ok) {\n          throw new Error(\"Failed to load documentation\");\n        }\n        const text = await response.text();\n        setMarkdownContent(text);\n      } catch (error) {\n        console.error(\"Error loading documentation:\", error);\n        setMarkdownContent(\n          \"# Error\\nFailed to load documentation. Please try again later.\",\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (selectedDoc) {\n      fetchMarkdown(selectedDoc);\n    }\n  }, [selectedDoc]);\n\n  return (\n    <Box sx={{ py: 6 }}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h3\" align=\"center\" gutterBottom>\n          Documentation\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          align=\"center\"\n          color=\"text.secondary\"\n          sx={{ mb: 6 }}\n        >\n          Everything you need to know about Local Rabbit\n        </Typography>\n\n        <Grid container spacing={4}>\n          { /* Documentation Navigation */}\n          <Grid item xs={12} md={3}>\n            <Paper\n              elevation={0}\n              sx={{\n                height: \"100%\",\n                border: 1,\n                borderColor: \"divider\",\n              }}\n            >\n              {sections.map((section) => (\n                <Box key={section.title}>\n                  <Box sx={{ p: 2 }}>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 1,\n                        mb: 1,\n                      }}\n                    >\n                      {section.icon}\n                      <Typography variant=\"subtitle1\" fontWeight=\"medium\">\n                        {section.title}\n                      </Typography>\n                    </Box>\n                    <List dense>\n                      {section.items.map((item) => (\n                        <ListItem\n                          key={item.path}\n                          button\n                          selected={selectedDoc === item.path}\n                          onClick={() => setSelectedDoc(item.path)}\n                          sx={{\n                            borderRadius: 1,\n                            mb: 0.5,\n                            \"&.Mui-selected\": {\n                              backgroundColor: \"primary.main\",\n                              color: \"primary.contrastText\",\n                              \"&:hover\": {\n                                backgroundColor: \"primary.dark\",\n                              },\n                            },\n                          }}\n                        >\n                          <ListItemText\n                            primary={item.title}\n                            primaryTypographyProps={{\n                              variant: \"body2\",\n                            }}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n                  <Divider />\n                </Box>\n              ))}\n            </Paper>\n          </Grid>\n\n          { /* Documentation Content */}\n          <Grid item xs={12} md={9}>\n            <Paper\n              elevation={0}\n              sx={{\n                p: 4,\n                minHeight: 600,\n                border: 1,\n                borderColor: \"divider\",\n              }}\n            >\n              {isLoading ? (\n                <Box sx={{ display: \"flex\", justifyContent: \"center\", pt: 8 }}>\n                  <CircularProgress />\n                </Box>\n              ) : selectedDoc ? (\n                <Box\n                  sx={{\n                    \"& img\": { maxWidth: \"100%\" },\n                    \"& pre\": {\n                      margin: \"16px 0\",\n                      padding: \"16px\",\n                      borderRadius: 1,\n                      overflow: \"auto\",\n                      backgroundColor:\n                        theme.palette.mode === \"dark\"\n                          ? \"rgba(0, 0, 0, 0.2)\"\n                          : \"rgba(0, 0, 0, 0.04)\",\n                      border: `1px solid ${theme.palette.divider}`,\n                    },\n                    \"& code\": {\n                      fontFamily: \"JetBrains Mono, monospace\",\n                      fontSize: \"0.875rem\",\n                    },\n                    \"& :not(pre) > code\": {\n                      padding: \"2px 6px\",\n                      borderRadius: 1,\n                      backgroundColor:\n                        theme.palette.mode === \"dark\"\n                          ? \"rgba(0, 0, 0, 0.2)\"\n                          : \"rgba(0, 0, 0, 0.04)\",\n                    },\n                  }}\n                >\n                  <ReactMarkdown\n                    remarkPlugins={[remarkGfm]}\n                    components={{\n                      code({ inline, className, children, ...props }) {\n                        const match = /language-(\\w+)/.exec(className || \"\");\n                        const language = match ? match[1] : \"\";\n\n                        return !inline ? (\n                          <pre className={`language-${language}`}>\n                            <code className={`language-${language}`} {...props}>\n                              {String(children).replace(/\\n$/, \"\")}\n                            </code>\n                          </pre>\n                        ) : (\n                          <code className={className} {...props}>\n                            {children}\n                          </code>\n                        );\n                      },\n                    }}\n                  >\n                    {markdownContent}\n                  </ReactMarkdown>\n                </Box>\n              ) : (\n                <Box\n                  sx={{ textAlign: \"center\", color: \"text.secondary\", pt: 8 }}\n                >\n                  <Typography>\n                    Select a document from the navigation to view its contents\n                  </Typography>\n                </Box>\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Documentation;\n"],"names":["_excluded","useUtilityClasses","ownerState","absolute","children","classes","flexItem","light","orientation","textAlign","variant","composeClasses","getDividerUtilityClass","DividerRoot","styled","props","styles","theme","_extends","alpha","DividerWrapper","Divider","React.forwardRef","inProps","ref","useDefaultProps","className","component","role","other","_objectWithoutPropertiesLoose","_jsx","clsx","PropTypes","getListItemUtilityClass","slot","generateUtilityClass","listItemClasses","generateUtilityClasses","listItemButtonClasses","getListItemSecondaryActionClassesUtilityClass","disableGutters","ListItemSecondaryActionRoot","ListItemSecondaryAction","context","React.useContext","ListContext","_excluded2","overridesResolver","alignItems","button","dense","disabled","disablePadding","divider","hasSecondaryAction","selected","ListItemRoot","ListItemContainer","ListItem","autoFocus","childrenProp","componentProp","components","componentsProps","ContainerComponent","ContainerClassName","focusVisibleClassName","secondaryAction","slotProps","slots","ContainerProps","childContext","React.useMemo","listItemRef","React.useRef","useEnhancedEffect","React.Children","isMuiElement","handleRef","useForkRef","Root","rootProps","componentProps","Component","ButtonBase","_jsxs","isHostComponent","chainPropTypes","secondaryActionIndex","i","child","elementTypeAcceptingRef","inset","primary","secondary","getListItemTextUtilityClass","ListItemTextRoot","listItemTextClasses","ListItemText","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","Typography","ArticleIcon","createSvgIcon","BuildIcon","AssertionError","message","actual","expected","operator","generated","ok","value","assert","unreachable","bool","defaultMessage","userMessage","stringify","values","options","settings","nameRe","nameReJsx","emptyOptions","name","re","whitespace","thing","empty","Schema","property","normal","space","merge","definitions","definition","normalize","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","types","DefinedInfo","mask","index","mark","check","key","create","properties","normals","info","aria","_","caseSensitiveTransform","attributes","caseInsensitiveTransform","html","svg","xlink","xmlns","xml","hastToReact","cap","dash","valid","find","schema","Type","rest","camelcase","dashes","kebab","$0","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","style","lineno","column","updatePosition","str","lines","position","start","node","Position","error","msg","err","match","m","comments","rules","c","comment","pos","declaration","prop","val","ret","trim","declarations","decls","decl","__importDefault","this","mod","cjs","StyleToObject","inline_style_parser_1","require$$0","iterator","styleObject","hasIterator","utilities","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","skipCamelCase","capitalize","character","trimHyphen","prefix","camelCase","style_to_object_1","utilities_1","require$$1","StyleToJS","output","pointEnd","point","pointStart","type","end","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","parent","own","emptyMap","tableElements","tableCellElement","docs","toJsxRuntime","tree","filePath","developmentCreate","productionCreate","state","result","one","element","mdxExpression","mdxJsxElement","mdxEsm","root","text","parentSchema","findComponentFromName","createElementProps","createChildren","addNode","addChildren","expression","crashEstree","createJsxElementProps","jsx","jsxs","fn","jsxDEV","isStaticChildren","alignValue","createProperty","objectExpression","countsByName","count","commas","spaces","parseStyle","transformStylesToCssCasing","styleToJs","cause","allowExpression","identifiers","isIdentifierName","place","domCasing","cssCasing","from","transformStyleToCssCasing","to","toDash","urlAttributes","toString","includeImageAlt","includeHtml","all","decodeNamedCharacterReference","characterReference","char","codes","constants","splice","list","remove","items","chunkStart","parameters","push","hasOwnProperty","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","code","constructs","existing","before","decodeNumericCharacterReference","base","normalizeIdentifier","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","normalizeUri","skip","replace","next","factorySpace","effects","max","limit","size","content","initializeContent","contentStart","afterContentStartConstruct","paragraphInitial","previous","lineStart","token","data","document","initializeDocument","containerConstruct","tokenizeContainer","self","stack","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","endOfFile","stream","seen","entry","nok","classifyCharacter","resolveAll","events","called","resolve","attention","resolveAllAttention","tokenizeAttention","open","group","openingSequence","closingSequence","use","nextEvents","offset","movePoint","attentionMarkers","marker","inside","after","close","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","blockQuote","tokenizeBlockQuoteContinuation","exit","tokenizeBlockQuoteStart","contStart","contBefore","characterEscape","tokenizeCharacterEscape","tokenizeCharacterReference","test","numeric","nonLazyContinuation","tokenizeNonLazyContinuation","codeFenced","tokenizeCodeFenced","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","tail","sequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","codeIndented","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","codeText","resolveCodeText","tokenizeCodeText","tailExitIndex","headEnterIndex","enter","between","SpliceBuffer","initial","stop","deleteCount","removed","chunkedPush","subtokenize","eventsArray","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","slice","resolveContent","tokenizeContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","resolveHeadingAtx","tokenizeHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","resolveToHtmlFlow","tokenizeHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","continuation","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","resolveAllLabelEnd","resolveToLabelEnd","tokenizeLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","newEvents","media","label","labelStart","defined","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","sequence","tokenizeListContinuation","tokenizeListEnd","tokenizeListStart","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","onBlank","endOfPrefix","otherPrefix","notBlank","notInCurrentItem","setextUnderline","resolveToSetextUnderline","tokenizeSetextUnderline","heading","paragraph","flow","initializeFlow","atBlankEnding","afterConstruct","resolver","createResolver","string","initializeFactory","field","resolveAllLineSuffixes","initializeText","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","contentInitial","flowInitial","insideSpan","resolveText","disable","s","h","d","w","y","ms","parse","fmtLong","fmtShort","n","msAbs","plural","isPlural","setup","env","createDebug","coerce","enable","enabled","destroy","selectColor","namespace","hash","prevTime","enableOverride","namespacesCache","enabledCache","debug","args","curr","format","formatter","extend","v","delimiter","newDebug","namespaces","split","ns","matchesTemplate","search","template","searchIndex","templateIndex","starIndex","matchIndex","common","exports","formatArgs","save","load","useColors","localstorage","warned","module","lastC","r","define_process_env_default","formatters","createTokenizer","parser","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","consume","defineSkip","now","sliceSerialize","sliceStream","write","expectedCode","main","addResult","expandTabs","serializeChunks","sliceChunks","_bufferIndex","_index","line","accountForPotentialSkip","chunkIndex","go","fields","construct","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","map","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","restore","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","atTab","defaultConstructs","creator","postprocess","preprocess","atCarriageReturn","preprocessor","encoding","endPosition","characterEscapeOrReference","decodeString","decode","$1","$2","hex","fromMarkdown","compiler","config","opener","link","onenterdata","codeFlow","emphasis","hardBreak","image","listItem","onenterlistitemvalue","onenterlistordered","onenterreference","strong","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","compile","resume","listStack","prepareList","handler","defaultOnError","length","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","and","errorHandler","onExitError","ancestor","depth","siblings","referenceType","fragment","combined","remarkParse","doc","blockquote","strikethrough","footnoteReference","clobberPrefix","id","safeId","counter","reuseCounter","sup","revert","subtype","suffix","contents","imageReference","inlineCode","linkReference","results","loose","listLoose","listItemLoose","spread","table","rows","firstRow","tableContent","body","tableRow","align","cellIndex","cells","cell","tableCell","tab","trimLines","source","last","trimLine","handlers","ignore","VOID","PRIMITIVE","ARRAY","OBJECT","DATE","REGEXP","MAP","SET","ERROR","BIGINT","deserializer","$","as","out","unpair","arr","object","flags","set","deserialize","serialized","EMPTY","keys","typeOf","asString","shouldSkip","TYPE","serializer","strict","json","pair","entries","serialize","lossy","structuredClone$1","any","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","tailTail","structuredClone","convert","castFactory","anyFactory","propsFactory","typeFactory","tests","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","overload","createState","definitionById","footnoteById","footnoteCounts","defaultHandlers","applyData","patch","wrap","handle","shallow","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","hName","hChildren","hProperties","toHast","foot","remarkRehype","destination","file","hastTree","bail","hasOwn","toStr","defineProperty","gOPD","isArray","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","getProperty","src","copy","copyIsArray","clone","deep","prototype","trough","fns","pipeline","run","middlewareIndex","callback","middelware","middleware","wrapped","fnExpectsCallback","done","exception","then","minpath","basename","dirname","extname","join","path","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","minproc","cwd","isUrl","fileUrlOrPath","urlToPath","getPathFromURLPosix","url","pathname","third","order","VFile","isUint8Array","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","apply","Processor","attacher","assertUnfrozen","transformer","realFile","vfile","assertParser","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","looksLikeAValue","complete","assertDone","assertNode","transformers","outputTree","resultingTree","attachers","addPlugin","addList","addPreset","add","plugin","plugins","entryIndex","currentPrimary","isPlainObj","unified","frozen","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","processor","createProcessor","createFile","post","rehypePlugins","remarkPlugins","remarkRehypeOptions","allowedElements","allowElement","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","transform","Fragment","colon","questionMark","numberSign","ccount","escapeStringRegexp","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","change","matchObject","tupleOrList","tuple","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","protocol","domain","isCorrectDomain","parts","splitUrl","atext","trailExec","trail","closingParenIndex","openingParens","closingParens","email","footnoteReferencePeek","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","subexit","gfmFootnoteFromMarkdown","gfmFootnoteToMarkdown","firstLineBlank","footnoteDefinition","mapAll","mapExceptFirst","blank","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","defaultStringLength","markdownTable","stringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","toAlignment","patternInScope","pattern","listInScope","none","_1","longestStreak","substring","formatCodeAsIndented","checkFence","checkQuote","quote","checkEmphasis","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","emphasisPeek","betweenHead","betweenTail","formatHeadingAsSetext","literalWithBreak","rank","htmlPeek","imagePeek","imageReferencePeek","alt","reference","inlineCodePeek","formatLinkAsAutolink","linkPeek","linkReferencePeek","checkBullet","checkBulletOther","bullet","bulletOther","checkBulletOrdered","checkRule","bulletCurrent","useDifferentMarker","firstListItem","checkListItemIndent","listItemIndent","phrasing","checkStrong","strongPeek","checkRuleRepetition","repetition","gfmTableFromMarkdown","enterTable","enterCell","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","padding","alignDelimiters","around","inlineCodeWithTable","handleTable","handleTableCell","handleTableRow","serializeData","handleTableAsData","handleTableRowAsData","matrix","gfmTaskListItemFromMarkdown","exitCheck","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","wwwPrefix","tokenizeWwwPrefix","tokenizeDomain","tokenizePath","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","dot","gfmAtext","previousUnbalanced","emailDomain","emailDomainAfter","emailDomainDot","wwwStart","wwwAfter","protocolStart","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","call","replacement","callStart","callData","callEscape","labelAtMarker","whitespaceAfter","gfmStrikethrough","single","tokenizeStrikethrough","resolveAllStrikethrough","EditMap","addImplementation","a","b","vecs","editMap","at","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","valueName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","_self","Prism","lang","uniqueId","plainTextGrammar","encode","tokens","Token","o","deepClone","visited","language","scripts","defaultActivation","no","classList","redef","insert","grammar","newToken","old","DFS","objId","propertyType","async","container","insertHighlightedCode","highlightedCode","worker","evt","tokenList","LinkedList","addAfter","matchGrammar","toArray","hooks","callbacks","alias","matchedStr","e","aliases","matchPattern","lookbehind","lookbehindLength","startNode","startPos","rematch","patterns","j","patternObj","greedy","currentNode","removeCount","p","k","matchStr","reach","removeFrom","removeRange","nestedRematch","newNode","array","immediateClose","script","highlightAutomaticallyCallback","readyState","global","includedCdataInside","def","attrName","markup","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","loadFile","success","xhr","parseRange","comma","pre","autoloader","elements","logged","javascript","braces","stringifyToken","walkTokens","openedTags","notTagNorBrace","plainText","typeInside","envVars","commandAfterHeredoc","insideString","toBeCopied","Documentation","useTheme","selectedDoc","setSelectedDoc","useState","markdownContent","setMarkdownContent","isLoading","setIsLoading","useEffect","sections","CodeIcon","response","Box","Container","Grid","Paper","section","List","CircularProgress","ReactMarkdown","inline"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]}