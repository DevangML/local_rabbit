{"version":3,"file":"ImpactView-DGOHgS3T.js","sources":["../../../../node_modules/@mui/icons-material/esm/Architecture.js","../../../../node_modules/@mui/icons-material/esm/BugReport.js","../../../../node_modules/@mui/icons-material/esm/TrendingUp.js","../../src/components/ImpactView/ImpactView.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.36 18.78 6.61 21l1.62-1.54 2.77-7.6c-.68-.17-1.28-.51-1.77-.98zm8.41-7.9c-.49.47-1.1.81-1.77.98l2.77 7.6L17.39 21l.26-2.22zM15 8c0-1.3-.84-2.4-2-2.82V3h-2v2.18C9.84 5.6 9 6.7 9 8c0 1.66 1.34 3 3 3s3-1.34 3-3m-3 1c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1\"\n}), 'Architecture');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20zm-6 8h-4v-2h4zm0-4h-4v-2h4z\"\n}), 'BugReport');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","/* global console */\n/* global fetch */\n/* global console */\n/* global fetch */\n/* global console */\n/* global fetch */\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  CircularProgress,\n  Alert,\n  Grid,\n} from \"@mui/material\";\nimport {\n  Speed as SpeedIcon,\n  TrendingUp as ImpactIcon,\n  BugReport as RiskIcon,\n  Architecture as DependencyIcon,\n} from \"@mui/icons-material\";\n\nconst MetricCard = ({ title, value, icon: Icon, description, color }) => (\n  <Paper sx={{ p: 3, height: \"100%\" }}>\n    <Box sx={{ display: \"flex\", alignItems: \"center\", mb: 2 }}>\n      <Icon sx={{ color: `${color}.main`, mr: 1 }} />\n      <Typography variant=\"h6\">{title}</Typography>\n    </Box>\n    <Typography variant=\"h4\" sx={{ color: `${color}.main`, mb: 1 }}>\n      {value}\n    </Typography>\n    <Typography variant=\"body2\" color=\"text.secondary\">\n      {description}\n    </Typography>\n  </Paper>\n);\n\nconst ImpactView = ({\n  fromBranch,\n  toBranch,\n  branches,\n  onFromBranchChange,\n  onToBranchChange,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [impact, setImpact] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleAnalyzeImpact = async () => {\n    if (!fromBranch || !toBranch) {\n      setError(\"Please select both branches to analyze impact\");\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"/api/impact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          fromBranch,\n          toBranch,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to analyze impact\");\n      }\n\n      const data = await response.json();\n      setImpact(data);\n    } catch (err) {\n      console.error(\"Error analyzing impact:\", err);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ mb: 4 }}>\n        <Typography\n          variant=\"h5\"\n          sx={{ mb: 3, display: \"flex\", alignItems: \"center\", gap: 1 }}\n        >\n          <ImpactIcon color=\"primary\" />\n          Impact Analysis\n        </Typography>\n        <Box sx={{ display: \"flex\", gap: 2, mb: 3 }}>\n          <FormControl sx={{ minWidth: 200 }}>\n            <InputLabel>From Branch</InputLabel>\n            <Select\n              value={fromBranch}\n              label=\"From Branch\"\n              onChange={(e) => onFromBranchChange(e.target.value)}\n            >\n              {branches.map((branch) => (\n                <MenuItem key={branch} value={branch}>\n                  {branch}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl sx={{ minWidth: 200 }}>\n            <InputLabel>To Branch</InputLabel>\n            <Select\n              value={toBranch}\n              label=\"To Branch\"\n              onChange={(e) => onToBranchChange(e.target.value)}\n            >\n              {branches.map((branch) => (\n                <MenuItem key={branch} value={branch}>\n                  {branch}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Button\n            variant=\"contained\"\n            onClick={handleAnalyzeImpact}\n            disabled={!fromBranch || !toBranch || isLoading}\n            startIcon={<SpeedIcon />}\n          >\n            Analyze Impact\n          </Button>\n        </Box>\n      </Box>\n\n      {isLoading ? (\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            gap: 2,\n            py: 8,\n          }}\n        >\n          <CircularProgress />\n          <Typography color=\"text.secondary\">\n            Analyzing impact of changes...\n          </Typography>\n        </Box>\n      ) : error ? (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      ) : !impact ? (\n        <Paper\n          sx={{\n            p: 3,\n            textAlign: \"center\",\n            color: \"text.secondary\",\n            border: \"1px dashed\",\n            borderColor: \"divider\",\n          }}\n        >\n          Select branches and analyze to see the impact of changes\n        </Paper>\n      ) : (\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 3 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6} lg={3}>\n              <MetricCard\n                title=\"Change Impact\"\n                value={impact.changeImpact}\n                icon={ImpactIcon}\n                description=\"Overall impact score of the changes\"\n                color=\"primary\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6} lg={3}>\n              <MetricCard\n                title=\"Risk Level\"\n                value={impact.riskLevel}\n                icon={RiskIcon}\n                description=\"Potential risk assessment\"\n                color=\"error\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6} lg={3}>\n              <MetricCard\n                title=\"Performance Impact\"\n                value={impact.performanceImpact}\n                icon={SpeedIcon}\n                description=\"Impact on system performance\"\n                color=\"warning\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6} lg={3}>\n              <MetricCard\n                title=\"Dependencies\"\n                value={impact.dependencies}\n                icon={DependencyIcon}\n                description=\"Number of affected dependencies\"\n                color=\"info\"\n              />\n            </Grid>\n          </Grid>\n\n          { /* Detailed Analysis */}\n          {impact.details && (\n            <Paper sx={{ p: 3, mt: 3 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Detailed Analysis\n              </Typography>\n              <Box component=\"ul\" sx={{ mt: 2, pl: 2 }}>\n                {impact.details.map((detail, index) => (\n                  <Typography\n                    key={index}\n                    component=\"li\"\n                    color=\"text.secondary\"\n                    sx={{ mb: 1 }}\n                  >\n                    {detail}\n                  </Typography>\n                ))}\n              </Box>\n            </Paper>\n          )}\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default ImpactView;\n"],"names":["DependencyIcon","createSvgIcon","_jsx","RiskIcon","ImpactIcon","MetricCard","title","value","Icon","description","color","jsxDEV","Paper","Box","this","Typography","ImpactView","fromBranch","toBranch","branches","onFromBranchChange","onToBranchChange","isLoading","setIsLoading","useState","impact","setImpact","error","setError","handleAnalyzeImpact","response","data","err","Container","FormControl","InputLabel","Select","e","branch","MenuItem","Button","SpeedIcon","CircularProgress","Alert","Grid","detail","index"],"mappings":"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","x_google_ignoreList":[0,1,2]}